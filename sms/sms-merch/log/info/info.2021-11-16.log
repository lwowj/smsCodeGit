2021-11-16 19:33:50 INFO  main com.hero.sms.MerchApplication Starting MerchApplication on LAPTOP-L07PL5KH with PID 76276 (C:\work\workspaceSmsBf\sms\sms-merch\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-merch)
2021-11-16 19:33:50 INFO  main com.hero.sms.MerchApplication The following profiles are active: test
2021-11-16 19:33:54 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-16 19:33:54 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-16 19:33:55 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 625ms. Found 0 repository interfaces.
2021-11-16 19:33:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$4afc0a7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$5bdd2c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$c487b5b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$d7112a37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$1f360644] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:56 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-16 19:33:56 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-16 19:33:56 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-16 19:33:56 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-16 19:33:56 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-16 19:33:56 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-16 19:33:56 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-16 19:33:56 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-16 19:33:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserLimitMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserLimitMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserLimitServiceImpl' of type [com.hero.sms.service.impl.organization.OrganizationUserLimitServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserMenuMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserMenuServiceImpl' of type [com.hero.sms.service.impl.organization.OrganizationUserMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:33:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentMenuMapper' of type [com.sun.proxy.$Proxy126] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentMenuLimitMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentMenuLimitMapper' of type [com.sun.proxy.$Proxy127] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentMenuLimitServiceImpl' of type [com.hero.sms.service.impl.agent.AgentMenuLimitServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentMenuServiceImpl' of type [com.hero.sms.service.impl.agent.AgentMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'codeMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'codeMapper' of type [com.sun.proxy.$Proxy131] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'codeServiceImpl' of type [com.hero.sms.service.impl.common.CodeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'smsChannelMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'smsChannelMapper' of type [com.sun.proxy.$Proxy134] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sensitiveWordMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sensitiveWordMapper' of type [com.sun.proxy.$Proxy135] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sensitiveWordServiceImpl' of type [com.hero.sms.service.impl.message.SensitiveWordServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sendRecordMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sendRecordMapper' of type [com.sun.proxy.$Proxy139] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'exportRecordMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'exportRecordMapper' of type [com.sun.proxy.$Proxy142] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'exportRecordServiceImpl' of type [com.hero.sms.service.impl.common.ExportRecordServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sendRecordCheckinfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sendRecordCheckinfoMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sendRecordCheckinfoServiceImpl' of type [com.hero.sms.service.impl.message.SendRecordCheckinfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sendRecordServiceImpl' of type [com.hero.sms.service.impl.message.SendRecordServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'returnRecordMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'returnRecordMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'returnRecordServiceImpl' of type [com.hero.sms.service.impl.message.ReturnRecordServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'MQService' of type [com.hero.sms.service.mq.MQService] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'smsGateService' of type [com.hero.sms.service.mq.SmsGateService] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'businessManageImpl' of type [com.hero.sms.service.impl.common.BusinessManageImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'commenReidsConfigure' of type [com.hero.sms.common.configure.CommenReidsConfigure$$EnhancerBySpringCGLIB$$98ab2e54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'commenRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'commenCacheRedisService' of type [com.hero.sms.service.impl.common.CommenCacheRedisService] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'smsChannelServiceImpl' of type [com.hero.sms.service.impl.channel.SmsChannelServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'payChannelMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'payChannelMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'payChannelServiceImpl' of type [com.hero.sms.service.impl.channel.PayChannelServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'blackIpConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'blackIpConfigMapper' of type [com.sun.proxy.$Proxy157] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'blackIpConfigServiceImpl' of type [com.hero.sms.service.impl.common.BlackIpConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mobileBlackMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mobileBlackMapper' of type [com.sun.proxy.$Proxy159] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mobileBlackServiceImpl' of type [com.hero.sms.service.impl.message.MobileBlackServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mobileAreaMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mobileAreaMapper' of type [com.sun.proxy.$Proxy161] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mobileAreaServiceImpl' of type [com.hero.sms.service.impl.message.MobileAreaServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'databaseCache' of type [com.hero.sms.common.DatabaseCache] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'reportMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'reportMapper' of type [com.sun.proxy.$Proxy163] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'reportServiceImpl' of type [com.hero.sms.service.impl.message.ReportServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentSystemConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentSystemConfigMapper' of type [com.sun.proxy.$Proxy164] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentSystemConfigServiceImpl' of type [com.hero.sms.service.impl.agent.AgentSystemConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentServiceImpl' of type [com.hero.sms.service.impl.agent.AgentServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentRechargeOrderMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentRechargeOrderMapper' of type [com.sun.proxy.$Proxy166] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentRechargeOrderServiceImpl' of type [com.hero.sms.service.impl.rechargeOrder.AgentRechargeOrderServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationPropertyMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationPropertyMapper' of type [com.sun.proxy.$Proxy168] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationPropertyServiceImpl' of type [com.hero.sms.service.impl.organization.OrganizationPropertyServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationGroupMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationGroupMapper' of type [com.sun.proxy.$Proxy170] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationGroupServiceImpl' of type [com.hero.sms.service.impl.organization.OrganizationGroupServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationServiceImpl' of type [com.hero.sms.service.impl.organization.OrganizationServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserServiceImpl' of type [com.hero.sms.service.impl.organization.OrganizationUserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:05 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 9999 (http)
2021-11-16 19:34:05 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-9999"]
2021-11-16 19:34:05 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-16 19:34:05 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-16 19:34:06 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-16 19:34:06 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 15234 ms
2021-11-16 19:34:07 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-16 19:34:08 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-16 19:34:08 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-16 19:34:08 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-16 19:34:08 INFO  main org.quartz.simpl.RAMJobStore RAMJobStore initialized.
2021-11-16 19:34:08 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-11-16 19:34:08 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-11-16 19:34:08 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-16 19:34:08 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@21be80f6
2021-11-16 19:34:10 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-16 19:34:11 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-16 19:34:11 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-16 19:34:11 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsMerchAsyncThreadPool'
2021-11-16 19:34:11 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-16 19:34:12 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-16 19:34:12 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-16 19:34:12 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-16 19:34:12 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now
2021-11-16 19:34:12 INFO  main org.quartz.core.QuartzScheduler Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-11-16 19:34:12 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-9999"]
2021-11-16 19:34:12 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 9999 (http) with context path ''
2021-11-16 19:34:12 INFO  main com.hero.sms.MerchApplication Started MerchApplication in 23.062 seconds (JVM running for 26.977)
2021-11-16 19:34:12 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-11-16 19:34:13 INFO  main p6spy 2021-11-16 19:34:13 | 耗时 20 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-11-16 19:34:13 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-11-16 19:34:13 INFO  main p6spy 2021-11-16 19:34:13 | 耗时 2 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-11-16 19:34:13 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-11-16 19:34:13 INFO  main p6spy 2021-11-16 19:34:13 | 耗时 2 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-11-16 19:34:13 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-11-16 19:34:13 INFO  main p6spy 2021-11-16 19:34:13 | 耗时 3 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-11-16 19:34:13 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-11-16 19:34:13 INFO  main p6spy 2021-11-16 19:34:13 | 耗时 13 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-11-16 19:34:13 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-11-16 19:34:13 INFO  main p6spy 2021-11-16 19:34:13 | 耗时 11 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-11-16 19:34:13 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-11-16 19:34:14 INFO  main p6spy 2021-11-16 19:34:14 | 耗时 1369 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-11-16 19:34:23 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-11-16 19:34:23 INFO  main p6spy 2021-11-16 19:34:23 | 耗时 13 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-11-16 19:34:23 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-11-16 19:34:23 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-11-16 19:34:23 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存敏感词信息
2021-11-16 19:34:23 INFO  main p6spy 2021-11-16 19:34:23 | 耗时 6 ms | SQL 语句：
SELECT id, new_word, word FROM t_sensitive_word ORDER BY id DESC;
2021-11-16 19:34:23 INFO  main com.hero.sms.common.DatabaseCache End-敏感词信息缓存完成
2021-11-16 19:34:23 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-11-16 19:34:23 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-11-16 19:34:55 INFO  main com.hero.sms.common.runner.MerchStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-11-16 19:34:55 INFO  main com.hero.sms.common.runner.MerchStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-11-16 19:34:55 INFO  main com.hero.sms.common.runner.MerchStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-11-16 19:34:55 INFO  main com.hero.sms.common.runner.MerchStartedUpRunner                                                       
2021-11-16 19:34:55 INFO  main com.hero.sms.common.runner.MerchStartedUpRunner 短信平台-商户端启动完毕，地址：http://169.254.130.216:9999/login
2021-11-16 19:37:21 INFO  http-nio-9999-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-16 19:37:21 INFO  http-nio-9999-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-11-16 19:37:21 INFO  http-nio-9999-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 34 ms
2021-11-16 19:37:22 INFO  http-nio-9999-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-11-16 19:37:22 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:37:22 | 耗时 2 ms | SQL 语句：
SELECT id, agent_id, approve_state_code, system_name, create_time, remark, system_url, system_logo_url FROM t_agent_system_config WHERE (system_url = '169.254.130.216' AND approve_state_code = '2');
2021-11-16 19:37:36 INFO  http-nio-9999-exec-1 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_loginBehavior169.254.130.216]，描述为 [登录行为验证] 的接口
2021-11-16 19:37:37 INFO  http-nio-9999-exec-4 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-11-16 19:37:37 INFO  http-nio-9999-exec-4 p6spy 2021-11-16 19:37:37 | 耗时 6 ms | SQL 语句：
SELECT org.* FROM t_organization org LEFT JOIN t_organization_user u ON org.Organization_Code = u.Organization_Code WHERE u.User_Account = 'aotuman';
2021-11-16 19:37:37 INFO  http-nio-9999-exec-4 p6spy 2021-11-16 19:37:37 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, approve_state_code, system_name, create_time, remark, system_url, system_logo_url FROM t_agent_system_config WHERE (agent_id = 36 AND approve_state_code = '2');
2021-11-16 19:37:37 INFO  http-nio-9999-exec-4 p6spy 2021-11-16 19:37:37 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'aotuman');
2021-11-16 19:37:37 INFO  http-nio-9999-exec-4 p6spy 2021-11-16 19:37:37 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'aotuman');
2021-11-16 19:37:37 INFO  http-nio-9999-exec-4 p6spy 2021-11-16 19:37:37 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 19:37:37 INFO  http-nio-9999-exec-4 p6spy 2021-11-16 19:37:37 | 耗时 3 ms | SQL 语句：
UPDATE t_organization_user SET User_Password = '8648f67ab999ea07ec1db8c6124b2095', Account_Type = '0', Description = '', User_Name = '凹凸曼', Login_Faild_Count = 0, Last_Login_IP = '内网IP|0|0|内网IP|内网IP', Last_Login_Time = '2021-11-15T22:40:49.000+0800', Organization_Code = '20200331160443FKDW', Login_IP = '169.254.130.216', User_Account = 'aotuman', Create_User = 'admin', Create_Date = '2020-03-31T16:04:44.000+0800', Need_Bind_Google_Key = 0, Status = '1' WHERE Id = 50;
2021-11-16 19:37:37 INFO  http-nio-9999-exec-4 p6spy 2021-11-16 19:37:37 | 耗时 2 ms | SQL 语句：
UPDATE t_organization_user SET Last_Login_IP = '内网IP|0|0|内网IP|内网IP', Last_Login_Time = '2021-11-16T19:37:37.407+0800', Login_IP = '169.254.130.216' WHERE (User_Account = 'aotuman');
2021-11-16 19:37:37 INFO  http-nio-9999-exec-4 p6spy 2021-11-16 19:37:37 | 耗时 11 ms | SQL 语句：
INSERT INTO t_organization_user_login_log (TimeConsuming, Login_State, Organization_Code, User_Account, Local_Ip, Message) VALUES (225, 1, '20200331160443FKDW', 'aotuman', '169.254.130.216', '登录成功');
2021-11-16 19:37:37 INFO  http-nio-9999-exec-4 p6spy 2021-11-16 19:37:37 | 耗时 12 ms | SQL 语句：
INSERT INTO t_organization_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.LoginController.login()', '2021-11-16T19:37:37.541+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 345, ' userAccount: "aotuman" password: "保密" verifyCode: "7kgqu" goologoVerifyCode: "" sessionToken: "131bc8a9ea0e0fb17e62c52a48bd29c4" behaviorCheckToken: "34f840eb0278b06a5dc43a1d26b4771e" verifyInfoToken: "7A773EFDEDE5D7BA040AEE8063AD3B58" rememberMe: "false" request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@42dfca8d', '登录', 'aotuman');
2021-11-16 19:37:37 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:37:37 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'aotuman');
2021-11-16 19:37:37 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:37:37 | 耗时 32 ms | SQL 语句：
SELECT m.perms FROM t_organization_user u LEFT JOIN t_organization_user_limit rm ON (rm.USER_ID = u.Id) LEFT JOIN t_organization_user_menu m ON (m.MENU_ID = rm.MENU_ID) WHERE u.User_Account = 'aotuman' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 19:37:37 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:37:37 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'aotuman');
2021-11-16 19:37:37 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:37:37 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 19:37:38 INFO  http-nio-9999-exec-5 p6spy 2021-11-16 19:37:38 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_organization_user u LEFT JOIN t_organization_user_limit rm ON (rm.USER_ID = u.Id) LEFT JOIN t_organization_user_menu m ON (m.MENU_ID = rm.MENU_ID) WHERE u.User_Account = 'aotuman' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 19:37:38 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:37:38 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'aotuman');
2021-11-16 19:37:38 INFO  http-nio-9999-exec-6 p6spy 2021-11-16 19:37:38 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'aotuman');
2021-11-16 19:37:38 INFO  http-nio-9999-exec-6 p6spy 2021-11-16 19:37:38 | 耗时 6 ms | SQL 语句：
SELECT m.* FROM t_organization_user_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT ur.menu_id FROM t_organization_user_limit ur LEFT JOIN t_organization_user u ON (u.Id = ur.USER_ID) WHERE u.User_Account = 'aotuman') ORDER BY m.order_num;
2021-11-16 19:37:38 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:37:38 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (create_User = 'aotuman' AND merch_read_status = '2');
2021-11-16 19:37:39 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:37:39 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'aotuman');
2021-11-16 19:37:39 INFO  http-nio-9999-exec-3 p6spy 2021-11-16 19:37:39 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'aotuman');
2021-11-16 19:37:39 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:37:39 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 19:37:39 INFO  http-nio-9999-exec-3 p6spy 2021-11-16 19:37:39 | 耗时 14 ms | SQL 语句：
SELECT COUNT(1) FROM t_statistical_orgcode WHERE (org_code = '20200331160443FKDW');
2021-11-16 19:37:39 INFO  http-nio-9999-exec-3 p6spy 2021-11-16 19:37:39 | 耗时 1 ms | SQL 语句：
SELECT agent_id, consume_amount, req_success_count, income_amount, sorting_fail_count, total_count, receipt_fail_count, wait_req_count, req_fail_count, receipt_success_count, org_code, statistical_date, channel_cost_amount, agent_income_amount FROM t_statistical_orgcode WHERE (org_code = '20200331160443FKDW') ORDER BY statistical_date DESC LIMIT 0,10;
2021-11-16 19:37:39 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:37:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (org_code = '20200331160443FKDW' AND create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.999+0800');
2021-11-16 19:37:51 INFO  http-nio-9999-exec-6 p6spy 2021-11-16 19:37:51 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'aotuman');
2021-11-16 19:37:51 INFO  http-nio-9999-exec-6 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_addSendBoxWithTxtFile169.254.130.216]，描述为 [新增SendBoxTxt文件提交表单] 的接口
2021-11-16 19:37:51 INFO  http-nio-9999-exec-6 p6spy 2021-11-16 19:37:51 | 耗时 0 ms | SQL 语句：
SELECT org.*, cost.Id AS cost_Id, cost.Organization_Code AS cost_Organization_Code, cost.sms_type, cost.Cost_Name AS Cost_Name, cost.Cost_Value AS Cost_Value, cost.State AS Cost_State, cost.Channel_Id AS Cost_Channel_Id, cost.Operator AS Cost_Operator, cost.Description AS Cost_Description, cost.Remark AS Cost_Remark, cost.Create_Date AS Cost_Create_Date FROM t_organization org LEFT JOIN t_organization_cost cost ON org.Organization_Code = cost.Organization_Code WHERE org.organization_code = '20200331160443FKDW';
2021-11-16 19:37:51 INFO  http-nio-9999-exec-6 p6spy 2021-11-16 19:37:51 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 36;
2021-11-16 19:37:51 INFO  http-nio-9999-exec-6 p6spy 2021-11-16 19:37:51 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 19:37:51 INFO  http-nio-9999-exec-6 p6spy 2021-11-16 19:37:51 | 耗时 3 ms | SQL 语句：
INSERT INTO t_send_box (agent_id, send_code, sms_number_area, type, audit_state, create_username, org_code, channel_cost_amount, agent_income_amount, sms_content, sms_type, up_agent_id, consume_amount, sms_count, number_count, income_amount, sms_numbers, create_time, client_ip, sms_words, sub_type, up_agent_income_amount) VALUES (36, 'BN20211116193751DSCS6', '+86', 1, 2, 'aotuman', '20200331160443FKDW', 0, 0, '的神鼎飞丹砂法定是', 1, 35, 0, 0, 4, 0, '15590478565,13275867915,15081024107,18959918987', '2021-11-16T19:37:51.472+0800', '169.254.130.216', 9, 1, 0);
2021-11-16 19:37:51 INFO  http-nio-9999-exec-6 p6spy 2021-11-16 19:37:51 | 耗时 2 ms | SQL 语句：
INSERT INTO t_organization_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxController.addSendBoxWithTxtFile()', '2021-11-16T19:37:51.502+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 77, ' request: org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@1b190e4b sendBox: "SendBoxQuery(isTiming=null, isTimingFlag=null, isSortingFlag=null, leTimingTime=null, isNeedSmsNumber=false, sortingStartTime=null, sortingEndTime=null, createStartTime=null, createEndTime=null, moblieFile=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@31876b7c, excludeAuditState=null, ids=null, auditState=2, sessionToken=b91563e3b89204f3c9748a7c73d8bb3b, isLongSms=null)"', '新增SendBox', 'aotuman');
2021-11-16 19:39:23 INFO  http-nio-9999-exec-9 p6spy 2021-11-16 19:39:23 | 耗时 3 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'aotuman');
2021-11-16 19:39:23 INFO  http-nio-9999-exec-9 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_addSendBoxWithTxtFile169.254.130.216]，描述为 [新增SendBoxTxt文件提交表单] 的接口
2021-11-16 19:39:23 INFO  http-nio-9999-exec-9 p6spy 2021-11-16 19:39:23 | 耗时 1 ms | SQL 语句：
SELECT org.*, cost.Id AS cost_Id, cost.Organization_Code AS cost_Organization_Code, cost.sms_type, cost.Cost_Name AS Cost_Name, cost.Cost_Value AS Cost_Value, cost.State AS Cost_State, cost.Channel_Id AS Cost_Channel_Id, cost.Operator AS Cost_Operator, cost.Description AS Cost_Description, cost.Remark AS Cost_Remark, cost.Create_Date AS Cost_Create_Date FROM t_organization org LEFT JOIN t_organization_cost cost ON org.Organization_Code = cost.Organization_Code WHERE org.organization_code = '20200331160443FKDW';
2021-11-16 19:39:23 INFO  http-nio-9999-exec-9 p6spy 2021-11-16 19:39:23 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 36;
2021-11-16 19:39:23 INFO  http-nio-9999-exec-9 p6spy 2021-11-16 19:39:23 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 19:39:23 INFO  http-nio-9999-exec-9 p6spy 2021-11-16 19:39:23 | 耗时 1 ms | SQL 语句：
INSERT INTO t_send_box (agent_id, send_code, sms_number_area, type, audit_state, create_username, org_code, channel_cost_amount, agent_income_amount, sms_content, sms_type, up_agent_id, consume_amount, sms_count, number_count, income_amount, sms_numbers, create_time, client_ip, sms_words, sub_type, up_agent_income_amount) VALUES (36, 'BN20211116193923AFPZ4', '+86', 1, 2, 'aotuman', '20200331160443FKDW', 0, 0, '代付是否是代付', 1, 35, 0, 0, 4, 0, '15590478565,13275867915,15081024107,18959918987', '2021-11-16T19:39:23.235+0800', '169.254.130.216', 7, 1, 0);
2021-11-16 19:39:23 INFO  http-nio-9999-exec-9 p6spy 2021-11-16 19:39:23 | 耗时 3 ms | SQL 语句：
INSERT INTO t_organization_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxController.addSendBoxWithTxtFile()', '2021-11-16T19:39:23.246+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 26, ' request: org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@502545aa sendBox: "SendBoxQuery(isTiming=null, isTimingFlag=null, isSortingFlag=null, leTimingTime=null, isNeedSmsNumber=false, sortingStartTime=null, sortingEndTime=null, createStartTime=null, createEndTime=null, moblieFile=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@d85dd62, excludeAuditState=null, ids=null, auditState=2, sessionToken=42925f5b83a75727a5f6d69e995c330a, isLongSms=null)"', '新增SendBox', 'aotuman');
2021-11-16 19:43:46 INFO  http-nio-9999-exec-4 p6spy 2021-11-16 19:43:46 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, approve_state_code, system_name, create_time, remark, system_url, system_logo_url FROM t_agent_system_config WHERE (system_url = '169.254.130.216' AND approve_state_code = '2');
2021-11-16 19:43:59 INFO  http-nio-9999-exec-5 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_loginBehavior169.254.130.216]，描述为 [登录行为验证] 的接口
2021-11-16 19:43:59 INFO  http-nio-9999-exec-2 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-11-16 19:43:59 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:43:59 | 耗时 0 ms | SQL 语句：
SELECT org.* FROM t_organization org LEFT JOIN t_organization_user u ON org.Organization_Code = u.Organization_Code WHERE u.User_Account = 'testorg';
2021-11-16 19:43:59 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:43:59 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, approve_state_code, system_name, create_time, remark, system_url, system_logo_url FROM t_agent_system_config WHERE (agent_id = 35 AND approve_state_code = '2');
2021-11-16 19:43:59 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:43:59 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:43:59 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:43:59 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:43:59 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:43:59 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:43:59 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:43:59 | 耗时 4 ms | SQL 语句：
UPDATE t_organization_user SET User_Password = '728c2ad63099c075d756bcd382c31e90', Account_Type = '0', User_Name = 'testorg', Login_Faild_Count = 0, Last_Login_IP = '内网IP|0|0|内网IP|内网IP', Last_Login_Time = '2020-12-10T20:13:09.000+0800', Organization_Code = '20200826164014MWDR', Login_IP = '192.168.189.1', User_Account = 'testorg', Create_User = 'testagent', Create_Date = '2020-08-26T16:40:49.000+0800', Need_Bind_Google_Key = 0, Status = '1' WHERE Id = 78;
2021-11-16 19:43:59 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:43:59 | 耗时 1 ms | SQL 语句：
UPDATE t_organization_user SET Last_Login_IP = '内网IP|0|0|内网IP|内网IP', Last_Login_Time = '2021-11-16T19:43:59.621+0800', Login_IP = '169.254.130.216' WHERE (User_Account = 'testorg');
2021-11-16 19:43:59 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:43:59 | 耗时 1 ms | SQL 语句：
INSERT INTO t_organization_user_login_log (TimeConsuming, Login_State, Organization_Code, User_Account, Local_Ip, Message) VALUES (63, 1, '20200826164014MWDR', 'testorg', '169.254.130.216', '登录成功');
2021-11-16 19:43:59 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:43:59 | 耗时 3 ms | SQL 语句：
INSERT INTO t_organization_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.LoginController.login()', '2021-11-16T19:43:59.639+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 73, ' userAccount: "testorg" password: "保密" verifyCode: "WJEME" goologoVerifyCode: "" sessionToken: "2bae6c3fa675c227c3d8f2b87313cb80" behaviorCheckToken: "2a51fd5148947be01b6f1595aa0c53a7" verifyInfoToken: "7A773EFDEDE5D7BA040AEE8063AD3B58" rememberMe: "false" request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@5bdf09c', '登录', 'testorg');
2021-11-16 19:43:59 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:43:59 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:43:59 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:43:59 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_organization_user u LEFT JOIN t_organization_user_limit rm ON (rm.USER_ID = u.Id) LEFT JOIN t_organization_user_menu m ON (m.MENU_ID = rm.MENU_ID) WHERE u.User_Account = 'testorg' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 19:43:59 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:43:59 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:43:59 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:43:59 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:44:00 INFO  http-nio-9999-exec-3 p6spy 2021-11-16 19:44:00 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_organization_user u LEFT JOIN t_organization_user_limit rm ON (rm.USER_ID = u.Id) LEFT JOIN t_organization_user_menu m ON (m.MENU_ID = rm.MENU_ID) WHERE u.User_Account = 'testorg' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 19:44:00 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:44:00 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:00 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:44:00 | 耗时 4 ms | SQL 语句：
SELECT m.* FROM t_organization_user_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT ur.menu_id FROM t_organization_user_limit ur LEFT JOIN t_organization_user u ON (u.Id = ur.USER_ID) WHERE u.User_Account = 'testorg') ORDER BY m.order_num;
2021-11-16 19:44:00 INFO  http-nio-9999-exec-6 p6spy 2021-11-16 19:44:00 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:00 INFO  http-nio-9999-exec-1 p6spy 2021-11-16 19:44:00 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:00 INFO  http-nio-9999-exec-6 p6spy 2021-11-16 19:44:00 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:44:00 INFO  http-nio-9999-exec-1 p6spy 2021-11-16 19:44:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_statistical_orgcode WHERE (org_code = '20200826164014MWDR');
2021-11-16 19:44:00 INFO  http-nio-9999-exec-6 p6spy 2021-11-16 19:44:00 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (org_code = '20200826164014MWDR' AND create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.999+0800');
2021-11-16 19:44:12 INFO  http-nio-9999-exec-5 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_loginBehavior169.254.130.216]，描述为 [登录行为验证] 的接口
2021-11-16 19:44:12 INFO  http-nio-9999-exec-8 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 2 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-11-16 19:44:12 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:12 | 耗时 0 ms | SQL 语句：
SELECT org.* FROM t_organization org LEFT JOIN t_organization_user u ON org.Organization_Code = u.Organization_Code WHERE u.User_Account = 'testorg';
2021-11-16 19:44:12 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:12 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, approve_state_code, system_name, create_time, remark, system_url, system_logo_url FROM t_agent_system_config WHERE (agent_id = 35 AND approve_state_code = '2');
2021-11-16 19:44:12 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:12 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:12 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:12 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:13 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:13 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:44:13 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:13 | 耗时 3 ms | SQL 语句：
UPDATE t_organization_user SET User_Password = '728c2ad63099c075d756bcd382c31e90', Account_Type = '0', User_Name = 'testorg', Login_Faild_Count = 0, Last_Login_IP = '内网IP|0|0|内网IP|内网IP', Last_Login_Time = '2021-11-16T19:44:00.000+0800', Organization_Code = '20200826164014MWDR', Login_IP = '169.254.130.216', User_Account = 'testorg', Create_User = 'testagent', Create_Date = '2020-08-26T16:40:49.000+0800', Need_Bind_Google_Key = 0, Status = '1' WHERE Id = 78;
2021-11-16 19:44:13 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:13 | 耗时 0 ms | SQL 语句：
UPDATE t_organization_user SET Last_Login_IP = '内网IP|0|0|内网IP|内网IP', Last_Login_Time = '2021-11-16T19:44:13.012+0800', Login_IP = '169.254.130.216' WHERE (User_Account = 'testorg');
2021-11-16 19:44:13 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:13 | 耗时 1 ms | SQL 语句：
INSERT INTO t_organization_user_login_log (TimeConsuming, Login_State, Organization_Code, User_Account, Local_Ip, Message) VALUES (46, 1, '20200826164014MWDR', 'testorg', '169.254.130.216', '登录成功');
2021-11-16 19:44:13 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:13 | 耗时 2 ms | SQL 语句：
INSERT INTO t_organization_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.LoginController.login()', '2021-11-16T19:44:13.028+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 58, ' userAccount: "testorg" password: "保密" verifyCode: "DDHCH" goologoVerifyCode: "" sessionToken: "692dfd5e201ab522eb5932305dd111a3" behaviorCheckToken: "c5c4ca9264b65a1a936ea075923eb42c" verifyInfoToken: "7A773EFDEDE5D7BA040AEE8063AD3B58" rememberMe: "false" request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@649c15f3', '登录', 'testorg');
2021-11-16 19:44:13 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:44:13 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:13 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:44:13 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_organization_user u LEFT JOIN t_organization_user_limit rm ON (rm.USER_ID = u.Id) LEFT JOIN t_organization_user_menu m ON (m.MENU_ID = rm.MENU_ID) WHERE u.User_Account = 'testorg' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 19:44:13 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:44:13 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:13 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:44:13 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:44:13 INFO  http-nio-9999-exec-5 p6spy 2021-11-16 19:44:13 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:13 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:13 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:13 INFO  http-nio-9999-exec-5 p6spy 2021-11-16 19:44:13 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (create_User = 'testorg' AND merch_read_status = '2');
2021-11-16 19:44:13 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:13 | 耗时 4 ms | SQL 语句：
SELECT m.* FROM t_organization_user_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT ur.menu_id FROM t_organization_user_limit ur LEFT JOIN t_organization_user u ON (u.Id = ur.USER_ID) WHERE u.User_Account = 'testorg') ORDER BY m.order_num;
2021-11-16 19:44:13 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:44:13 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:13 INFO  http-nio-9999-exec-1 p6spy 2021-11-16 19:44:13 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:13 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:44:13 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:44:13 INFO  http-nio-9999-exec-1 p6spy 2021-11-16 19:44:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_statistical_orgcode WHERE (org_code = '20200826164014MWDR');
2021-11-16 19:44:13 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:44:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (org_code = '20200826164014MWDR' AND create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.999+0800');
2021-11-16 19:44:18 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:44:18 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:18 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:44:18 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization_user WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:44:18 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:44:18 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (Organization_Code = '20200826164014MWDR') ORDER BY Id DESC LIMIT 0,10;
2021-11-16 19:44:19 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:44:19 | 耗时 2 ms | SQL 语句：
INSERT INTO t_organization_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.OrganizationUserController.organizationUserList()', '2021-11-16T19:44:19.001+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 9, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organizationUser: "OrganizationUser(id=null, organizationCode=20200826164014MWDR, userName=null, userAccount=null, userPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, status=null, accountType=null, googleKey=null, needBindGoogleKey=null, loginIp=null, description=null, remark=null, createUser=null, createDate=null)"', '用户列表', 'testorg');
2021-11-16 19:44:27 INFO  http-nio-9999-exec-1 p6spy 2021-11-16 19:44:27 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:27 INFO  http-nio-9999-exec-1 p6spy 2021-11-16 19:44:27 | 耗时 4 ms | SQL 语句：
INSERT INTO t_organization_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.OrganizationUserController.passwordCheckLevel()', '2021-11-16T19:44:27.256+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 1, ' newPassword: "fml_34O9"', '检测密码强度', 'testorg');
2021-11-16 19:44:33 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:44:33 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:33 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:44:33 | 耗时 0 ms | SQL 语句：
UPDATE t_organization_user SET User_Password = 'fc1c29f0f1097d244f91cc6de2b252d9' WHERE (User_Account = 'testorg');
2021-11-16 19:44:33 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:44:33 | 耗时 2 ms | SQL 语句：
INSERT INTO t_organization_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.OrganizationUserController.updatePassword()', '2021-11-16T19:44:33.303+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 12, ' oldPassword: "20211116" newPassword: "fml_34O9"', '修改密码', 'testorg');
2021-11-16 19:44:34 INFO  http-nio-9999-exec-3 p6spy 2021-11-16 19:44:34 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, approve_state_code, system_name, create_time, remark, system_url, system_logo_url FROM t_agent_system_config WHERE (system_url = '169.254.130.216' AND approve_state_code = '2');
2021-11-16 19:44:43 INFO  http-nio-9999-exec-2 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_loginBehavior169.254.130.216]，描述为 [登录行为验证] 的接口
2021-11-16 19:44:43 INFO  http-nio-9999-exec-8 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 3 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-11-16 19:44:43 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:43 | 耗时 0 ms | SQL 语句：
SELECT org.* FROM t_organization org LEFT JOIN t_organization_user u ON org.Organization_Code = u.Organization_Code WHERE u.User_Account = 'testorg';
2021-11-16 19:44:43 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:43 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, approve_state_code, system_name, create_time, remark, system_url, system_logo_url FROM t_agent_system_config WHERE (agent_id = 35 AND approve_state_code = '2');
2021-11-16 19:44:43 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:43 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:43 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:43 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:43 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:43 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:44:43 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:43 | 耗时 2 ms | SQL 语句：
UPDATE t_organization_user SET User_Password = 'fc1c29f0f1097d244f91cc6de2b252d9', Account_Type = '0', User_Name = 'testorg', Login_Faild_Count = 0, Last_Login_IP = '内网IP|0|0|内网IP|内网IP', Last_Login_Time = '2021-11-16T19:44:13.000+0800', Organization_Code = '20200826164014MWDR', Login_IP = '169.254.130.216', User_Account = 'testorg', Create_User = 'testagent', Create_Date = '2020-08-26T16:40:49.000+0800', Need_Bind_Google_Key = 0, Status = '1' WHERE Id = 78;
2021-11-16 19:44:43 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:43 | 耗时 0 ms | SQL 语句：
UPDATE t_organization_user SET Last_Login_IP = '内网IP|0|0|内网IP|内网IP', Last_Login_Time = '2021-11-16T19:44:43.967+0800', Login_IP = '169.254.130.216' WHERE (User_Account = 'testorg');
2021-11-16 19:44:43 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:43 | 耗时 0 ms | SQL 语句：
INSERT INTO t_organization_user_login_log (TimeConsuming, Login_State, Organization_Code, User_Account, Local_Ip, Message) VALUES (54, 1, '20200826164014MWDR', 'testorg', '169.254.130.216', '登录成功');
2021-11-16 19:44:43 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:43 | 耗时 2 ms | SQL 语句：
INSERT INTO t_organization_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.LoginController.login()', '2021-11-16T19:44:43.984+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 65, ' userAccount: "testorg" password: "保密" verifyCode: "gwrc9" goologoVerifyCode: "" sessionToken: "2ba6d1abe00e4f75c32b468ab41c7a54" behaviorCheckToken: "b07ddad3e59f792c64b7fee12c0cc0a3" verifyInfoToken: "7A773EFDEDE5D7BA040AEE8063AD3B58" rememberMe: "false" request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@e164317', '登录', 'testorg');
2021-11-16 19:44:44 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:44:44 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:44 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:44:44 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_organization_user u LEFT JOIN t_organization_user_limit rm ON (rm.USER_ID = u.Id) LEFT JOIN t_organization_user_menu m ON (m.MENU_ID = rm.MENU_ID) WHERE u.User_Account = 'testorg' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 19:44:44 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:44:44 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:44 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:44:44 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:44:44 INFO  http-nio-9999-exec-5 p6spy 2021-11-16 19:44:44 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_organization_user u LEFT JOIN t_organization_user_limit rm ON (rm.USER_ID = u.Id) LEFT JOIN t_organization_user_menu m ON (m.MENU_ID = rm.MENU_ID) WHERE u.User_Account = 'testorg' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 19:44:44 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:44 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:44 INFO  http-nio-9999-exec-8 p6spy 2021-11-16 19:44:44 | 耗时 7 ms | SQL 语句：
SELECT m.* FROM t_organization_user_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT ur.menu_id FROM t_organization_user_limit ur LEFT JOIN t_organization_user u ON (u.Id = ur.USER_ID) WHERE u.User_Account = 'testorg') ORDER BY m.order_num;
2021-11-16 19:44:44 INFO  http-nio-9999-exec-6 p6spy 2021-11-16 19:44:44 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:44 INFO  http-nio-9999-exec-4 p6spy 2021-11-16 19:44:44 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:44 INFO  http-nio-9999-exec-6 p6spy 2021-11-16 19:44:44 | 耗时 2 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:44:44 INFO  http-nio-9999-exec-4 p6spy 2021-11-16 19:44:44 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_statistical_orgcode WHERE (org_code = '20200826164014MWDR');
2021-11-16 19:44:45 INFO  http-nio-9999-exec-6 p6spy 2021-11-16 19:44:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (org_code = '20200826164014MWDR' AND create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.999+0800');
2021-11-16 19:44:57 INFO  http-nio-9999-exec-2 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_loginBehavior169.254.130.216]，描述为 [登录行为验证] 的接口
2021-11-16 19:44:58 INFO  http-nio-9999-exec-10 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 4 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-11-16 19:44:58 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:44:58 | 耗时 1 ms | SQL 语句：
SELECT org.* FROM t_organization org LEFT JOIN t_organization_user u ON org.Organization_Code = u.Organization_Code WHERE u.User_Account = 'testorg';
2021-11-16 19:44:58 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:44:58 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, approve_state_code, system_name, create_time, remark, system_url, system_logo_url FROM t_agent_system_config WHERE (agent_id = 35 AND approve_state_code = '2');
2021-11-16 19:44:58 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:44:58 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:58 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:44:58 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:58 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:44:58 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:44:58 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:44:58 | 耗时 2 ms | SQL 语句：
UPDATE t_organization_user SET User_Password = 'fc1c29f0f1097d244f91cc6de2b252d9', Account_Type = '0', User_Name = 'testorg', Login_Faild_Count = 0, Last_Login_IP = '内网IP|0|0|内网IP|内网IP', Last_Login_Time = '2021-11-16T19:44:44.000+0800', Organization_Code = '20200826164014MWDR', Login_IP = '169.254.130.216', User_Account = 'testorg', Create_User = 'testagent', Create_Date = '2020-08-26T16:40:49.000+0800', Need_Bind_Google_Key = 0, Status = '1' WHERE Id = 78;
2021-11-16 19:44:58 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:44:58 | 耗时 2 ms | SQL 语句：
UPDATE t_organization_user SET Last_Login_IP = '内网IP|0|0|内网IP|内网IP', Last_Login_Time = '2021-11-16T19:44:58.255+0800', Login_IP = '169.254.130.216' WHERE (User_Account = 'testorg');
2021-11-16 19:44:58 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:44:58 | 耗时 1 ms | SQL 语句：
INSERT INTO t_organization_user_login_log (TimeConsuming, Login_State, Organization_Code, User_Account, Local_Ip, Message) VALUES (50, 1, '20200826164014MWDR', 'testorg', '169.254.130.216', '登录成功');
2021-11-16 19:44:58 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:44:58 | 耗时 2 ms | SQL 语句：
INSERT INTO t_organization_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.LoginController.login()', '2021-11-16T19:44:58.275+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 62, ' userAccount: "testorg" password: "保密" verifyCode: "dezee" goologoVerifyCode: "" sessionToken: "f52555aa2da539b6fc20a815e5f0e47f" behaviorCheckToken: "c04c9cf4d364983eed405946dcc6f530" verifyInfoToken: "7A773EFDEDE5D7BA040AEE8063AD3B58" rememberMe: "false" request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@51b09272', '登录', 'testorg');
2021-11-16 19:44:58 INFO  http-nio-9999-exec-9 p6spy 2021-11-16 19:44:58 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:58 INFO  http-nio-9999-exec-9 p6spy 2021-11-16 19:44:58 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_organization_user u LEFT JOIN t_organization_user_limit rm ON (rm.USER_ID = u.Id) LEFT JOIN t_organization_user_menu m ON (m.MENU_ID = rm.MENU_ID) WHERE u.User_Account = 'testorg' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 19:44:58 INFO  http-nio-9999-exec-9 p6spy 2021-11-16 19:44:58 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:58 INFO  http-nio-9999-exec-9 p6spy 2021-11-16 19:44:58 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:44:59 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:44:59 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:59 INFO  http-nio-9999-exec-2 p6spy 2021-11-16 19:44:59 | 耗时 0 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (create_User = 'testorg' AND merch_read_status = '2');
2021-11-16 19:44:59 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:44:59 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:59 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:44:59 | 耗时 5 ms | SQL 语句：
SELECT m.* FROM t_organization_user_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT ur.menu_id FROM t_organization_user_limit ur LEFT JOIN t_organization_user u ON (u.Id = ur.USER_ID) WHERE u.User_Account = 'testorg') ORDER BY m.order_num;
2021-11-16 19:44:59 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:44:59 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:59 INFO  http-nio-9999-exec-4 p6spy 2021-11-16 19:44:59 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:44:59 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:44:59 | 耗时 2 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:44:59 INFO  http-nio-9999-exec-4 p6spy 2021-11-16 19:44:59 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_statistical_orgcode WHERE (org_code = '20200826164014MWDR');
2021-11-16 19:44:59 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:44:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (org_code = '20200826164014MWDR' AND create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.999+0800');
2021-11-16 19:45:15 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:45:15 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:45:15 INFO  http-nio-9999-exec-10 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_addSendBoxWithTxtFile169.254.130.216]，描述为 [新增SendBoxTxt文件提交表单] 的接口
2021-11-16 19:45:15 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:45:15 | 耗时 0 ms | SQL 语句：
SELECT org.*, cost.Id AS cost_Id, cost.Organization_Code AS cost_Organization_Code, cost.sms_type, cost.Cost_Name AS Cost_Name, cost.Cost_Value AS Cost_Value, cost.State AS Cost_State, cost.Channel_Id AS Cost_Channel_Id, cost.Operator AS Cost_Operator, cost.Description AS Cost_Description, cost.Remark AS Cost_Remark, cost.Create_Date AS Cost_Create_Date FROM t_organization org LEFT JOIN t_organization_cost cost ON org.Organization_Code = cost.Organization_Code WHERE org.organization_code = '20200826164014MWDR';
2021-11-16 19:45:15 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:45:15 | 耗时 9 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 35;
2021-11-16 19:45:15 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:45:15 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:45:15 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:45:15 | 耗时 9 ms | SQL 语句：
SELECT id, approve_Status, org_name, template_Name, submitter_id, org_code, description, template_Content, submitter_name, create_date FROM t_sms_template WHERE (org_code = '20200826164014MWDR' AND approve_Status = 2);
2021-11-16 19:45:15 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:45:15 | 耗时 3 ms | SQL 语句：
INSERT INTO t_send_box (agent_id, send_code, sms_number_area, type, audit_state, create_username, org_code, channel_cost_amount, agent_income_amount, sms_content, sms_type, consume_amount, sms_count, number_count, income_amount, sms_numbers, create_time, client_ip, sms_words, sub_type, up_agent_income_amount) VALUES (35, 'BN20211116194515QWROX', '+86', 1, 1, 'testorg', '20200826164014MWDR', 0, 0, '发送的发送方', 1, 0, 0, 4, 0, '15590478565,13275867915,15081024107,18959918987', '2021-11-16T19:45:15.496+0800', '169.254.130.216', 6, 1, 0);
2021-11-16 19:45:15 INFO  http-nio-9999-exec-10 p6spy 2021-11-16 19:45:15 | 耗时 2 ms | SQL 语句：
INSERT INTO t_organization_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxController.addSendBoxWithTxtFile()', '2021-11-16T19:45:15.508+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 53, ' request: org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@378e5660 sendBox: "SendBoxQuery(isTiming=null, isTimingFlag=null, isSortingFlag=null, leTimingTime=null, isNeedSmsNumber=false, sortingStartTime=null, sortingEndTime=null, createStartTime=null, createEndTime=null, moblieFile=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@34e6ad4d, excludeAuditState=null, ids=null, auditState=1, sessionToken=72afcc429e62efa17f18ac3dacc5e3cc, isLongSms=null)"', '新增SendBox', 'testorg');
2021-11-16 19:47:08 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:47:08 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:47:08 INFO  http-nio-9999-exec-7 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_addSendBoxWithTxtFile169.254.130.216]，描述为 [新增SendBoxTxt文件提交表单] 的接口
2021-11-16 19:47:08 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:47:08 | 耗时 1 ms | SQL 语句：
SELECT org.*, cost.Id AS cost_Id, cost.Organization_Code AS cost_Organization_Code, cost.sms_type, cost.Cost_Name AS Cost_Name, cost.Cost_Value AS Cost_Value, cost.State AS Cost_State, cost.Channel_Id AS Cost_Channel_Id, cost.Operator AS Cost_Operator, cost.Description AS Cost_Description, cost.Remark AS Cost_Remark, cost.Create_Date AS Cost_Create_Date FROM t_organization org LEFT JOIN t_organization_cost cost ON org.Organization_Code = cost.Organization_Code WHERE org.organization_code = '20200826164014MWDR';
2021-11-16 19:47:08 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:47:08 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 35;
2021-11-16 19:47:08 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:47:08 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:47:08 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:47:08 | 耗时 0 ms | SQL 语句：
SELECT id, approve_Status, org_name, template_Name, submitter_id, org_code, description, template_Content, submitter_name, create_date FROM t_sms_template WHERE (org_code = '20200826164014MWDR' AND approve_Status = 2);
2021-11-16 19:47:08 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:47:08 | 耗时 9 ms | SQL 语句：
INSERT INTO t_send_box (agent_id, send_code, sms_number_area, type, audit_state, create_username, org_code, channel_cost_amount, agent_income_amount, sms_content, sms_type, consume_amount, sms_count, number_count, income_amount, sms_numbers, create_time, client_ip, sms_words, sub_type, up_agent_income_amount) VALUES (35, 'BN20211116194708OBAVR', '+86', 1, 1, 'testorg', '20200826164014MWDR', 0, 0, '佛挡杀佛是代付顺丰到付', 1, 0, 0, 4, 0, '15590478565,13275867915,15081024107,18959918987', '2021-11-16T19:47:08.132+0800', '169.254.130.216', 11, 1, 0);
2021-11-16 19:47:08 INFO  http-nio-9999-exec-7 p6spy 2021-11-16 19:47:08 | 耗时 2 ms | SQL 语句：
INSERT INTO t_organization_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxController.addSendBoxWithTxtFile()', '2021-11-16T19:47:08.150+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 40, ' request: org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@144bec5 sendBox: "SendBoxQuery(isTiming=null, isTimingFlag=null, isSortingFlag=null, leTimingTime=null, isNeedSmsNumber=false, sortingStartTime=null, sortingEndTime=null, createStartTime=null, createEndTime=null, moblieFile=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3e6338c9, excludeAuditState=null, ids=null, auditState=1, sessionToken=a4da18dec84ff842c05d2243e03092a9, isLongSms=null)"', '新增SendBox', 'testorg');
2021-11-16 19:48:28 INFO  http-nio-9999-exec-3 p6spy 2021-11-16 19:48:28 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user WHERE (User_Account = 'testorg');
2021-11-16 19:48:28 INFO  http-nio-9999-exec-3 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_addSendBoxWithTxtFile169.254.130.216]，描述为 [新增SendBoxTxt文件提交表单] 的接口
2021-11-16 19:48:28 INFO  http-nio-9999-exec-3 p6spy 2021-11-16 19:48:28 | 耗时 0 ms | SQL 语句：
SELECT org.*, cost.Id AS cost_Id, cost.Organization_Code AS cost_Organization_Code, cost.sms_type, cost.Cost_Name AS Cost_Name, cost.Cost_Value AS Cost_Value, cost.State AS Cost_State, cost.Channel_Id AS Cost_Channel_Id, cost.Operator AS Cost_Operator, cost.Description AS Cost_Description, cost.Remark AS Cost_Remark, cost.Create_Date AS Cost_Create_Date FROM t_organization org LEFT JOIN t_organization_cost cost ON org.Organization_Code = cost.Organization_Code WHERE org.organization_code = '20200826164014MWDR';
2021-11-16 19:48:28 INFO  http-nio-9999-exec-3 p6spy 2021-11-16 19:48:28 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 35;
2021-11-16 19:48:28 INFO  http-nio-9999-exec-3 p6spy 2021-11-16 19:48:28 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:48:28 INFO  http-nio-9999-exec-3 p6spy 2021-11-16 19:48:28 | 耗时 0 ms | SQL 语句：
SELECT id, approve_Status, org_name, template_Name, submitter_id, org_code, description, template_Content, submitter_name, create_date FROM t_sms_template WHERE (org_code = '20200826164014MWDR' AND approve_Status = 2);
2021-11-16 19:48:28 INFO  http-nio-9999-exec-3 p6spy 2021-11-16 19:48:28 | 耗时 2 ms | SQL 语句：
INSERT INTO t_send_box (agent_id, send_code, sms_number_area, type, audit_state, create_username, org_code, channel_cost_amount, agent_income_amount, sms_content, sms_type, consume_amount, sms_count, number_count, income_amount, sms_numbers, create_time, client_ip, sms_words, sub_type, up_agent_income_amount) VALUES (35, 'BN20211116194828IY5ZR', '+86', 1, 1, 'testorg', '20200826164014MWDR', 0, 0, '持续性陈V型', 1, 0, 0, 4, 0, '15590478565,13275867915,15081024107,18959918987', '2021-11-16T19:48:28.872+0800', '169.254.130.216', 6, 1, 0);
2021-11-16 19:48:28 INFO  http-nio-9999-exec-3 p6spy 2021-11-16 19:48:28 | 耗时 3 ms | SQL 语句：
INSERT INTO t_organization_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxController.addSendBoxWithTxtFile()', '2021-11-16T19:48:28.885+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 35, ' request: org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@4b243eb9 sendBox: "SendBoxQuery(isTiming=null, isTimingFlag=null, isSortingFlag=null, leTimingTime=null, isNeedSmsNumber=false, sortingStartTime=null, sortingEndTime=null, createStartTime=null, createEndTime=null, moblieFile=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@48c2246e, excludeAuditState=null, ids=null, auditState=1, sessionToken=18c078ba3e1fd292d3ae378103f47d1a, isLongSms=null)"', '新增SendBox', 'testorg');
2021-11-16 19:50:37 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-16 19:50:37 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2021-11-16 19:50:37 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsMerchAsyncThreadPool'
2021-11-16 19:50:37 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-16 19:50:37 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2021-11-16 19:50:37 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2021-11-16 19:50:37 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-11-16 19:50:37 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-16 19:50:37 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-16 19:50:37 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-16 19:50:37 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-16 19:50:37 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-16 19:50:37 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
