2021-11-15 11:27:43 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 60076 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-11-15 11:27:43 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-11-15 11:27:47 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-15 11:27:47 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-15 11:27:47 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 757ms. Found 0 repository interfaces.
2021-11-15 11:27:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7760ce8a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$322296d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$f0ec79c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$375ee46] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$4b9aca53] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:49 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-15 11:27:49 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-15 11:27:49 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-15 11:27:49 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-15 11:27:49 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-15 11:27:49 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-15 11:27:49 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-15 11:27:49 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-15 11:27:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 11:27:55 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-11-15 11:27:55 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-11-15 11:27:55 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-15 11:27:55 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-15 11:27:56 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-15 11:27:56 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 12403 ms
2021-11-15 11:27:57 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-15 11:27:59 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-15 11:27:59 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-15 11:27:59 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-15 11:28:00 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-11-15 11:28:00 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-11-15 11:28:00 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1636946879956'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-11-15 11:28:00 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-11-15 11:28:00 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-15 11:28:00 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@220a5163
2021-11-15 11:28:00 INFO  main p6spy 2021-11-15 11:28:00 | 耗时 21 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-11-15 11:28:01 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-15 11:28:01 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-15 11:28:01 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-15 11:28:01 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-15 11:28:02 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-15 11:28:02 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-15 11:28:02 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-15 11:28:02 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-15 11:28:02 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-11-15 11:28:02 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-11-15 11:28:03 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-11-15 11:28:03 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 20.055 seconds (JVM running for 23.729)
2021-11-15 11:28:03 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-11-15 11:28:03 INFO  main p6spy 2021-11-15 11:28:03 | 耗时 8 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-11-15 11:28:03 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-11-15 11:28:03 INFO  main p6spy 2021-11-15 11:28:03 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-11-15 11:28:03 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-11-15 11:28:03 INFO  main p6spy 2021-11-15 11:28:03 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-11-15 11:28:03 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-11-15 11:28:03 INFO  main p6spy 2021-11-15 11:28:03 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-11-15 11:28:03 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-11-15 11:28:03 INFO  main p6spy 2021-11-15 11:28:03 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-11-15 11:28:03 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-11-15 11:28:03 INFO  main p6spy 2021-11-15 11:28:03 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-11-15 11:28:03 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-11-15 11:28:03 INFO  main p6spy 2021-11-15 11:28:03 | 耗时 533 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-11-15 11:28:03 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-11-15 11:28:03 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-11-15 11:28:03 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1636688242031"'s failed in-progress jobs.
2021-11-15 11:28:03 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636946879956 started.
2021-11-15 11:28:07 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-11-15 11:28:07 INFO  main p6spy 2021-11-15 11:28:07 | 耗时 3 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-11-15 11:28:07 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-11-15 11:28:07 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-11-15 11:28:08 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-11-15 11:28:08 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-11-15 11:28:26 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-11-15 11:28:26 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-11-15 11:28:26 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-11-15 11:28:26 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-11-15 11:28:26 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-11-15 11:29:02 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-15 11:29:02 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-11-15 11:29:02 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 28 ms
2021-11-15 11:29:02 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-11-15 11:29:15 INFO  http-nio-8088-exec-5 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-11-15 11:29:15 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 11:29:15 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 11:29:15 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 11:29:15 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 11:29:15 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 11:29:15 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2021-11-12T11:39:47.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2021-11-15 11:29:15 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 11:29:15 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2021-11-15T11:29:15.976+0800', 'Chrome 93', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 'admin');
2021-11-15 11:29:16 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 11:29:16 | 耗时 18 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 11:29:16 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 11:29:16 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 11:29:16 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 11:29:16 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 11:29:17 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 11:29:17 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 11:29:17 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 11:29:17 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 11:29:17 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 11:29:17 | 耗时 13 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-15 11:29:17 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 11:29:17 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-15 11:29:17 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 11:29:17 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2021-11-15T11:29:17.717+0800' WHERE (USERNAME = 'admin');
2021-11-15 11:29:17 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 11:29:17 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2021-11-15 11:29:17 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 11:29:17 | 耗时 6 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-15 11:29:17 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 11:29:17 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-15 11:29:17 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 11:29:17 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2021-11-15 11:29:17 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 11:29:17 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2021-11-15 11:29:17 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 11:29:17 | 耗时 2 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2021-11-15 11:29:17 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 11:29:17 | 耗时 2 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2021-11-15 11:29:17 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 11:29:17 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2021-11-15 11:29:21 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 11:29:21 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-15 11:29:21 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 11:29:21 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-15 11:29:21 INFO  Febs-Async-Thread1 p6spy 2021-11-15 11:29:21 | 耗时 10 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-15T11:29:21.668+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 86, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=null, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=null, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-15 11:29:23 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 11:29:23 | 耗时 9 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-15 11:29:31 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 11:29:31 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 35;
2021-11-15 11:29:31 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 11:29:31 | 耗时 1 ms | SQL 语句：
DELETE FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-15 11:29:31 INFO  Febs-Async-Thread2 p6spy 2021-11-15 11:29:31 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateAgentCosts()', '2021-11-15T11:29:31.872+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 26, ' agentCosts: "[AgentCost(id=null, agentId=35, smsType=1, name=+86, value=40, channelId=, operator=CUCC, description=, remark=admin添加, createDate=Mon Nov 15 11:29:31 CST 2021), AgentCost(id=null, agentId=35, smsType=1, name=+86, value=50, channelId=, operator=CUCC, description=, remark=admin添加, createDate=Mon Nov 15 11:29:31 CST 2021)]"', '代理资费修改', 'admin');
2021-11-15 11:29:34 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 11:29:34 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 35;
2021-11-15 11:29:34 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 11:29:34 | 耗时 1 ms | SQL 语句：
DELETE FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-15 11:29:34 INFO  Febs-Async-Thread3 p6spy 2021-11-15 11:29:34 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateAgentCosts()', '2021-11-15T11:29:34.757+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 12, ' agentCosts: "[AgentCost(id=null, agentId=35, smsType=1, name=+86, value=40, channelId=, operator=CTCC, description=, remark=admin添加, createDate=Mon Nov 15 11:29:34 CST 2021), AgentCost(id=null, agentId=35, smsType=1, name=+86, value=50, channelId=, operator=CUCC, description=, remark=admin添加, createDate=Mon Nov 15 11:29:34 CST 2021)]"', '代理资费修改', 'admin');
2021-11-15 11:29:41 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 11:29:41 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 35;
2021-11-15 11:29:41 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 11:29:41 | 耗时 4 ms | SQL 语句：
DELETE FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-15 11:29:41 INFO  Febs-Async-Thread4 p6spy 2021-11-15 11:29:41 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateAgentCosts()', '2021-11-15T11:29:41.423+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 31, ' agentCosts: "[AgentCost(id=198, agentId=35, smsType=1, name=+86, value=40, channelId=, operator=, description=, remark=admin添加, createDate=Mon Nov 15 11:29:41 CST 2021), AgentCost(id=199, agentId=35, smsType=1, name=+86, value=50, channelId=, operator=CUCC, description=, remark=admin添加, createDate=Mon Nov 15 11:29:41 CST 2021)]"', '代理资费修改', 'admin');
2021-11-15 11:29:46 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 11:29:46 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 11:29:46 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 11:29:46 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-15 11:29:46 INFO  Febs-Async-Thread5 p6spy 2021-11-15 11:29:46 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T11:29:46.129+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 45, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 11:29:48 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 11:29:48 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 11:29:48 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 11:29:48 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-15 11:29:48 INFO  Febs-Async-Thread1 p6spy 2021-11-15 11:29:48 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T11:29:48.445+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 21, ' request: "QueryRequest(pageSize=10, pageNum=2, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 11:29:49 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 11:29:49 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2021-11-15 11:29:49 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 11:29:49 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 11:29:54 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 11:29:54 | 耗时 0 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 11:29:54 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 11:29:54 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 11:29:54 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 11:29:54 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-15 11:29:54 INFO  Febs-Async-Thread2 p6spy 2021-11-15 11:29:54 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-15T11:29:54.039+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 33, ' organizationCosts: "[OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=40, state=1, channelId=, operator=CUCC, description=null, remark=null, createDate=null), OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=55, state=1, channelId=, operator=CUCC, description=null, remark=null, createDate=null), OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=null, costName=, costValue=NaN, state=, channelId=, operator=, description=null, remark=null, createDate=null)]"', '商户用户资费更新', 'admin');
2021-11-15 11:30:04 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 11:30:04 | 耗时 1 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 11:30:04 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 11:30:04 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 11:30:04 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 11:30:04 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-15 11:30:04 INFO  Febs-Async-Thread3 p6spy 2021-11-15 11:30:04 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-15T11:30:04.344+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 21, ' organizationCosts: "[OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=40, state=1, channelId=, operator=CTCC, description=null, remark=null, createDate=null), OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=55, state=1, channelId=, operator=CUCC, description=null, remark=null, createDate=null), OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=null, costName=, costValue=NaN, state=, channelId=, operator=, description=null, remark=null, createDate=null)]"', '商户用户资费更新', 'admin');
2021-11-15 11:30:20 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 11:30:20 | 耗时 0 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 11:30:20 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 11:30:20 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 11:30:20 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 11:30:20 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-15 11:30:20 INFO  Febs-Async-Thread4 p6spy 2021-11-15 11:30:20 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-15T11:30:20.802+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 19, ' organizationCosts: "[OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=55, state=1, channelId=, operator=CUCC, description=, remark=admin添加, createDate=Mon Nov 15 11:30:20 CST 2021)]"', '商户用户资费更新', 'admin');
2021-11-15 11:30:26 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 11:30:26 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2021-11-15 11:30:26 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 11:30:26 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 11:30:45 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 11:30:45 | 耗时 1 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 11:30:45 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 11:30:45 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 11:30:45 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 11:30:45 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-15 11:30:45 INFO  Febs-Async-Thread5 p6spy 2021-11-15 11:30:45 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-15T11:30:45.476+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 17, ' organizationCosts: "[OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=40, state=1, channelId=, operator=, description=, remark=admin添加, createDate=Mon Nov 15 11:30:45 CST 2021), OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=55, state=1, channelId=, operator=CUCC, description=, remark=admin添加, createDate=Mon Nov 15 11:30:45 CST 2021), OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=55, state=1, channelId=, operator=, description=, remark=admin添加, createDate=Mon Nov 15 11:30:45 CST 2021)]"', '商户用户资费更新', 'admin');
2021-11-15 11:30:48 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 11:30:48 | 耗时 1 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 11:30:48 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 11:30:48 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 11:30:48 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 11:30:48 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-15 11:30:48 INFO  Febs-Async-Thread1 p6spy 2021-11-15 11:30:48 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-15T11:30:48.318+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 23, ' organizationCosts: "[OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=40, state=1, channelId=, operator=, description=, remark=admin添加, createDate=Mon Nov 15 11:30:48 CST 2021), OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=55, state=1, channelId=, operator=CUCC, description=, remark=admin添加, createDate=Mon Nov 15 11:30:48 CST 2021), OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=55, state=1, channelId=, operator=CTCC, description=null, remark=null, createDate=null)]"', '商户用户资费更新', 'admin');
2021-11-15 11:31:11 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 11:31:11 | 耗时 1 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 11:31:11 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 11:31:11 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 11:31:11 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 11:31:11 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-15 11:31:11 INFO  Febs-Async-Thread2 p6spy 2021-11-15 11:31:11 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-15T11:31:11.905+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 18, ' organizationCosts: "[OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=55, state=1, channelId=, operator=CUCC, description=, remark=admin添加, createDate=Mon Nov 15 11:31:11 CST 2021)]"', '商户用户资费更新', 'admin');
2021-11-15 11:31:26 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-15 11:31:26 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636946879956 paused.
2021-11-15 11:31:26 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-15 11:31:26 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-15 11:31:26 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636946879956 shutting down.
2021-11-15 11:31:26 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636946879956 paused.
2021-11-15 11:31:26 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636946879956 shutdown complete.
2021-11-15 21:30:20 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 73136 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-11-15 21:30:20 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-11-15 21:30:24 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-15 21:30:24 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-15 21:30:24 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 832ms. Found 0 repository interfaces.
2021-11-15 21:30:25 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$a056119a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$5b17d9e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$19e1bcd2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$2c6b3156] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$74900d63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:26 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-15 21:30:26 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-15 21:30:26 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-15 21:30:26 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-15 21:30:26 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-15 21:30:26 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-15 21:30:26 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-15 21:30:26 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-15 21:30:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:32 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:32 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:32 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:32 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:30:33 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-11-15 21:30:33 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-11-15 21:30:33 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-15 21:30:33 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-15 21:30:33 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-15 21:30:33 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 13254 ms
2021-11-15 21:30:34 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-15 21:30:38 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-15 21:30:38 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-15 21:30:38 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-15 21:30:38 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-11-15 21:30:38 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-11-15 21:30:38 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1636983038256'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-11-15 21:30:38 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-11-15 21:30:38 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-15 21:30:38 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@391b03b
2021-11-15 21:30:38 INFO  main p6spy 2021-11-15 21:30:38 | 耗时 9 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-11-15 21:30:39 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-15 21:30:40 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-15 21:30:40 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-15 21:30:40 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-15 21:30:40 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-15 21:30:41 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-15 21:30:41 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-15 21:30:41 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-15 21:30:41 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-11-15 21:30:41 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-11-15 21:30:41 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-11-15 21:30:41 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 21.863 seconds (JVM running for 25.309)
2021-11-15 21:30:41 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-11-15 21:30:41 INFO  main p6spy 2021-11-15 21:30:41 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-11-15 21:30:41 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-11-15 21:30:41 INFO  main p6spy 2021-11-15 21:30:41 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-11-15 21:30:41 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-11-15 21:30:41 INFO  main p6spy 2021-11-15 21:30:41 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-11-15 21:30:41 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-11-15 21:30:41 INFO  main p6spy 2021-11-15 21:30:41 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-11-15 21:30:41 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-11-15 21:30:41 INFO  main p6spy 2021-11-15 21:30:41 | 耗时 9 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-11-15 21:30:41 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-11-15 21:30:41 INFO  main p6spy 2021-11-15 21:30:41 | 耗时 9 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-11-15 21:30:41 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-11-15 21:30:42 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-11-15 21:30:42 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-11-15 21:30:42 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1636946879956"'s failed in-progress jobs.
2021-11-15 21:30:42 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636983038256 started.
2021-11-15 21:30:42 INFO  main p6spy 2021-11-15 21:30:42 | 耗时 912 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-11-15 21:30:50 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-11-15 21:30:50 INFO  main p6spy 2021-11-15 21:30:50 | 耗时 6 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-11-15 21:30:50 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-11-15 21:30:50 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-11-15 21:30:51 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-11-15 21:30:51 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-11-15 21:31:13 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-11-15 21:31:13 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-11-15 21:31:13 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-11-15 21:31:13 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-11-15 21:31:13 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-11-15 21:31:19 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-15 21:31:19 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-11-15 21:31:19 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 30 ms
2021-11-15 21:31:19 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-11-15 21:31:33 INFO  http-nio-8088-exec-8 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-11-15 21:31:33 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 21:31:33 | 耗时 7 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 21:31:33 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 21:31:33 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 21:31:33 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 21:31:33 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2021-11-15T11:29:18.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2021-11-15 21:31:33 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 21:31:33 | 耗时 7 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2021-11-15T21:31:33.884+0800', 'Chrome 93', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 'admin');
2021-11-15 21:31:34 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 21:31:34 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 21:31:34 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 21:31:34 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 21:31:34 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 21:31:34 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 21:31:35 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 21:31:35 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 21:31:35 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 21:31:35 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 21:31:35 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:31:35 | 耗时 9 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-15 21:31:35 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 21:31:35 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-15 21:31:35 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 21:31:35 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2021-11-15T21:31:35.534+0800' WHERE (USERNAME = 'admin');
2021-11-15 21:31:35 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 21:31:35 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2021-11-15 21:31:35 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 21:31:35 | 耗时 3 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-15 21:31:35 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 21:31:35 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-15 21:31:35 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 21:31:35 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2021-11-15 21:31:35 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 21:31:35 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2021-11-15 21:31:35 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 21:31:35 | 耗时 2 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2021-11-15 21:31:35 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 21:31:35 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2021-11-15 21:31:35 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:31:35 | 耗时 2 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2021-11-15 21:31:37 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 21:31:37 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:31:37 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 21:31:37 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-15 21:31:37 INFO  Febs-Async-Thread1 p6spy 2021-11-15 21:31:37 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:31:37.723+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 59, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 21:31:59 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 21:31:59 | 耗时 2 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '40' WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CTCC');
2021-11-15 21:31:59 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 21:31:59 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CTCC');
2021-11-15 21:32:00 INFO  Febs-Async-Thread2 p6spy 2021-11-15 21:32:00 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-15T21:32:00.018+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 84, ' organizationCodes: "SMS210306175250BLLX,SMS210306175141COZC,SMS210305203755SPKD,SMS210305203702PDDO,SMS210305203207WJUI,SMS210305203013GMGZ,SMS210305202704OFLQ,SMS201210203032CPVY,SMS201210172300COBD,SMS201117144746HQMF" costName: "+86" smsType: "1" operator: "CTCC" costValue: "40"', '批量修改商户资费', 'admin');
2021-11-15 21:32:00 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:32:00 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:32:00 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:32:00 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-15 21:32:00 INFO  Febs-Async-Thread3 p6spy 2021-11-15 21:32:00 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:32:00.108+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 23, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 21:32:45 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 21:32:45 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:32:45 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 21:32:45 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 21:32:45 INFO  Febs-Async-Thread4 p6spy 2021-11-15 21:32:45 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:32:45.527+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 33, ' request: "QueryRequest(pageSize=30, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 21:33:38 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 21:33:38 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:33:38 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 21:33:38 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-15 21:33:38 INFO  Febs-Async-Thread5 p6spy 2021-11-15 21:33:38 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:33:38.527+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 26, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 21:35:29 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 21:35:29 | 耗时 10 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 21:35:29 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 21:35:29 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 21:35:29 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 21:35:29 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 21:35:31 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 21:35:31 | 耗时 0 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-15 21:35:31 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:35:31 | 耗时 4 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-15 21:35:31 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 21:35:31 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:35:31 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 21:35:31 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-15 21:35:31 INFO  Febs-Async-Thread1 p6spy 2021-11-15 21:35:31 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:35:31.357+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 18, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 21:35:56 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:35:56 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 21:35:56 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:35:56 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 21:35:56 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:35:56 | 耗时 10 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 21:35:57 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 21:35:57 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-15 21:35:57 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:35:57 | 耗时 5 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-15 21:35:57 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 21:35:57 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:35:57 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 21:35:57 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-15 21:35:57 INFO  Febs-Async-Thread2 p6spy 2021-11-15 21:35:57 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:35:57.391+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 21, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 21:36:11 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-15 21:36:11 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636983038256 paused.
2021-11-15 21:36:11 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-15 21:36:11 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-15 21:36:11 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636983038256 shutting down.
2021-11-15 21:36:11 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636983038256 paused.
2021-11-15 21:36:11 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636983038256 shutdown complete.
2021-11-15 21:36:11 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-15 21:36:11 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-15 21:36:11 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-15 21:36:11 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-15 21:36:11 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-15 21:36:11 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2021-11-15 21:36:27 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 71808 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-11-15 21:36:27 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-11-15 21:36:30 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-15 21:36:30 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-15 21:36:31 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 844ms. Found 0 repository interfaces.
2021-11-15 21:36:32 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:32 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$52791284] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:32 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:32 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:32 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:32 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$d3adacf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:32 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$cc04bdbc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:32 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:32 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$de8e3240] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:32 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:32 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$26b30e4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:32 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:32 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:32 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-15 21:36:32 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-15 21:36:33 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-15 21:36:33 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-15 21:36:33 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-15 21:36:33 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-15 21:36:33 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-15 21:36:33 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-15 21:36:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:35 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:35 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:35 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:35 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:35 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:35 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:35 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:36:38 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-11-15 21:36:38 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-11-15 21:36:38 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-15 21:36:38 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-15 21:36:39 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-15 21:36:39 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 11632 ms
2021-11-15 21:36:40 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-15 21:36:43 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-15 21:36:43 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-15 21:36:43 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-15 21:36:43 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-11-15 21:36:43 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-11-15 21:36:43 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1636983403094'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-11-15 21:36:43 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-11-15 21:36:43 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-15 21:36:43 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@cc91fe3
2021-11-15 21:36:43 INFO  main p6spy 2021-11-15 21:36:43 | 耗时 7 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-11-15 21:36:44 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-15 21:36:44 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-15 21:36:44 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-15 21:36:44 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-15 21:36:45 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-15 21:36:46 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-15 21:36:46 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-15 21:36:46 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-15 21:36:46 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-11-15 21:36:46 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-11-15 21:36:46 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-11-15 21:36:46 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 19.476 seconds (JVM running for 22.92)
2021-11-15 21:36:46 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-11-15 21:36:46 INFO  main p6spy 2021-11-15 21:36:46 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-11-15 21:36:46 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-11-15 21:36:46 INFO  main p6spy 2021-11-15 21:36:46 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-11-15 21:36:46 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-11-15 21:36:46 INFO  main p6spy 2021-11-15 21:36:46 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-11-15 21:36:46 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-11-15 21:36:46 INFO  main p6spy 2021-11-15 21:36:46 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-11-15 21:36:46 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-11-15 21:36:46 INFO  main p6spy 2021-11-15 21:36:46 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-11-15 21:36:46 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-11-15 21:36:46 INFO  main p6spy 2021-11-15 21:36:46 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-11-15 21:36:46 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-11-15 21:36:47 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-11-15 21:36:47 INFO  main p6spy 2021-11-15 21:36:47 | 耗时 634 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-11-15 21:36:47 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-11-15 21:36:47 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1636983038256"'s failed in-progress jobs.
2021-11-15 21:36:47 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636983403094 started.
2021-11-15 21:36:51 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-11-15 21:36:51 INFO  main p6spy 2021-11-15 21:36:51 | 耗时 2 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-11-15 21:36:51 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-11-15 21:36:51 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-11-15 21:36:51 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-11-15 21:36:51 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-11-15 21:37:08 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-11-15 21:37:08 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-11-15 21:37:08 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-11-15 21:37:08 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-11-15 21:37:08 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-11-15 21:37:18 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-15 21:37:18 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-11-15 21:37:18 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 28 ms
2021-11-15 21:37:18 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-11-15 21:37:19 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:37:19 | 耗时 18 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 21:37:19 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:37:19 | 耗时 12 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 21:37:19 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:37:19 | 耗时 9 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 21:37:20 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 21:37:20 | 耗时 7 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-15 21:37:20 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 21:37:20 | 耗时 4 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-15 21:37:20 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 21:37:20 | 耗时 10 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:37:20 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 21:37:20 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-15 21:37:20 INFO  Febs-Async-Thread1 p6spy 2021-11-15 21:37:20 | 耗时 9 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:37:20.938+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 71, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 21:37:29 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 21:37:29 | 耗时 1 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '55' WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF') AND Cost_Name = '+86' AND sms_type = '1');
2021-11-15 21:37:29 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 21:37:29 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF') AND Cost_Name = '+86' AND sms_type = '1');
2021-11-15 21:37:29 INFO  Febs-Async-Thread2 p6spy 2021-11-15 21:37:29 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-15T21:37:29.239+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 116, ' organizationCodes: "SMS210306175250BLLX,SMS210306175141COZC,SMS210305203755SPKD,SMS210305203702PDDO,SMS210305203207WJUI,SMS210305203013GMGZ,SMS210305202704OFLQ,SMS201210203032CPVY,SMS201210172300COBD,SMS201117144746HQMF" costName: "+86" smsType: "1" operator: null costValue: "55"', '批量修改商户资费', 'admin');
2021-11-15 21:37:29 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 21:37:29 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:37:29 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 21:37:29 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-15 21:37:29 INFO  Febs-Async-Thread3 p6spy 2021-11-15 21:37:29 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:37:29.302+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 22, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 21:37:41 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 21:37:41 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:37:41 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 21:37:41 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-15 21:37:41 INFO  Febs-Async-Thread4 p6spy 2021-11-15 21:37:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:37:41.299+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 22, ' request: "QueryRequest(pageSize=10, pageNum=2, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 21:37:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-15 21:37:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636983403094 paused.
2021-11-15 21:37:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-15 21:37:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-15 21:37:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636983403094 shutting down.
2021-11-15 21:37:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636983403094 paused.
2021-11-15 21:37:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636983403094 shutdown complete.
2021-11-15 21:37:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-15 21:37:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-15 21:37:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-15 21:37:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-15 21:37:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-15 21:37:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2021-11-15 21:38:46 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 72244 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-11-15 21:38:46 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-11-15 21:38:50 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-15 21:38:50 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-15 21:38:51 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 770ms. Found 0 repository interfaces.
2021-11-15 21:38:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$33c834dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$ee89fd28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$ad53e015] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$bfdd5499] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$80230a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:52 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-15 21:38:52 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-15 21:38:53 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-15 21:38:53 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-15 21:38:53 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-15 21:38:53 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-15 21:38:53 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-15 21:38:53 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-15 21:38:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 21:38:59 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-11-15 21:38:59 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-11-15 21:38:59 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-15 21:38:59 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-15 21:39:00 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-15 21:39:00 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 13635 ms
2021-11-15 21:39:01 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-15 21:39:04 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-15 21:39:04 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-15 21:39:04 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-15 21:39:04 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-11-15 21:39:04 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-11-15 21:39:04 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1636983544524'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-11-15 21:39:04 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-11-15 21:39:04 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-15 21:39:04 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6094ad4
2021-11-15 21:39:04 INFO  main p6spy 2021-11-15 21:39:04 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-11-15 21:39:05 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-15 21:39:06 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-15 21:39:06 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-15 21:39:06 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-15 21:39:06 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-15 21:39:07 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-15 21:39:07 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-15 21:39:07 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-15 21:39:07 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-11-15 21:39:07 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-11-15 21:39:07 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-11-15 21:39:07 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 21.983 seconds (JVM running for 25.141)
2021-11-15 21:39:07 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-11-15 21:39:07 INFO  main p6spy 2021-11-15 21:39:07 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-11-15 21:39:07 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-11-15 21:39:07 INFO  main p6spy 2021-11-15 21:39:07 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-11-15 21:39:07 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-11-15 21:39:07 INFO  main p6spy 2021-11-15 21:39:07 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-11-15 21:39:07 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-11-15 21:39:07 INFO  main p6spy 2021-11-15 21:39:07 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-11-15 21:39:07 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-11-15 21:39:07 INFO  main p6spy 2021-11-15 21:39:07 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-11-15 21:39:07 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-11-15 21:39:07 INFO  main p6spy 2021-11-15 21:39:07 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-11-15 21:39:07 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-11-15 21:39:08 INFO  main p6spy 2021-11-15 21:39:08 | 耗时 628 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-11-15 21:39:08 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-11-15 21:39:08 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-11-15 21:39:08 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1636983403094"'s failed in-progress jobs.
2021-11-15 21:39:08 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636983544524 started.
2021-11-15 21:39:12 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-11-15 21:39:12 INFO  main p6spy 2021-11-15 21:39:12 | 耗时 2 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-11-15 21:39:12 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-11-15 21:39:12 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-11-15 21:39:12 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-11-15 21:39:12 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-11-15 21:39:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-11-15 21:39:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-11-15 21:39:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-11-15 21:39:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-11-15 21:39:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-11-15 21:39:47 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-15 21:39:47 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-11-15 21:39:47 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 20 ms
2021-11-15 21:39:47 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-11-15 21:39:47 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:39:47 | 耗时 9 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 21:39:47 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:39:47 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 21:39:47 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:39:47 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 21:39:48 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 21:39:48 | 耗时 5 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-15 21:39:48 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 21:39:48 | 耗时 2 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-15 21:39:48 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 21:39:48 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:39:49 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 21:39:49 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-15 21:39:49 INFO  Febs-Async-Thread1 p6spy 2021-11-15 21:39:49 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:39:49.018+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 69, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 21:39:51 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 21:39:51 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:39:51 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 21:39:51 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 21:39:51 INFO  Febs-Async-Thread2 p6spy 2021-11-15 21:39:51 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:39:51.936+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 18, ' request: "QueryRequest(pageSize=30, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 21:40:24 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 21:40:23 | 耗时 10 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '54' WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1');
2021-11-15 21:40:24 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 21:40:24 | 耗时 21 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1');
2021-11-15 21:40:57 INFO  Febs-Async-Thread3 p6spy 2021-11-15 21:40:57 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-15T21:40:57.320+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 49653, ' organizationCodes: "SMS210306175250BLLX,SMS210306175141COZC,SMS210305203755SPKD,SMS210305203702PDDO,SMS210305203207WJUI,SMS210305203013GMGZ,SMS210305202704OFLQ,SMS201210203032CPVY,SMS201210172300COBD,SMS201117144746HQMF,SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: null costValue: "54"', '批量修改商户资费', 'admin');
2021-11-15 21:40:57 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 21:40:57 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:40:57 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 21:40:57 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 21:40:57 INFO  Febs-Async-Thread4 p6spy 2021-11-15 21:40:57 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:40:57.400+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 26, ' request: "QueryRequest(pageSize=30, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 21:41:52 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 21:41:52 | 耗时 1 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '55' WHERE (Organization_Code IN ('SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 21:41:52 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 21:41:52 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 21:41:52 INFO  Febs-Async-Thread5 p6spy 2021-11-15 21:41:52 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-15T21:41:52.924+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 42, ' organizationCodes: "SMS210305202704OFLQ,SMS201210203032CPVY,SMS201210172300COBD,SMS201117144746HQMF,SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: "CMCC" costValue: "55"', '批量修改商户资费', 'admin');
2021-11-15 21:41:52 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 21:41:52 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:41:52 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 21:41:52 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 21:41:53 INFO  Febs-Async-Thread1 p6spy 2021-11-15 21:41:53 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:41:52.991+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 25, ' request: "QueryRequest(pageSize=30, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 21:42:19 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 21:42:19 | 耗时 1 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '40' WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+91' AND sms_type = '1');
2021-11-15 21:42:19 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 21:42:19 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+91' AND sms_type = '1');
2021-11-15 21:42:19 INFO  Febs-Async-Thread2 p6spy 2021-11-15 21:42:19 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-15T21:42:19.443+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 65, ' organizationCodes: "SMS210306175250BLLX,SMS210306175141COZC,SMS210305203755SPKD,SMS210305203702PDDO,SMS210305203207WJUI,SMS210305203013GMGZ,SMS210305202704OFLQ,SMS201210203032CPVY,SMS201210172300COBD,SMS201117144746HQMF,SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+91" smsType: "1" operator: "CMCC" costValue: "40"', '批量修改商户资费', 'admin');
2021-11-15 21:42:19 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 21:42:19 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:42:19 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 21:42:19 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 21:42:19 INFO  Febs-Async-Thread3 p6spy 2021-11-15 21:42:19 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:42:19.520+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 29, ' request: "QueryRequest(pageSize=30, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 21:43:13 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 21:43:13 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:43:13 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 21:43:13 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-15 21:43:13 INFO  Febs-Async-Thread4 p6spy 2021-11-15 21:43:13 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:43:13.331+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 50, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 21:43:32 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 21:43:32 | 耗时 1 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '40' WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF') AND Cost_Name = '+91' AND sms_type = '1');
2021-11-15 21:43:32 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 21:43:32 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF') AND Cost_Name = '+91' AND sms_type = '1');
2021-11-15 21:43:32 INFO  Febs-Async-Thread5 p6spy 2021-11-15 21:43:32 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-15T21:43:32.890+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 44, ' organizationCodes: "SMS210306175250BLLX,SMS210306175141COZC,SMS210305203755SPKD,SMS210305203702PDDO,SMS210305203207WJUI,SMS210305203013GMGZ,SMS210305202704OFLQ,SMS201210203032CPVY,SMS201210172300COBD,SMS201117144746HQMF" costName: "+91" smsType: "1" operator: "CUCC" costValue: "40"', '批量修改商户资费', 'admin');
2021-11-15 21:43:32 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:43:32 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:43:32 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:43:32 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-15 21:43:32 INFO  Febs-Async-Thread1 p6spy 2021-11-15 21:43:32 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:43:32.951+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 17, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 21:43:59 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 21:43:59 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:43:59 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 21:43:59 | 耗时 6 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 21:43:59 INFO  Febs-Async-Thread2 p6spy 2021-11-15 21:43:59 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:43:59.368+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 39, ' request: "QueryRequest(pageSize=30, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 21:44:23 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 21:44:23 | 耗时 11 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '54' WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1');
2021-11-15 21:44:23 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 21:44:23 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1');
2021-11-15 21:44:23 INFO  Febs-Async-Thread3 p6spy 2021-11-15 21:44:23 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-15T21:44:23.535+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 22, ' organizationCodes: "SMS210306175250BLLX,SMS210306175141COZC,SMS210305203755SPKD,SMS210305203702PDDO,SMS210305203207WJUI,SMS210305203013GMGZ,SMS210305202704OFLQ,SMS201210203032CPVY,SMS201210172300COBD,SMS201117144746HQMF,SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: null costValue: "54"', '批量修改商户资费', 'admin');
2021-11-15 21:44:23 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 21:44:23 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:44:23 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 21:44:23 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 21:44:23 INFO  Febs-Async-Thread4 p6spy 2021-11-15 21:44:23 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:44:23.593+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 18, ' request: "QueryRequest(pageSize=30, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 21:45:11 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 21:45:11 | 耗时 2 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '55' WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 21:45:11 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 21:45:11 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 21:45:11 INFO  Febs-Async-Thread5 p6spy 2021-11-15 21:45:11 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-15T21:45:11.528+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 33, ' organizationCodes: "SMS210306175250BLLX,SMS210306175141COZC,SMS210305203755SPKD,SMS210305203702PDDO,SMS210305203207WJUI,SMS210305203013GMGZ,SMS210305202704OFLQ,SMS201210203032CPVY,SMS201210172300COBD,SMS201117144746HQMF,SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: "CMCC" costValue: "55"', '批量修改商户资费', 'admin');
2021-11-15 21:45:11 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 21:45:11 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:45:11 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 21:45:11 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 21:45:11 INFO  Febs-Async-Thread1 p6spy 2021-11-15 21:45:11 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:45:11.589+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 20, ' request: "QueryRequest(pageSize=30, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 21:45:22 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:45:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-15 21:45:22 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:45:22 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-15 21:45:22 INFO  Febs-Async-Thread2 p6spy 2021-11-15 21:45:22 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-15T21:45:22.757+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 68, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=null, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=null, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-15 21:46:31 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 21:46:31 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-15 21:49:13 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 21:49:13 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:49:13 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 21:49:13 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-15 21:49:13 INFO  Febs-Async-Thread3 p6spy 2021-11-15 21:49:13 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:49:13.883+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 17, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 21:49:15 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:49:15 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 21:49:15 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 21:49:15 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-15 21:49:15 INFO  Febs-Async-Thread4 p6spy 2021-11-15 21:49:15 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T21:49:15.586+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 32, ' request: "QueryRequest(pageSize=10, pageNum=2, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 21:49:18 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 21:49:18 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2021-11-15 21:49:18 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 21:49:18 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 21:49:27 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 21:49:27 | 耗时 1 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 21:49:27 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 21:49:27 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 21:49:27 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 21:49:27 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-15 21:49:27 INFO  Febs-Async-Thread5 p6spy 2021-11-15 21:49:27 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-15T21:49:27.466+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 38, ' organizationCosts: "[OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=50, state=1, channelId=, operator=, description=, remark=admin添加, createDate=Mon Nov 15 21:49:27 CST 2021), OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=55, state=1, channelId=, operator=CMCC, description=null, remark=null, createDate=null), OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=null, costName=, costValue=NaN, state=, channelId=, operator=, description=null, remark=null, createDate=null)]"', '商户用户资费更新', 'admin');
2021-11-15 21:50:46 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 21:50:46 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 45);
2021-11-15 21:57:29 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-15 21:57:29 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636983544524 paused.
2021-11-15 21:57:29 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-15 21:57:29 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-15 21:57:29 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636983544524 shutting down.
2021-11-15 21:57:29 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636983544524 paused.
2021-11-15 21:57:29 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636983544524 shutdown complete.
2021-11-15 21:57:29 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-15 21:57:29 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-15 21:57:29 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-15 21:57:29 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-15 21:57:29 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-15 21:57:29 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2021-11-15 22:12:57 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 72396 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-11-15 22:12:57 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-11-15 22:13:02 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-15 22:13:02 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-15 22:13:03 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 889ms. Found 0 repository interfaces.
2021-11-15 22:13:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8eaefd13] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$4970c55e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$83aa84b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$1ac41ccf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$62e8f8dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:04 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-15 22:13:04 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-15 22:13:04 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-15 22:13:04 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-15 22:13:04 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-15 22:13:04 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-15 22:13:04 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-15 22:13:04 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-15 22:13:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:13:11 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-11-15 22:13:11 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-11-15 22:13:11 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-15 22:13:11 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-15 22:13:12 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-15 22:13:12 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 14074 ms
2021-11-15 22:13:13 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-15 22:13:16 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-15 22:13:16 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-15 22:13:16 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-15 22:13:16 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-11-15 22:13:16 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-11-15 22:13:16 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1636985596853'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-11-15 22:13:16 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-11-15 22:13:16 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-15 22:13:16 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5d8a1456
2021-11-15 22:13:17 INFO  main p6spy 2021-11-15 22:13:17 | 耗时 10 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-11-15 22:13:18 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-15 22:13:18 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-15 22:13:18 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-15 22:13:18 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-15 22:13:19 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-15 22:13:20 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-15 22:13:20 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-15 22:13:20 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-15 22:13:20 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-11-15 22:13:20 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-11-15 22:13:20 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-11-15 22:13:20 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 23.517 seconds (JVM running for 28.145)
2021-11-15 22:13:20 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-11-15 22:13:20 INFO  main p6spy 2021-11-15 22:13:20 | 耗时 4 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-11-15 22:13:20 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-11-15 22:13:20 INFO  main p6spy 2021-11-15 22:13:20 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-11-15 22:13:20 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-11-15 22:13:20 INFO  main p6spy 2021-11-15 22:13:20 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-11-15 22:13:20 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-11-15 22:13:20 INFO  main p6spy 2021-11-15 22:13:20 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-11-15 22:13:20 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-11-15 22:13:20 INFO  main p6spy 2021-11-15 22:13:20 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-11-15 22:13:20 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-11-15 22:13:20 INFO  main p6spy 2021-11-15 22:13:20 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-11-15 22:13:20 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-11-15 22:13:21 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-11-15 22:13:21 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-11-15 22:13:21 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1636983544524"'s failed in-progress jobs.
2021-11-15 22:13:21 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636985596853 started.
2021-11-15 22:13:21 INFO  main p6spy 2021-11-15 22:13:21 | 耗时 1029 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-11-15 22:13:27 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-11-15 22:13:27 INFO  main p6spy 2021-11-15 22:13:27 | 耗时 8 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-11-15 22:13:27 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-11-15 22:13:27 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-11-15 22:13:28 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-11-15 22:13:28 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-11-15 22:13:42 INFO  http-nio-8088-exec-3 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-15 22:13:42 INFO  http-nio-8088-exec-3 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-11-15 22:13:42 INFO  http-nio-8088-exec-3 org.springframework.web.servlet.DispatcherServlet Completed initialization in 30 ms
2021-11-15 22:13:42 INFO  http-nio-8088-exec-3 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-11-15 22:13:43 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:13:43 | 耗时 12 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 22:13:43 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:13:43 | 耗时 5 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 22:13:43 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:13:43 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 22:13:45 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:13:45 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 22:13:45 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:13:45 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 22:13:45 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:13:45 | 耗时 5 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-15 22:13:46 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:13:46 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-15 22:13:46 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:13:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-15 22:13:46 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:13:46 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-15 22:13:46 INFO  Febs-Async-Thread1 p6spy 2021-11-15 22:13:46 | 耗时 15 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-15T22:13:46.466+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 192, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=null, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=null, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-15 22:13:52 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-11-15 22:13:52 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-11-15 22:13:52 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-11-15 22:13:52 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-11-15 22:13:52 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-11-15 22:13:52 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:13:52 | 耗时 4 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-15 22:14:36 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:14:36 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu (MENU_NAME, TYPE, PARENT_ID, CREATE_TIME, PERMS) VALUES ('批量修改费率', '1', 195, '2021-11-15T22:14:36.424+0800', 'agent:updateCosts');
2021-11-15 22:14:36 INFO  Febs-Async-Thread2 p6spy 2021-11-15 22:14:36 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.MenuController.addMenu()', '2021-11-15T22:14:36.442+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 17, ' menu: "Menu(menuId=390, parentId=195, menuName=批量修改费率, url=null, perms=agent:updateCosts, icon=null, type=1, orderNum=null, createTime=Mon Nov 15 22:14:36 CST 2021, modifyTime=null)"', '新增菜单/按钮', 'admin');
2021-11-15 22:14:36 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 22:14:36 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-15 22:14:39 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:14:39 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-15 22:14:39 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:14:39 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2021-11-15 22:14:39 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:14:39 | 耗时 2 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2021-11-15 22:14:50 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:14:50 | 耗时 2 ms | SQL 语句：
UPDATE t_role SET MODIFY_TIME = '2021-11-15T22:14:50.908+0800', ROLE_NAME = '系统管理员', REMARK = '系统管理员，拥有所有操作权限 ^_^' WHERE ROLE_ID = 1;
2021-11-15 22:14:50 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:14:50 | 耗时 3 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('1'));
2021-11-15 22:14:51 INFO  Febs-Async-Thread3 p6spy 2021-11-15 22:14:51 | 耗时 8 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.RoleController.updateRole()', '2021-11-15T22:14:51.119+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 208, ' role: "Role(roleId=1, roleName=系统管理员, remark=系统管理员，拥有所有操作权限 ^_^, createTime=null, modifyTime=Mon Nov 15 22:14:50 CST 2021, menuIds=1,3,11,12,13,286,160,161,4,14,15,16,162,5,17,18,19,163,6,20,21,22,164,176,177,178,179,180,181,288,289,182,183,184,365,366,367,368,371,374,186,195,257,287,320,380,381,390,187,188,189,190,191,205,219,197,198,199,295,306,372,192,193,258,263,303,316,318,329,338,340,341,359,389,200,201,202,203,211,206,305,360,361,362,207,208,209,210,220,221,222,231,194,262,227,228,229,296,373,375,376,377,378,379,259,260,347,382,383,261,346,384,385,387,388,300,301,302,314,325,345,213,246,279,315,354,247,280,285,298,304,317,363,364,248,281,254,256,255,242,243,244,245,274,275,276,277,290,291,292,355,356,357,348,349,350,351,212,297,339,352,353,386,223,224,225,226,215,216,217,218,249,250,251,252,253,307,308,309,310,311,312,313,337,344,264,278,265,266,293,330,326,331,327,335,328,336,299,332,319,333,321,334,267,268,271,282,269,272,283,270,273,284,322,323,324,2,8,23,10,24,170,136,171,172,127,128,129,131,175,101,102,103,104,105,106,107,108,173,109,110,174,137,138,165,139,166,115,132,133,135,134,126,159,116,117,119,121,122,123,118,125,167,168,169)"', '修改角色', 'admin');
2021-11-15 22:14:51 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:14:51 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 22:14:51 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:14:51 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 22:14:51 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:14:51 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2021-11-15 22:14:51 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:14:51 | 耗时 2 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2021-11-15 22:16:44 INFO  http-nio-8088-exec-4 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-11-15 22:16:44 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:16:44 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 22:16:44 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:16:44 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 22:16:44 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:16:44 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2021-11-15T21:31:36.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2021-11-15 22:16:44 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:16:44 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2021-11-15T22:16:44.289+0800', 'Chrome 93', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 'admin');
2021-11-15 22:16:44 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:16:44 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 22:16:44 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:16:44 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 22:16:44 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:16:44 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 22:16:45 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:16:45 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 22:16:45 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:16:45 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 22:16:45 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:16:45 | 耗时 0 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-15 22:16:45 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:16:45 | 耗时 5 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-15 22:16:45 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:16:45 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2021-11-15T22:16:45.466+0800' WHERE (USERNAME = 'admin');
2021-11-15 22:16:45 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:16:45 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2021-11-15 22:16:45 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:16:45 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-15 22:16:45 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:16:45 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-15 22:16:45 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:16:45 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2021-11-15 22:16:45 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:16:45 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2021-11-15 22:16:45 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:16:45 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2021-11-15 22:16:45 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:16:45 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2021-11-15 22:16:45 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:16:45 | 耗时 0 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2021-11-15 22:16:47 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:16:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-15 22:16:47 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:16:47 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-15 22:16:47 INFO  Febs-Async-Thread4 p6spy 2021-11-15 22:16:47 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-15T22:16:47.662+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 33, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=null, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=null, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-15 22:18:35 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:18:35 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 22:18:35 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:18:35 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 22:18:35 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:18:35 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 22:18:36 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:18:36 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-15 22:18:36 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:18:36 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-15 22:18:36 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 22:18:36 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-15 22:18:36 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 22:18:36 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-15 22:18:36 INFO  Febs-Async-Thread5 p6spy 2021-11-15 22:18:36 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-15T22:18:36.451+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 34, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=null, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=null, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-15 22:20:16 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-15 22:20:16 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636985596853 paused.
2021-11-15 22:20:16 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-15 22:20:16 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-15 22:20:16 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636985596853 shutting down.
2021-11-15 22:20:16 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636985596853 paused.
2021-11-15 22:20:16 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636985596853 shutdown complete.
2021-11-15 22:20:16 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-15 22:20:16 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-15 22:20:16 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-15 22:20:16 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-15 22:20:16 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-15 22:20:16 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2021-11-15 22:20:28 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 64096 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-11-15 22:20:28 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-11-15 22:20:31 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-15 22:20:31 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-15 22:20:32 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 829ms. Found 0 repository interfaces.
2021-11-15 22:20:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$117c7851] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$cc3e409c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$8b082389] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:34 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$9d91980d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:34 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:34 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e5b6741a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:34 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:34 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:34 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-15 22:20:34 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-15 22:20:34 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-15 22:20:34 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-15 22:20:34 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-15 22:20:34 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-15 22:20:34 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-15 22:20:34 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-15 22:20:34 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:34 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:34 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:40 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:40 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:40 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:40 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:20:40 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-11-15 22:20:40 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-11-15 22:20:40 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-15 22:20:40 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-15 22:20:41 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-15 22:20:41 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 12594 ms
2021-11-15 22:20:42 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-15 22:20:45 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-15 22:20:45 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-15 22:20:45 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-15 22:20:45 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-11-15 22:20:45 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-11-15 22:20:45 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1636986045654'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-11-15 22:20:45 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-11-15 22:20:45 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-15 22:20:45 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3d8e1fa6
2021-11-15 22:20:45 INFO  main p6spy 2021-11-15 22:20:45 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-11-15 22:20:47 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-15 22:20:47 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-15 22:20:47 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-15 22:20:47 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-15 22:20:47 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-15 22:20:48 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-15 22:20:48 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-15 22:20:48 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-15 22:20:48 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-11-15 22:20:48 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-11-15 22:20:48 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-11-15 22:20:48 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 21.39 seconds (JVM running for 24.974)
2021-11-15 22:20:48 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-11-15 22:20:48 INFO  main p6spy 2021-11-15 22:20:48 | 耗时 2 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-11-15 22:20:48 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-11-15 22:20:48 INFO  main p6spy 2021-11-15 22:20:48 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-11-15 22:20:48 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-11-15 22:20:48 INFO  main p6spy 2021-11-15 22:20:48 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-11-15 22:20:48 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-11-15 22:20:48 INFO  main p6spy 2021-11-15 22:20:48 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-11-15 22:20:48 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-11-15 22:20:48 INFO  main p6spy 2021-11-15 22:20:48 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-11-15 22:20:48 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-11-15 22:20:49 INFO  main p6spy 2021-11-15 22:20:49 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-11-15 22:20:49 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-11-15 22:20:49 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-11-15 22:20:49 INFO  main p6spy 2021-11-15 22:20:49 | 耗时 714 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-11-15 22:20:49 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-11-15 22:20:49 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1636985596853"'s failed in-progress jobs.
2021-11-15 22:20:49 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636986045654 started.
2021-11-15 22:20:53 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-11-15 22:20:53 INFO  main p6spy 2021-11-15 22:20:53 | 耗时 9 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-11-15 22:20:53 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-11-15 22:20:53 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-11-15 22:20:54 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-11-15 22:20:54 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-11-15 22:21:13 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-11-15 22:21:13 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-11-15 22:21:13 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-11-15 22:21:13 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-11-15 22:21:13 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-11-15 22:21:33 INFO  http-nio-8088-exec-2 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-15 22:21:33 INFO  http-nio-8088-exec-2 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-11-15 22:21:33 INFO  http-nio-8088-exec-2 org.springframework.web.servlet.DispatcherServlet Completed initialization in 19 ms
2021-11-15 22:21:33 INFO  http-nio-8088-exec-2 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-11-15 22:21:33 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:21:33 | 耗时 10 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 22:21:33 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:21:33 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 22:21:33 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:21:33 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 22:21:34 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 22:21:34 | 耗时 4 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-15 22:21:35 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:21:35 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-15 22:21:35 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:21:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-15 22:21:35 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:21:35 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-15 22:21:35 INFO  Febs-Async-Thread1 p6spy 2021-11-15 22:21:35 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-15T22:21:35.564+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 112, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=null, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=null, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-15 22:21:44 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:21:44 | 耗时 10 ms | SQL 语句：
UPDATE t_agent_cost SET Value = '55' WHERE (Agent_Id IN ('45', '44') AND Name = '+86' AND sms_type = '1');
2021-11-15 22:21:44 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:21:44 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id IN ('45', '44') AND Name = '+86' AND sms_type = '1');
2021-11-15 22:21:44 INFO  Febs-Async-Thread2 p6spy 2021-11-15 22:21:44 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateCosts()', '2021-11-15T22:21:44.130+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 136, ' agentIds: "45,44" costName: "+86" smsType: "1" operator: null costValue: "55"', '批量修改代理资费', 'admin');
2021-11-15 22:21:44 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:21:44 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-15 22:21:44 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:21:44 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-15 22:21:44 INFO  Febs-Async-Thread3 p6spy 2021-11-15 22:21:44 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-15T22:21:44.212+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 32, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-15 22:21:58 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 22:21:58 | 耗时 4 ms | SQL 语句：
UPDATE t_agent_cost SET Value = '54' WHERE (Agent_Id IN ('45', '44', '43', '36', '35') AND Name = '+86' AND sms_type = '1');
2021-11-15 22:21:58 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 22:21:58 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id IN ('45', '44', '43', '36', '35') AND Name = '+86' AND sms_type = '1');
2021-11-15 22:21:58 INFO  Febs-Async-Thread4 p6spy 2021-11-15 22:21:58 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateCosts()', '2021-11-15T22:21:58.306+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 27, ' agentIds: "45,44,43,36,35" costName: "+86" smsType: "1" operator: null costValue: "54"', '批量修改代理资费', 'admin');
2021-11-15 22:21:58 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:21:58 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-15 22:21:58 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:21:58 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-15 22:21:58 INFO  Febs-Async-Thread5 p6spy 2021-11-15 22:21:58 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-15T22:21:58.423+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 45, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-15 22:22:12 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:22:12 | 耗时 1 ms | SQL 语句：
UPDATE t_agent_cost SET Value = '40' WHERE (Agent_Id IN ('45', '44') AND Name = '+91' AND sms_type = '1');
2021-11-15 22:22:12 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:22:12 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id IN ('45', '44') AND Name = '+91' AND sms_type = '1');
2021-11-15 22:22:13 INFO  Febs-Async-Thread1 p6spy 2021-11-15 22:22:13 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateCosts()', '2021-11-15T22:22:13.012+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 27, ' agentIds: "45,44" costName: "+91" smsType: "1" operator: "CTCC" costValue: "40"', '批量修改代理资费', 'admin');
2021-11-15 22:22:13 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:22:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-15 22:22:13 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:22:13 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-15 22:22:13 INFO  Febs-Async-Thread2 p6spy 2021-11-15 22:22:13 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-15T22:22:13.095+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 33, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-15 22:22:29 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:22:29 | 耗时 0 ms | SQL 语句：
UPDATE t_agent_cost SET Value = '55' WHERE (Agent_Id IN ('45', '44', '43') AND Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 22:22:29 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:22:29 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id IN ('45', '44', '43') AND Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 22:22:29 INFO  Febs-Async-Thread3 p6spy 2021-11-15 22:22:29 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateCosts()', '2021-11-15T22:22:29.240+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 27, ' agentIds: "45,44,43" costName: "+86" smsType: "1" operator: "CMCC" costValue: "55"', '批量修改代理资费', 'admin');
2021-11-15 22:22:29 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:22:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-15 22:22:29 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:22:29 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-15 22:22:29 INFO  Febs-Async-Thread4 p6spy 2021-11-15 22:22:29 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-15T22:22:29.311+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 31, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-15 22:22:49 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:22:49 | 耗时 4 ms | SQL 语句：
UPDATE t_agent_cost SET Value = '55' WHERE (Agent_Id IN ('45', '44', '43', '36', '35') AND Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 22:22:49 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:22:49 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id IN ('45', '44', '43', '36', '35') AND Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 22:22:49 INFO  Febs-Async-Thread5 p6spy 2021-11-15 22:22:49 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateCosts()', '2021-11-15T22:22:49.730+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 22, ' agentIds: "45,44,43,36,35" costName: "+86" smsType: "1" operator: "CMCC" costValue: "55"', '批量修改代理资费', 'admin');
2021-11-15 22:22:49 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:22:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-15 22:22:49 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:22:49 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-15 22:22:49 INFO  Febs-Async-Thread1 p6spy 2021-11-15 22:22:49 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-15T22:22:49.796+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 22, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-15 22:23:09 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:23:09 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 22:23:09 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:23:09 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-15 22:23:09 INFO  Febs-Async-Thread2 p6spy 2021-11-15 22:23:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T22:23:09.623+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 37, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 22:23:16 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:23:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 22:23:16 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:23:16 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 22:23:16 INFO  Febs-Async-Thread3 p6spy 2021-11-15 22:23:16 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T22:23:16.910+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 19, ' request: "QueryRequest(pageSize=30, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 22:23:31 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 22:23:31 | 耗时 5 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '55' WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 22:23:31 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 22:23:31 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 22:23:31 INFO  Febs-Async-Thread4 p6spy 2021-11-15 22:23:31 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-15T22:23:31.630+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 58, ' organizationCodes: "SMS210306175250BLLX,SMS210306175141COZC,SMS210305203755SPKD,SMS210305203702PDDO,SMS210305203207WJUI,SMS210305203013GMGZ,SMS210305202704OFLQ,SMS201210203032CPVY,SMS201210172300COBD,SMS201117144746HQMF,SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: "CMCC" costValue: "55"', '批量修改商户资费', 'admin');
2021-11-15 22:23:31 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:23:31 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 22:23:31 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:23:31 | 耗时 5 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 22:23:31 INFO  Febs-Async-Thread5 p6spy 2021-11-15 22:23:31 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T22:23:31.760+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 35, ' request: "QueryRequest(pageSize=30, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 22:23:56 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:23:56 | 耗时 5 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '50' WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1');
2021-11-15 22:23:56 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:23:56 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1');
2021-11-15 22:23:56 INFO  Febs-Async-Thread1 p6spy 2021-11-15 22:23:56 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-15T22:23:56.165+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 33, ' organizationCodes: "SMS210306175250BLLX,SMS210306175141COZC,SMS210305203755SPKD,SMS210305203702PDDO,SMS210305203207WJUI,SMS210305203013GMGZ,SMS210305202704OFLQ,SMS201210203032CPVY,SMS201210172300COBD,SMS201117144746HQMF,SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: "" costValue: "50"', '批量修改商户资费', 'admin');
2021-11-15 22:23:56 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 22:23:56 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 22:23:56 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 22:23:56 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 22:23:56 INFO  Febs-Async-Thread2 p6spy 2021-11-15 22:23:56 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T22:23:56.287+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 28, ' request: "QueryRequest(pageSize=30, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 22:24:35 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:24:35 | 耗时 3 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '55' WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 22:24:35 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:24:35 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 22:24:35 INFO  Febs-Async-Thread3 p6spy 2021-11-15 22:24:35 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-15T22:24:35.986+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 21, ' organizationCodes: "SMS210306175250BLLX,SMS210306175141COZC,SMS210305203755SPKD,SMS210305203702PDDO,SMS210305203207WJUI,SMS210305203013GMGZ,SMS210305202704OFLQ,SMS201210203032CPVY,SMS201210172300COBD,SMS201117144746HQMF,SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: "CMCC" costValue: "55"', '批量修改商户资费', 'admin');
2021-11-15 22:24:36 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:24:36 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 22:24:36 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:24:36 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 22:24:36 INFO  Febs-Async-Thread4 p6spy 2021-11-15 22:24:36 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T22:24:36.076+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 25, ' request: "QueryRequest(pageSize=30, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 22:24:51 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:24:51 | 耗时 12 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '50' WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1');
2021-11-15 22:24:51 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:24:51 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1');
2021-11-15 22:24:51 INFO  Febs-Async-Thread5 p6spy 2021-11-15 22:24:51 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-15T22:24:51.857+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 24, ' organizationCodes: "SMS210306175250BLLX,SMS210306175141COZC,SMS210305203755SPKD,SMS210305203702PDDO,SMS210305203207WJUI,SMS210305203013GMGZ,SMS210305202704OFLQ,SMS201210203032CPVY,SMS201210172300COBD,SMS201117144746HQMF,SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: null costValue: "50"', '批量修改商户资费', 'admin');
2021-11-15 22:24:51 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:24:51 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 22:24:51 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:24:51 | 耗时 6 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 22:24:51 INFO  Febs-Async-Thread1 p6spy 2021-11-15 22:24:51 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T22:24:51.948+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 27, ' request: "QueryRequest(pageSize=30, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 22:31:20 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-15 22:31:20 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636986045654 paused.
2021-11-15 22:31:20 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-15 22:31:20 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-15 22:31:20 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636986045654 shutting down.
2021-11-15 22:31:20 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636986045654 paused.
2021-11-15 22:31:20 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636986045654 shutdown complete.
2021-11-15 22:31:21 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-15 22:31:21 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-15 22:31:21 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-15 22:31:21 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-15 22:31:21 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-15 22:31:21 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2021-11-15 22:31:32 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 57364 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-11-15 22:31:32 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-11-15 22:31:36 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-15 22:31:36 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-15 22:31:37 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 817ms. Found 0 repository interfaces.
2021-11-15 22:31:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f51b6657] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$afdd2ea2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$6ea7118f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$81308613] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$c9556220] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:39 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-15 22:31:39 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-15 22:31:39 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-15 22:31:39 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-15 22:31:39 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-15 22:31:39 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-15 22:31:39 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-15 22:31:39 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-15 22:31:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:42 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-15 22:31:45 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-11-15 22:31:45 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-11-15 22:31:45 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-15 22:31:45 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-15 22:31:46 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-15 22:31:46 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 13873 ms
2021-11-15 22:31:47 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-15 22:31:50 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-15 22:31:50 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-15 22:31:50 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-15 22:31:50 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-11-15 22:31:50 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-11-15 22:31:50 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1636986710271'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-11-15 22:31:50 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-11-15 22:31:50 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-15 22:31:50 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7c0b792e
2021-11-15 22:31:50 INFO  main p6spy 2021-11-15 22:31:50 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-11-15 22:31:51 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-15 22:31:52 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-15 22:31:52 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-15 22:31:52 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-15 22:31:52 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-15 22:31:53 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-15 22:31:53 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-15 22:31:53 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-15 22:31:53 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-11-15 22:31:53 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-11-15 22:31:53 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-11-15 22:31:53 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 22.19 seconds (JVM running for 25.515)
2021-11-15 22:31:53 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-11-15 22:31:53 INFO  main p6spy 2021-11-15 22:31:53 | 耗时 2 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-11-15 22:31:53 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-11-15 22:31:53 INFO  main p6spy 2021-11-15 22:31:53 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-11-15 22:31:53 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-11-15 22:31:53 INFO  main p6spy 2021-11-15 22:31:53 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-11-15 22:31:53 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-11-15 22:31:53 INFO  main p6spy 2021-11-15 22:31:53 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-11-15 22:31:53 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-11-15 22:31:53 INFO  main p6spy 2021-11-15 22:31:53 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-11-15 22:31:53 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-11-15 22:31:53 INFO  main p6spy 2021-11-15 22:31:53 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-11-15 22:31:53 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-11-15 22:31:54 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-11-15 22:31:54 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-11-15 22:31:54 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1636986045654"'s failed in-progress jobs.
2021-11-15 22:31:54 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636986710271 started.
2021-11-15 22:31:54 INFO  main p6spy 2021-11-15 22:31:54 | 耗时 886 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-11-15 22:32:00 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-11-15 22:32:00 INFO  main p6spy 2021-11-15 22:32:00 | 耗时 3 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-11-15 22:32:00 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-11-15 22:32:00 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-11-15 22:32:00 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-11-15 22:32:00 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-11-15 22:32:20 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-11-15 22:32:20 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-11-15 22:32:20 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-11-15 22:32:20 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-11-15 22:32:20 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-11-15 22:32:38 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-15 22:32:38 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-11-15 22:32:38 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 24 ms
2021-11-15 22:32:38 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-11-15 22:32:38 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 22:32:38 | 耗时 3 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 22:32:38 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 22:32:38 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 22:32:38 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 22:32:38 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 22:32:40 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:32:40 | 耗时 9 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-15 22:32:40 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:32:40 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-15 22:32:41 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:32:41 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 22:32:41 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:32:41 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-15 22:32:41 INFO  Febs-Async-Thread1 p6spy 2021-11-15 22:32:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T22:32:41.361+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 74, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 22:32:46 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:32:46 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 22:32:46 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:32:46 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 22:32:46 INFO  Febs-Async-Thread2 p6spy 2021-11-15 22:32:46 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T22:32:46.238+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 25, ' request: "QueryRequest(pageSize=30, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 22:32:54 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:32:54 | 耗时 6 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '55' WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 22:32:54 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:32:54 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 22:32:54 INFO  Febs-Async-Thread3 p6spy 2021-11-15 22:32:54 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-15T22:32:54.855+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 97, ' organizationCodes: "SMS210306175250BLLX,SMS210306175141COZC,SMS210305203755SPKD,SMS210305203702PDDO,SMS210305203207WJUI,SMS210305203013GMGZ,SMS210305202704OFLQ,SMS201210203032CPVY,SMS201210172300COBD,SMS201117144746HQMF,SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: "CMCC" costValue: "55"', '批量修改商户资费', 'admin');
2021-11-15 22:32:54 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:32:54 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 22:32:54 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:32:54 | 耗时 5 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 22:32:54 INFO  Febs-Async-Thread4 p6spy 2021-11-15 22:32:54 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T22:32:54.961+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 37, ' request: "QueryRequest(pageSize=30, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 22:33:16 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:33:16 | 耗时 4 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '51' WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-15 22:33:16 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:33:16 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-15 22:33:16 INFO  Febs-Async-Thread5 p6spy 2021-11-15 22:33:16 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-15T22:33:16.044+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 38, ' organizationCodes: "SMS210306175250BLLX,SMS210306175141COZC,SMS210305203755SPKD,SMS210305203702PDDO,SMS210305203207WJUI,SMS210305203013GMGZ,SMS210305202704OFLQ,SMS201210203032CPVY,SMS201210172300COBD,SMS201117144746HQMF,SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: "" costValue: "51"', '批量修改商户资费', 'admin');
2021-11-15 22:33:16 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 22:33:16 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 22:33:16 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 22:33:16 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 22:33:16 INFO  Febs-Async-Thread1 p6spy 2021-11-15 22:33:16 | 耗时 7 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T22:33:16.166+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 31, ' request: "QueryRequest(pageSize=30, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 22:33:49 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:33:49 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-15 22:33:49 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:33:49 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-15 22:33:49 INFO  Febs-Async-Thread2 p6spy 2021-11-15 22:33:49 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-15T22:33:49.142+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 97, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=null, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=null, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-15 22:34:15 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:34:15 | 耗时 4 ms | SQL 语句：
UPDATE t_agent_cost SET Value = '51' WHERE (Agent_Id IN ('45', '44', '43', '36', '35') AND Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-15 22:34:15 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:34:15 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id IN ('45', '44', '43', '36', '35') AND Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-15 22:34:15 INFO  Febs-Async-Thread3 p6spy 2021-11-15 22:34:15 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateCosts()', '2021-11-15T22:34:15.321+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 49, ' agentIds: "45,44,43,36,35" costName: "+86" smsType: "1" operator: null costValue: "51"', '批量修改代理资费', 'admin');
2021-11-15 22:34:15 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 22:34:15 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-15 22:34:15 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 22:34:15 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-15 22:34:15 INFO  Febs-Async-Thread4 p6spy 2021-11-15 22:34:15 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-15T22:34:15.409+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 32, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-15 22:34:33 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:34:33 | 耗时 3 ms | SQL 语句：
UPDATE t_agent_cost SET Value = '54' WHERE (Agent_Id IN ('45', '44', '43', '36', '35') AND Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 22:34:33 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:34:33 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id IN ('45', '44', '43', '36', '35') AND Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 22:34:33 INFO  Febs-Async-Thread5 p6spy 2021-11-15 22:34:33 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateCosts()', '2021-11-15T22:34:33.279+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 18, ' agentIds: "45,44,43,36,35" costName: "+86" smsType: "1" operator: "CMCC" costValue: "54"', '批量修改代理资费', 'admin');
2021-11-15 22:34:33 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:34:33 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-15 22:34:33 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:34:33 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-15 22:34:33 INFO  Febs-Async-Thread1 p6spy 2021-11-15 22:34:33 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-15T22:34:33.359+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 37, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-15 22:34:52 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:34:52 | 耗时 4 ms | SQL 语句：
UPDATE t_agent_cost SET Value = '55' WHERE (Agent_Id IN ('45', '44', '43', '36', '35') AND Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 22:34:52 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:34:52 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id IN ('45', '44', '43', '36', '35') AND Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-15 22:34:52 INFO  Febs-Async-Thread2 p6spy 2021-11-15 22:34:52 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateCosts()', '2021-11-15T22:34:52.268+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 15, ' agentIds: "45,44,43,36,35" costName: "+86" smsType: "1" operator: "CMCC" costValue: "55"', '批量修改代理资费', 'admin');
2021-11-15 22:34:52 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:34:52 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-15 22:34:52 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:34:52 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-15 22:34:52 INFO  Febs-Async-Thread3 p6spy 2021-11-15 22:34:52 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-15T22:34:52.329+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 24, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-15 22:35:00 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:35:00 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2021-11-15 22:35:00 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:35:00 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 22:35:19 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:35:19 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-15 22:41:06 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:41:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_pay_channel;
2021-11-15 22:41:06 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:41:06 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel LIMIT 0,10;
2021-11-15 22:41:06 INFO  Febs-Async-Thread4 p6spy 2021-11-15 22:41:06 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.PayChannelController.payChannelList()', '2021-11-15T22:41:06.969+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 25, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" payChannel: PayChannel(id=null, channelName=null, merchNo=null, netwayCode=null, implFullClass=null, weight=null, cost=null, minAmount=null, maxAmount=null, requestUrl=null, callbackUrl=null, payCode=null, signKey=null, encryptKey=null, stateCode=null, key1=null, key2=null, key3=null, key4=null, key5=null, remark=null, createTime=null)', '支付通道列表', 'admin');
2021-11-15 22:41:18 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:41:18 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-15 22:41:19 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 22:41:19 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-15 22:41:19 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 22:41:19 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2021-11-15 22:41:19 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 22:41:19 | 耗时 3 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2021-11-15 22:41:52 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:41:52 | 耗时 1 ms | SQL 语句：
UPDATE t_role SET MODIFY_TIME = '2021-11-15T22:41:52.936+0800', ROLE_NAME = '系统管理员', REMARK = '系统管理员，拥有所有操作权限 ^_^' WHERE ROLE_ID = 1;
2021-11-15 22:41:52 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:41:52 | 耗时 1 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('1'));
2021-11-15 22:41:53 INFO  Febs-Async-Thread5 p6spy 2021-11-15 22:41:53 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.RoleController.updateRole()', '2021-11-15T22:41:53.054+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 119, ' role: "Role(roleId=1, roleName=系统管理员, remark=系统管理员，拥有所有操作权限 ^_^, createTime=null, modifyTime=Mon Nov 15 22:41:52 CST 2021, menuIds=1,3,11,12,13,286,160,161,4,14,15,16,162,5,17,18,19,163,6,20,21,22,164,176,177,178,179,180,181,288,289,182,183,184,185,365,366,367,368,369,370,371,374,186,195,257,287,320,380,381,390,187,188,189,190,191,205,219,196,197,198,199,294,295,306,372,192,193,258,263,303,316,318,329,338,340,341,342,359,389,200,201,202,203,211,206,305,360,361,362,207,208,209,210,220,221,222,231,194,262,227,228,229,296,373,375,376,377,378,379,259,260,347,382,383,261,346,384,385,387,388,300,301,302,314,325,345,213,246,279,315,354,247,280,285,298,304,317,363,364,248,281,254,256,255,242,243,244,245,274,275,276,277,290,291,292,355,356,357,348,349,350,351,358,212,214,297,339,343,352,353,386,223,224,225,226,215,216,217,218,249,250,251,252,253,307,308,309,310,311,312,313,337,344,264,278,265,266,293,330,326,331,327,335,328,336,299,332,319,333,321,334,267,268,271,282,269,272,283,270,273,284,322,323,324,2,8,23,10,24,170,136,171,172,127,128,129,131,175,101,102,103,104,105,106,107,108,173,109,110,174,137,138,165,139,166,115,132,133,135,134,126,159,116,117,119,121,122,123,118,125,167,168,169)"', '修改角色', 'admin');
2021-11-15 22:41:53 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:41:53 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 22:41:53 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:41:53 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 22:41:53 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:41:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2021-11-15 22:41:53 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:41:53 | 耗时 2 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2021-11-15 22:42:13 INFO  http-nio-8088-exec-7 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-11-15 22:42:13 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:42:13 | 耗时 9 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 22:42:13 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:42:13 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 22:42:13 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:42:13 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2021-11-15T22:16:45.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2021-11-15 22:42:13 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:42:13 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2021-11-15T22:42:13.818+0800', 'Chrome 93', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 'admin');
2021-11-15 22:42:13 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 22:42:13 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 22:42:13 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 22:42:13 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 22:42:13 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 22:42:13 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-15 22:42:14 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:42:14 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-15 22:42:14 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:42:14 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-15 22:42:14 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:42:14 | 耗时 0 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-15 22:42:14 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:42:14 | 耗时 7 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-15 22:42:15 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:42:15 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2021-11-15T22:42:15.193+0800' WHERE (USERNAME = 'admin');
2021-11-15 22:42:15 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:42:15 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2021-11-15 22:42:15 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:42:15 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-15 22:42:15 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:42:15 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-15 22:42:15 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:42:15 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2021-11-15 22:42:15 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:42:15 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2021-11-15 22:42:15 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:42:15 | 耗时 2 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2021-11-15 22:42:15 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:42:15 | 耗时 0 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2021-11-15 22:42:15 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:42:15 | 耗时 0 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2021-11-15 22:42:18 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:42:18 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id;
2021-11-15 22:42:18 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:42:18 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2021-11-15 22:42:25 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:42:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_channel_id = 11);
2021-11-15 22:42:25 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:42:25 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value, Operator FROM t_sms_channel_cost WHERE (sms_channel_id = 11) LIMIT 0,10;
2021-11-15 22:42:49 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 22:42:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_type = 1 AND sms_channel_id = 11 AND name = '+86' AND Operator = 'CMCC');
2021-11-15 22:42:49 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 22:42:49 | 耗时 9 ms | SQL 语句：
INSERT INTO t_sms_channel_cost (create_time, name, sms_channel_id, description, remark, sms_type, value, Operator) VALUES ('2021-11-15T22:42:49.977+0800', '+86', 11, '', 'admin添加', 1, '40', 'CMCC');
2021-11-15 22:42:50 INFO  Febs-Async-Thread1 p6spy 2021-11-15 22:42:50 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelCostController.addSmsChannelCost()', '2021-11-15T22:42:49.996+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 32, ' smsChannelCost: SmsChannelCost(id=28, smsChannelId=11, smsType=1, name=+86, operator=CMCC, value=40, description=, remark=admin添加, createTime=Mon Nov 15 22:42:49 CST 2021)', '新增SmsChannelCost', 'admin');
2021-11-15 22:42:50 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 22:42:50 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_channel_id = 11);
2021-11-15 22:42:50 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 22:42:50 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value, Operator FROM t_sms_channel_cost WHERE (sms_channel_id = 11) LIMIT 0,10;
2021-11-15 22:42:58 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:42:58 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_type = 1 AND sms_channel_id = 11 AND name = '+86' AND ((Operator IS NULL OR Operator = '')));
2021-11-15 22:42:58 INFO  Febs-Async-Thread2 p6spy 2021-11-15 22:42:58 | 耗时 12 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelCostController.addSmsChannelCost()', '2021-11-15T22:42:58.956+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 12, ' smsChannelCost: SmsChannelCost(id=null, smsChannelId=11, smsType=1, name=+86, operator=, value=25, description=, remark=admin添加, createTime=null)', '新增SmsChannelCost', 'admin');
2021-11-15 22:43:03 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:43:03 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value, Operator FROM t_sms_channel_cost WHERE Id = 25;
2021-11-15 22:43:06 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:43:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_type = 1 AND sms_channel_id = 11 AND name = '+86' AND Id <> 25 AND ((Operator IS NULL OR Operator = '')));
2021-11-15 22:43:06 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:43:06 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value, Operator FROM t_sms_channel_cost WHERE Id = 25;
2021-11-15 22:43:06 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:43:06 | 耗时 3 ms | SQL 语句：
UPDATE t_sms_channel_cost SET name = '+86', sms_channel_id = 11, description = '', sms_type = 1, value = '30', Operator = '' WHERE Id = 25;
2021-11-15 22:43:06 INFO  Febs-Async-Thread3 p6spy 2021-11-15 22:43:06 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelCostController.updateSmsChannelCost()', '2021-11-15T22:43:06.774+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 254, ' smsChannelCost: SmsChannelCost(id=25, smsChannelId=11, smsType=1, name=+86, operator=, value=30, description=, remark=null, createTime=null)', '修改SmsChannelCost', 'admin');
2021-11-15 22:43:06 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:43:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_channel_id = 11);
2021-11-15 22:43:06 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:43:06 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value, Operator FROM t_sms_channel_cost WHERE (sms_channel_id = 11) LIMIT 0,10;
2021-11-15 22:43:11 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:43:11 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value, Operator FROM t_sms_channel_cost WHERE Id = 27;
2021-11-15 22:43:17 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 22:43:17 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_type = 1 AND sms_channel_id = 11 AND name = '+86' AND Id <> 27 AND Operator = 'CUCC');
2021-11-15 22:43:17 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 22:43:17 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value, Operator FROM t_sms_channel_cost WHERE Id = 27;
2021-11-15 22:43:17 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 22:43:17 | 耗时 2 ms | SQL 语句：
UPDATE t_sms_channel_cost SET name = '+86', sms_channel_id = 11, description = '', sms_type = 1, value = '35', Operator = 'CUCC' WHERE Id = 27;
2021-11-15 22:43:17 INFO  Febs-Async-Thread4 p6spy 2021-11-15 22:43:17 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelCostController.updateSmsChannelCost()', '2021-11-15T22:43:17.504+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 20, ' smsChannelCost: SmsChannelCost(id=27, smsChannelId=11, smsType=1, name=+86, operator=CUCC, value=35, description=, remark=null, createTime=null)', '修改SmsChannelCost', 'admin');
2021-11-15 22:43:17 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:43:17 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_channel_id = 11);
2021-11-15 22:43:17 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:43:17 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value, Operator FROM t_sms_channel_cost WHERE (sms_channel_id = 11) LIMIT 0,10;
2021-11-15 22:43:24 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:43:24 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-15 22:43:24 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:43:24 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-15 22:43:24 INFO  Febs-Async-Thread5 p6spy 2021-11-15 22:43:24 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-15T22:43:24.597+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 25, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=null, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=null, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-15 22:43:36 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:43:36 | 耗时 11 ms | SQL 语句：
UPDATE t_agent_cost SET Value = '50' WHERE (Agent_Id IN ('45', '44', '43', '36', '35') AND Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-15 22:43:36 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:43:36 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id IN ('45', '44', '43', '36', '35') AND Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-15 22:43:36 INFO  Febs-Async-Thread1 p6spy 2021-11-15 22:43:36 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateCosts()', '2021-11-15T22:43:36.598+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 25, ' agentIds: "45,44,43,36,35" costName: "+86" smsType: "1" operator: "" costValue: "50"', '批量修改代理资费', 'admin');
2021-11-15 22:43:36 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:43:36 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-15 22:43:36 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:43:36 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-15 22:43:36 INFO  Febs-Async-Thread2 p6spy 2021-11-15 22:43:36 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-15T22:43:36.669+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 28, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-15 22:43:46 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:43:46 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 22:43:46 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:43:46 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-15 22:43:46 INFO  Febs-Async-Thread3 p6spy 2021-11-15 22:43:46 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T22:43:46.774+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 26, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 22:43:50 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:43:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 22:43:50 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:43:50 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 22:43:50 INFO  Febs-Async-Thread4 p6spy 2021-11-15 22:43:50 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T22:43:50.072+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 17, ' request: "QueryRequest(pageSize=30, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-15 22:43:59 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:43:59 | 耗时 12 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '50' WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-15 22:43:59 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:43:59 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-15 22:43:59 INFO  Febs-Async-Thread5 p6spy 2021-11-15 22:43:59 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-15T22:43:59.536+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 22, ' organizationCodes: "SMS210306175250BLLX,SMS210306175141COZC,SMS210305203755SPKD,SMS210305203702PDDO,SMS210305203207WJUI,SMS210305203013GMGZ,SMS210305202704OFLQ,SMS201210203032CPVY,SMS201210172300COBD,SMS201117144746HQMF,SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: null costValue: "50"', '批量修改商户资费', 'admin');
2021-11-15 22:43:59 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:43:59 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 22:43:59 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:43:59 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 22:43:59 INFO  Febs-Async-Thread1 p6spy 2021-11-15 22:43:59 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T22:43:59.615+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 25, ' request: "QueryRequest(pageSize=30, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 22:45:09 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:45:09 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2021-11-15T00:00:00.000+0800' AND create_time <= '2021-11-15T23:59:59.000+0800' AND audit_state <> 1);
2021-11-15 22:45:09 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:45:09 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2021-11-15T00:00:00.000+0800' AND create_time <= '2021-11-15T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2021-11-15 22:45:11 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:45:11 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2021-11-15 22:45:11 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 22:45:11 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2021-11-15T00:00:00.000+0800' AND create_time <= '2021-11-15T23:59:59.000+0800');
2021-11-15 22:48:20 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:48:20 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2021-11-15T00:00:00.000+0800' AND create_time <= '2021-11-15T23:59:59.000+0800');
2021-11-15 22:48:20 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:48:20 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2021-11-15T00:00:00.000+0800' AND create_time <= '2021-11-15T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2021-11-15 22:49:08 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:49:08 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2021-11-15 22:49:08 INFO  http-nio-8088-exec-4 p6spy 2021-11-15 22:49:08 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-15 22:51:59 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:51:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2021-11-15T00:00:00.000+0800' AND create_time <= '2021-11-15T23:59:59.000+0800');
2021-11-15 22:51:59 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:51:59 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2021-11-15T00:00:00.000+0800' AND create_time <= '2021-11-15T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2021-11-15 22:53:28 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:53:28 | 耗时 1 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '55' WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-15 22:53:28 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:53:28 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-15 22:53:28 INFO  Febs-Async-Thread2 p6spy 2021-11-15 22:53:28 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-15T22:53:28.846+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 65, ' organizationCodes: "SMS210306175250BLLX,SMS210306175141COZC,SMS210305203755SPKD,SMS210305203702PDDO,SMS210305203207WJUI,SMS210305203013GMGZ,SMS210305202704OFLQ,SMS201210203032CPVY,SMS201210172300COBD,SMS201117144746HQMF,SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: null costValue: "55"', '批量修改商户资费', 'admin');
2021-11-15 22:53:28 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:53:28 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 22:53:28 INFO  http-nio-8088-exec-6 p6spy 2021-11-15 22:53:28 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 22:53:28 INFO  Febs-Async-Thread3 p6spy 2021-11-15 22:53:28 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T22:53:28.932+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 26, ' request: "QueryRequest(pageSize=30, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 22:54:01 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:54:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2021-11-15T00:00:00.000+0800' AND create_time <= '2021-11-15T23:59:59.000+0800');
2021-11-15 22:54:01 INFO  http-nio-8088-exec-10 p6spy 2021-11-15 22:54:01 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2021-11-15T00:00:00.000+0800' AND create_time <= '2021-11-15T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2021-11-15 22:54:37 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:54:37 | 耗时 7 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '50' WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-15 22:54:37 INFO  http-nio-8088-exec-2 p6spy 2021-11-15 22:54:37 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS210306175250BLLX', 'SMS210306175141COZC', 'SMS210305203755SPKD', 'SMS210305203702PDDO', 'SMS210305203207WJUI', 'SMS210305203013GMGZ', 'SMS210305202704OFLQ', 'SMS201210203032CPVY', 'SMS201210172300COBD', 'SMS201117144746HQMF', 'SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-15 22:54:37 INFO  Febs-Async-Thread4 p6spy 2021-11-15 22:54:37 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-15T22:54:37.674+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 24, ' organizationCodes: "SMS210306175250BLLX,SMS210306175141COZC,SMS210305203755SPKD,SMS210305203702PDDO,SMS210305203207WJUI,SMS210305203013GMGZ,SMS210305202704OFLQ,SMS201210203032CPVY,SMS201210172300COBD,SMS201117144746HQMF,SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: null costValue: "50"', '批量修改商户资费', 'admin');
2021-11-15 22:54:37 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:54:37 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-15 22:54:37 INFO  http-nio-8088-exec-7 p6spy 2021-11-15 22:54:37 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2021-11-15 22:54:37 INFO  Febs-Async-Thread5 p6spy 2021-11-15 22:54:37 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-15T22:54:37.756+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 27, ' request: "QueryRequest(pageSize=30, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-15 22:54:47 INFO  http-nio-8088-exec-8 p6spy 2021-11-15 22:54:47 | 耗时 8 ms | SQL 语句：
DELETE FROM t_sms_channel_cost WHERE Id IN ('27');
2021-11-15 22:54:47 INFO  Febs-Async-Thread1 p6spy 2021-11-15 22:54:47 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelCostController.deleteSmsChannelCost()', '2021-11-15T22:54:47.603+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 19, ' smsChannelCostIds: "27"', '批量删除SmsChannelCost', 'admin');
2021-11-15 22:54:47 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:54:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_channel_id = 11);
2021-11-15 22:54:47 INFO  http-nio-8088-exec-9 p6spy 2021-11-15 22:54:47 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value, Operator FROM t_sms_channel_cost WHERE (sms_channel_id = 11) LIMIT 0,10;
2021-11-15 22:54:49 INFO  http-nio-8088-exec-1 p6spy 2021-11-15 22:54:49 | 耗时 1 ms | SQL 语句：
DELETE FROM t_sms_channel_cost WHERE Id IN ('28');
2021-11-15 22:54:49 INFO  Febs-Async-Thread2 p6spy 2021-11-15 22:54:49 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelCostController.deleteSmsChannelCost()', '2021-11-15T22:54:49.609+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 7, ' smsChannelCostIds: "28"', '批量删除SmsChannelCost', 'admin');
2021-11-15 22:54:49 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:54:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_channel_id = 11);
2021-11-15 22:54:49 INFO  http-nio-8088-exec-3 p6spy 2021-11-15 22:54:49 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value, Operator FROM t_sms_channel_cost WHERE (sms_channel_id = 11) LIMIT 0,10;
2021-11-15 22:55:17 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 22:55:17 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2021-11-15T00:00:00.000+0800' AND create_time <= '2021-11-15T23:59:59.000+0800');
2021-11-15 22:55:17 INFO  http-nio-8088-exec-5 p6spy 2021-11-15 22:55:17 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2021-11-15T00:00:00.000+0800' AND create_time <= '2021-11-15T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2021-11-15 22:57:43 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-15 22:57:43 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636986710271 paused.
2021-11-15 22:57:43 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-15 22:57:43 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-15 22:57:43 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636986710271 shutting down.
2021-11-15 22:57:43 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636986710271 paused.
2021-11-15 22:57:43 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636986710271 shutdown complete.
2021-11-15 22:57:43 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-15 22:57:43 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-15 22:57:43 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-15 22:57:43 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-15 22:57:43 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-15 22:57:43 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
