2022-05-10 11:00:58 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 82976 (C:\work\workspaceSmsBfSvn\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBfSvn\sms\sms-admin)
2022-05-10 11:00:58 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2022-05-10 11:01:02 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-05-10 11:01:02 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-05-10 11:01:03 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 854ms. Found 0 repository interfaces.
2022-05-10 11:01:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7c7bae1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$c289832c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$81536619] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$93dcda9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$dc01b6aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:04 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-05-10 11:01:04 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-05-10 11:01:04 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2022-05-10 11:01:04 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2022-05-10 11:01:04 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2022-05-10 11:01:04 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2022-05-10 11:01:04 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2022-05-10 11:01:04 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2022-05-10 11:01:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 11:01:10 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2022-05-10 11:01:10 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2022-05-10 11:01:10 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-05-10 11:01:10 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2022-05-10 11:01:11 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-05-10 11:01:11 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 12235 ms
2022-05-10 11:01:12 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2022-05-10 11:01:15 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2022-05-10 11:01:15 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-05-10 11:01:15 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2022-05-10 11:01:15 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2022-05-10 11:01:15 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2022-05-10 11:01:15 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1652151675508'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-05-10 11:01:15 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2022-05-10 11:01:15 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2022-05-10 11:01:15 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2b5a04b0
2022-05-10 11:01:15 INFO  main p6spy 2022-05-10 11:01:15 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2022-05-10 11:01:16 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2022-05-10 11:01:17 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-05-10 11:01:17 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2022-05-10 11:01:17 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2022-05-10 11:01:17 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2022-05-10 11:01:18 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2022-05-10 11:01:18 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2022-05-10 11:01:18 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2022-05-10 11:01:18 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2022-05-10 11:01:18 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2022-05-10 11:01:18 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2022-05-10 11:01:18 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 20.238 seconds (JVM running for 22.578)
2022-05-10 11:01:18 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2022-05-10 11:01:18 INFO  main p6spy 2022-05-10 11:01:18 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-05-10 11:01:18 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2022-05-10 11:01:18 INFO  main p6spy 2022-05-10 11:01:18 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2022-05-10 11:01:18 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2022-05-10 11:01:18 INFO  main p6spy 2022-05-10 11:01:18 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2022-05-10 11:01:18 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2022-05-10 11:01:18 INFO  main p6spy 2022-05-10 11:01:18 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-05-10 11:01:18 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2022-05-10 11:01:18 INFO  main p6spy 2022-05-10 11:01:18 | 耗时 0 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2022-05-10 11:01:18 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2022-05-10 11:01:18 INFO  main p6spy 2022-05-10 11:01:18 | 耗时 0 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2022-05-10 11:01:18 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2022-05-10 11:01:18 INFO  main p6spy 2022-05-10 11:01:18 | 耗时 0 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2022-05-10 11:01:18 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2022-05-10 11:01:18 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-05-10 11:01:18 INFO  main p6spy 2022-05-10 11:01:18 | 耗时 0 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-05-10 11:01:18 INFO  main com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-05-10 11:01:18 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2022-05-10 11:01:18 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2022-05-10 11:01:18 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-05-10 11:01:19 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2022-05-10 11:01:19 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2022-05-10 11:01:19 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1652104288009"'s failed in-progress jobs.
2022-05-10 11:01:19 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652151675508 started.
2022-05-10 11:01:27 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2022-05-10 11:01:27 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-05-10 11:01:27 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-05-10 11:01:27 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2022-05-10 11:01:27 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://192.168.189.1:8088/login
2022-05-10 11:04:55 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-05-10 11:04:55 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-05-10 11:04:55 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 17 ms
2022-05-10 11:04:55 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2022-05-10 11:14:08 INFO  http-nio-8088-exec-6 com.hero.sms.common.aspect.LimitAspect IP:192.168.189.1 第 1 次访问key为 [limit_login192.168.189.1]，描述为 [登录接口] 的接口
2022-05-10 11:14:08 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 11:14:08 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-10 11:14:08 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 11:14:08 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-10 11:14:08 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 11:14:08 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2022-05-09T21:34:06.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2022-05-10 11:14:08 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 11:14:08 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2022-05-10T11:14:08.957+0800', 'Chrome 10', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 'admin');
2022-05-10 11:14:09 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 11:14:09 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-10 11:14:09 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 11:14:09 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-10 11:14:09 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 11:14:09 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-10 11:14:10 INFO  http-nio-8088-exec-10 p6spy 2022-05-10 11:14:10 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-10 11:14:10 INFO  http-nio-8088-exec-10 p6spy 2022-05-10 11:14:10 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-10 11:14:10 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 11:14:10 | 耗时 6 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-05-10 11:14:10 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 11:14:10 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-05-10 11:14:11 INFO  http-nio-8088-exec-3 p6spy 2022-05-10 11:14:11 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2022-05-10T11:14:11.185+0800' WHERE (USERNAME = 'admin');
2022-05-10 11:14:11 INFO  http-nio-8088-exec-3 p6spy 2022-05-10 11:14:11 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2022-05-10 11:14:11 INFO  http-nio-8088-exec-3 p6spy 2022-05-10 11:14:11 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-05-10 11:14:11 INFO  http-nio-8088-exec-3 p6spy 2022-05-10 11:14:11 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-05-10 11:14:11 INFO  http-nio-8088-exec-3 p6spy 2022-05-10 11:14:11 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2022-05-10 11:14:11 INFO  http-nio-8088-exec-3 p6spy 2022-05-10 11:14:11 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2022-05-10 11:14:11 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 11:14:11 | 耗时 17 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2022-05-10 11:14:11 INFO  http-nio-8088-exec-1 p6spy 2022-05-10 11:14:11 | 耗时 79 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2022-05-10 11:14:11 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 11:14:11 | 耗时 60 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2022-05-10 11:14:15 INFO  http-nio-8088-exec-2 p6spy 2022-05-10 11:14:15 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-05-10 11:14:15 INFO  http-nio-8088-exec-8 p6spy 2022-05-10 11:14:15 | 耗时 13 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800');
2022-05-10 11:14:20 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 11:14:20 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-10 11:14:20 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 11:14:20 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-10 11:14:23 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 11:14:23 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id WHERE cnl.submit_way = 1;
2022-05-10 11:14:23 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 11:14:23 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id WHERE cnl.submit_way = 1 ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-10 11:18:50 INFO  http-nio-8088-exec-3 p6spy 2022-05-10 11:18:50 | 耗时 18 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800');
2022-05-10 11:18:50 INFO  http-nio-8088-exec-3 p6spy 2022-05-10 11:18:50 | 耗时 64 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-10 11:25:33 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 11:25:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2022-05-10 11:25:33 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 11:25:33 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,10;
2022-05-10 11:25:37 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 11:25:37 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2022-05-10 11:25:37 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 11:25:37 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,50;
2022-05-10 11:25:46 INFO  http-nio-8088-exec-1 p6spy 2022-05-10 11:25:46 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code WHERE (CODE = 'showRunTimeLogSwitch');
2022-05-10 11:25:50 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 11:25:50 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2022-05-10 11:25:50 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 11:25:50 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,50;
2022-05-10 11:28:01 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 11:28:01 | 耗时 1 ms | SQL 语句：
SELECT ID, DESCREPTION, CODE, CREATE_TIME, PARENT_CODE, NAME, REMARK FROM code_sort;
2022-05-10 11:28:19 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 11:28:19 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM code WHERE (SORT_CODE = 'System' AND CODE = 'saveChannelFailWhySwitch' AND IS_DELETE = '0');
2022-05-10 11:28:19 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 11:28:19 | 耗时 4 ms | SQL 语句：
INSERT INTO code (CODE, CREATE_TIME, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE) VALUES ('saveChannelFailWhySwitch', '2022-05-10T11:28:19.634+0800', '', '0', 'OFF', '', '发送记录是否保存上游失败原因的开关', 'System');
2022-05-10 11:28:19 INFO  Febs-Async-Thread1 p6spy 2022-05-10 11:28:19 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.CodeController.addCode()', '2022-05-10T11:28:19.675+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 60, ' code: Code(id=1002, sortCode=System, code=saveChannelFailWhySwitch, name=OFF, parentCode=, orderLevel=null, isDelete=0, description=, remark=发送记录是否保存上游失败原因的开关, createTime=Tue May 10 11:28:19 CST 2022)', '新增Code', 'admin');
2022-05-10 11:28:19 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 11:28:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2022-05-10 11:28:19 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 11:28:19 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,50;
2022-05-10 11:28:22 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 11:28:22 | 耗时 0 ms | SQL 语句：
SELECT ID, DESCREPTION, CODE, CREATE_TIME, PARENT_CODE, NAME, REMARK FROM code_sort;
2022-05-10 11:28:40 INFO  http-nio-8088-exec-10 p6spy 2022-05-10 11:28:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code WHERE (SORT_CODE = 'System' AND CODE = 'showRunTimeLogSwitch' AND IS_DELETE = '0');
2022-05-10 11:28:40 INFO  http-nio-8088-exec-10 p6spy 2022-05-10 11:28:40 | 耗时 1 ms | SQL 语句：
INSERT INTO code (CODE, CREATE_TIME, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE) VALUES ('showRunTimeLogSwitch', '2022-05-10T11:28:40.984+0800', '', '0', 'ON', '', '部分方法耗时日志输出开关', 'System');
2022-05-10 11:28:41 INFO  Febs-Async-Thread2 p6spy 2022-05-10 11:28:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.CodeController.addCode()', '2022-05-10T11:28:40.997+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 12, ' code: Code(id=1003, sortCode=System, code=showRunTimeLogSwitch, name=ON, parentCode=, orderLevel=null, isDelete=0, description=, remark=部分方法耗时日志输出开关, createTime=Tue May 10 11:28:40 CST 2022)', '新增Code', 'admin');
2022-05-10 11:28:41 INFO  http-nio-8088-exec-2 p6spy 2022-05-10 11:28:41 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2022-05-10 11:28:41 INFO  http-nio-8088-exec-2 p6spy 2022-05-10 11:28:41 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,50;
2022-05-10 11:28:49 INFO  http-nio-8088-exec-3 p6spy 2022-05-10 11:28:49 | 耗时 0 ms | SQL 语句：
SELECT ID, DESCREPTION, CODE, CREATE_TIME, PARENT_CODE, NAME, REMARK FROM code_sort;
2022-05-10 11:28:59 INFO  http-nio-8088-exec-4 p6spy 2022-05-10 11:28:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code WHERE (SORT_CODE = 'System' AND CODE = 'sendSmsAgainRetryNum' AND IS_DELETE = '0');
2022-05-10 11:28:59 INFO  http-nio-8088-exec-4 p6spy 2022-05-10 11:28:59 | 耗时 1 ms | SQL 语句：
INSERT INTO code (CODE, CREATE_TIME, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE) VALUES ('sendSmsAgainRetryNum', '2022-05-10T11:28:59.562+0800', '', '0', '2', '', '推送重发次数', 'System');
2022-05-10 11:28:59 INFO  Febs-Async-Thread3 p6spy 2022-05-10 11:28:59 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.CodeController.addCode()', '2022-05-10T11:28:59.570+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 11, ' code: Code(id=1004, sortCode=System, code=sendSmsAgainRetryNum, name=2, parentCode=, orderLevel=null, isDelete=0, description=, remark=推送重发次数, createTime=Tue May 10 11:28:59 CST 2022)', '新增Code', 'admin');
2022-05-10 11:28:59 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 11:28:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2022-05-10 11:28:59 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 11:28:59 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,50;
2022-05-10 11:29:07 INFO  http-nio-8088-exec-1 p6spy 2022-05-10 11:29:07 | 耗时 0 ms | SQL 语句：
SELECT ID, DESCREPTION, CODE, CREATE_TIME, PARENT_CODE, NAME, REMARK FROM code_sort;
2022-05-10 11:29:17 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 11:29:17 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code WHERE (SORT_CODE = 'System' AND CODE = 'sendSmsAgainSleepNum' AND IS_DELETE = '0');
2022-05-10 11:29:17 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 11:29:17 | 耗时 3 ms | SQL 语句：
INSERT INTO code (CODE, CREATE_TIME, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE) VALUES ('sendSmsAgainSleepNum', '2022-05-10T11:29:17.692+0800', '', '0', '1000', '', '推送重发休眠时间：单位毫秒', 'System');
2022-05-10 11:29:17 INFO  Febs-Async-Thread4 p6spy 2022-05-10 11:29:17 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.CodeController.addCode()', '2022-05-10T11:29:17.705+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 17, ' code: Code(id=1005, sortCode=System, code=sendSmsAgainSleepNum, name=1000, parentCode=, orderLevel=null, isDelete=0, description=, remark=推送重发休眠时间：单位毫秒, createTime=Tue May 10 11:29:17 CST 2022)', '新增Code', 'admin');
2022-05-10 11:29:17 INFO  http-nio-8088-exec-10 p6spy 2022-05-10 11:29:17 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2022-05-10 11:29:17 INFO  http-nio-8088-exec-10 p6spy 2022-05-10 11:29:17 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,50;
2022-05-10 11:29:27 INFO  http-nio-8088-exec-8 p6spy 2022-05-10 11:29:27 | 耗时 0 ms | SQL 语句：
SELECT ID, DESCREPTION, CODE, CREATE_TIME, PARENT_CODE, NAME, REMARK FROM code_sort;
2022-05-10 11:29:35 INFO  http-nio-8088-exec-3 p6spy 2022-05-10 11:29:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code WHERE (SORT_CODE = 'System' AND CODE = 'sendSmsAgainSwitch' AND IS_DELETE = '0');
2022-05-10 11:29:35 INFO  http-nio-8088-exec-3 p6spy 2022-05-10 11:29:35 | 耗时 1 ms | SQL 语句：
INSERT INTO code (CODE, CREATE_TIME, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE) VALUES ('sendSmsAgainSwitch', '2022-05-10T11:29:35.959+0800', '', '0', 'OFF', '', '推送重推开关OFF为关闭，ON为开启', 'System');
2022-05-10 11:29:35 INFO  Febs-Async-Thread5 p6spy 2022-05-10 11:29:35 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.CodeController.addCode()', '2022-05-10T11:29:35.972+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 16, ' code: Code(id=1006, sortCode=System, code=sendSmsAgainSwitch, name=OFF, parentCode=, orderLevel=null, isDelete=0, description=, remark=推送重推开关OFF为关闭，ON为开启, createTime=Tue May 10 11:29:35 CST 2022)', '新增Code', 'admin');
2022-05-10 11:29:36 INFO  http-nio-8088-exec-4 p6spy 2022-05-10 11:29:36 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2022-05-10 11:29:36 INFO  http-nio-8088-exec-4 p6spy 2022-05-10 11:29:36 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,50;
2022-05-10 11:29:44 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 11:29:44 | 耗时 0 ms | SQL 语句：
SELECT ID, DESCREPTION, CODE, CREATE_TIME, PARENT_CODE, NAME, REMARK FROM code_sort;
2022-05-10 11:29:52 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 11:29:52 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code WHERE (SORT_CODE = 'System' AND CODE = 'checkAgentStateSwitch' AND IS_DELETE = '0');
2022-05-10 11:29:52 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 11:29:52 | 耗时 2 ms | SQL 语句：
INSERT INTO code (CODE, CREATE_TIME, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE) VALUES ('checkAgentStateSwitch', '2022-05-10T11:29:52.136+0800', '', '0', 'OFF', '', '商户发送短信时，是否校验所属代理商状态的开关', 'System');
2022-05-10 11:29:52 INFO  Febs-Async-Thread1 p6spy 2022-05-10 11:29:52 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.CodeController.addCode()', '2022-05-10T11:29:52.146+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 12, ' code: Code(id=1007, sortCode=System, code=checkAgentStateSwitch, name=OFF, parentCode=, orderLevel=null, isDelete=0, description=, remark=商户发送短信时，是否校验所属代理商状态的开关, createTime=Tue May 10 11:29:52 CST 2022)', '新增Code', 'admin');
2022-05-10 11:29:52 INFO  http-nio-8088-exec-1 p6spy 2022-05-10 11:29:52 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2022-05-10 11:29:52 INFO  http-nio-8088-exec-1 p6spy 2022-05-10 11:29:52 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,50;
2022-05-10 11:30:26 INFO  http-nio-8088-exec-5 com.hero.sms.common.DatabaseCache Begin-缓存字典
2022-05-10 11:30:26 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 11:30:26 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-05-10 11:30:26 INFO  http-nio-8088-exec-5 com.hero.sms.common.DatabaseCache End-字典缓存完成
2022-05-10 11:30:28 INFO  Febs-Async-Thread2 p6spy 2022-05-10 11:30:28 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.CodeController.loadReladCodeCache()', '2022-05-10T11:30:28.605+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 2467, '', '刷新字典模块缓存', 'admin');
2022-05-10 11:30:28 INFO  http-nio-8088-exec-10 p6spy 2022-05-10 11:30:28 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2022-05-10 11:30:28 INFO  http-nio-8088-exec-10 p6spy 2022-05-10 11:30:28 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,50;
2022-05-10 12:04:55 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-05-10 12:04:56 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-05-10 12:15:10 INFO  http-nio-8088-exec-8 p6spy 2022-05-10 12:15:10 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-10 12:15:10 INFO  http-nio-8088-exec-8 p6spy 2022-05-10 12:15:10 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-10 12:15:11 INFO  http-nio-8088-exec-8 p6spy 2022-05-10 12:15:11 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-05-10 13:04:55 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-05-10 13:04:55 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-05-10 14:04:55 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-05-10 14:04:55 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-05-10 14:57:18 INFO  http-nio-8088-exec-1 com.hero.sms.common.aspect.LimitAspect IP:192.168.189.1 第 1 次访问key为 [limit_login192.168.189.1]，描述为 [登录接口] 的接口
2022-05-10 14:57:18 INFO  http-nio-8088-exec-1 p6spy 2022-05-10 14:57:18 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-10 14:57:18 INFO  http-nio-8088-exec-1 p6spy 2022-05-10 14:57:18 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-10 14:57:18 INFO  http-nio-8088-exec-1 p6spy 2022-05-10 14:57:18 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2022-05-10T11:14:11.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2022-05-10 14:57:18 INFO  http-nio-8088-exec-1 p6spy 2022-05-10 14:57:18 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2022-05-10T14:57:18.295+0800', 'Chrome 10', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 'admin');
2022-05-10 14:57:18 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 14:57:18 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-10 14:57:18 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 14:57:18 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-10 14:57:18 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 14:57:18 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-10 14:57:19 INFO  http-nio-8088-exec-8 p6spy 2022-05-10 14:57:19 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-10 14:57:19 INFO  http-nio-8088-exec-8 p6spy 2022-05-10 14:57:19 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-10 14:57:19 INFO  http-nio-8088-exec-3 p6spy 2022-05-10 14:57:19 | 耗时 4 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-05-10 14:57:19 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 14:57:19 | 耗时 7 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-05-10 14:57:19 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 14:57:19 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2022-05-10T14:57:19.917+0800' WHERE (USERNAME = 'admin');
2022-05-10 14:57:19 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 14:57:19 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2022-05-10 14:57:19 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 14:57:19 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-05-10 14:57:19 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 14:57:19 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-05-10 14:57:19 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 14:57:19 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2022-05-10 14:57:19 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 14:57:19 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2022-05-10 14:57:20 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 14:57:20 | 耗时 25 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2022-05-10 14:57:20 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 14:57:20 | 耗时 83 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2022-05-10 14:57:20 INFO  http-nio-8088-exec-1 p6spy 2022-05-10 14:57:20 | 耗时 99 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2022-05-10 15:04:55 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-05-10 15:04:56 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-05-10 15:24:27 INFO  http-nio-8088-exec-1 p6spy 2022-05-10 15:24:27 | 耗时 17 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800');
2022-05-10 15:24:27 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 15:24:27 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-05-10 15:24:27 INFO  http-nio-8088-exec-1 p6spy 2022-05-10 15:24:27 | 耗时 83 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-10 15:25:32 INFO  http-nio-8088-exec-3 p6spy 2022-05-10 15:25:32 | 耗时 12 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800');
2022-05-10 15:25:32 INFO  http-nio-8088-exec-3 p6spy 2022-05-10 15:25:32 | 耗时 41 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-10 15:36:44 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2022-05-10 15:36:44 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652151675508 paused.
2022-05-10 15:36:44 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2022-05-10 15:36:44 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2022-05-10 15:36:44 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652151675508 shutting down.
2022-05-10 15:36:44 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652151675508 paused.
2022-05-10 15:36:44 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652151675508 shutdown complete.
2022-05-10 15:36:44 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2022-05-10 15:36:44 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2022-05-10 15:36:44 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2022-05-10 15:36:44 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2022-05-10 15:36:44 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2022-05-10 15:36:44 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2022-05-10 22:54:24 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 87556 (C:\work\workspaceSmsBfSvn\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBfSvn\sms\sms-admin)
2022-05-10 22:54:24 INFO  main com.hero.sms.SmsApplication The following profiles are active: prod
2022-05-10 22:54:28 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-05-10 22:54:28 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-05-10 22:54:29 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 908ms. Found 0 repository interfaces.
2022-05-10 22:54:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:54:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$a20f51fc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:54:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:54:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:54:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:54:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$5cd11a47] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:54:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$1b9afd34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:54:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:54:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$2e2471b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:54:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:54:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$76494dc5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:54:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:54:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:54:30 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-05-10 22:54:31 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-05-10 22:54:52 INFO  main org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-05-10 22:55:51 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 87072 (C:\work\workspaceSmsBfSvn\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBfSvn\sms\sms-admin)
2022-05-10 22:55:51 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2022-05-10 22:55:56 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-05-10 22:55:56 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-05-10 22:55:57 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 1321ms. Found 0 repository interfaces.
2022-05-10 22:55:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:55:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$fdb5d278] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:55:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:55:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:55:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:55:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$b8779ac3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:55:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$77417db0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$89caf234] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$d1efce41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:00 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-05-10 22:56:00 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-05-10 22:56:00 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2022-05-10 22:56:00 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2022-05-10 22:56:00 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2022-05-10 22:56:00 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2022-05-10 22:56:00 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2022-05-10 22:56:00 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2022-05-10 22:56:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-10 22:56:07 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2022-05-10 22:56:07 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2022-05-10 22:56:07 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-05-10 22:56:07 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2022-05-10 22:56:07 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-05-10 22:56:07 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 16069 ms
2022-05-10 22:56:08 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2022-05-10 22:56:12 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2022-05-10 22:56:12 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-05-10 22:56:12 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2022-05-10 22:56:13 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2022-05-10 22:56:13 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2022-05-10 22:56:13 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1652194572900'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-05-10 22:56:13 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2022-05-10 22:56:13 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2022-05-10 22:56:13 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6329a5b9
2022-05-10 22:56:13 INFO  main p6spy 2022-05-10 22:56:13 | 耗时 11 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2022-05-10 22:56:15 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2022-05-10 22:56:15 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-05-10 22:56:15 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2022-05-10 22:56:15 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2022-05-10 22:56:16 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2022-05-10 22:56:17 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2022-05-10 22:56:17 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2022-05-10 22:56:17 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2022-05-10 22:56:17 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2022-05-10 22:56:17 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2022-05-10 22:56:17 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2022-05-10 22:56:17 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 27.389 seconds (JVM running for 30.495)
2022-05-10 22:56:17 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2022-05-10 22:56:17 INFO  main p6spy 2022-05-10 22:56:17 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-05-10 22:56:17 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2022-05-10 22:56:17 INFO  main p6spy 2022-05-10 22:56:17 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2022-05-10 22:56:17 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2022-05-10 22:56:17 INFO  main p6spy 2022-05-10 22:56:17 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2022-05-10 22:56:17 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2022-05-10 22:56:17 INFO  main p6spy 2022-05-10 22:56:17 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-05-10 22:56:17 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2022-05-10 22:56:17 INFO  main p6spy 2022-05-10 22:56:17 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2022-05-10 22:56:17 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2022-05-10 22:56:17 INFO  main p6spy 2022-05-10 22:56:17 | 耗时 0 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2022-05-10 22:56:17 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2022-05-10 22:56:17 INFO  main p6spy 2022-05-10 22:56:17 | 耗时 0 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2022-05-10 22:56:17 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2022-05-10 22:56:17 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-05-10 22:56:17 INFO  main p6spy 2022-05-10 22:56:17 | 耗时 0 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-05-10 22:56:17 INFO  main com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-05-10 22:56:17 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2022-05-10 22:56:18 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2022-05-10 22:56:18 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-05-10 22:56:18 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2022-05-10 22:56:18 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2022-05-10 22:56:18 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1652151675508"'s failed in-progress jobs.
2022-05-10 22:56:18 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652194572900 started.
2022-05-10 22:56:31 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2022-05-10 22:56:31 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-05-10 22:56:31 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-05-10 22:56:31 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2022-05-10 22:56:31 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://192.168.189.1:8088/login
2022-05-10 23:05:55 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-05-10 23:05:55 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-05-10 23:05:55 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 13 ms
2022-05-10 23:05:55 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2022-05-10 23:16:52 INFO  http-nio-8088-exec-8 com.hero.sms.common.aspect.LimitAspect IP:192.168.189.1 第 1 次访问key为 [limit_login192.168.189.1]，描述为 [登录接口] 的接口
2022-05-10 23:16:52 INFO  http-nio-8088-exec-8 p6spy 2022-05-10 23:16:52 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-10 23:16:52 INFO  http-nio-8088-exec-8 p6spy 2022-05-10 23:16:52 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-10 23:16:52 INFO  http-nio-8088-exec-8 p6spy 2022-05-10 23:16:52 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2022-05-10T14:57:20.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2022-05-10 23:16:52 INFO  http-nio-8088-exec-8 p6spy 2022-05-10 23:16:52 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2022-05-10T23:16:52.622+0800', 'Chrome 10', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 'admin');
2022-05-10 23:16:52 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 23:16:52 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-10 23:16:52 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 23:16:52 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-10 23:16:52 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 23:16:52 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-10 23:16:53 INFO  http-nio-8088-exec-10 p6spy 2022-05-10 23:16:53 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-10 23:16:53 INFO  http-nio-8088-exec-10 p6spy 2022-05-10 23:16:53 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-10 23:16:54 INFO  http-nio-8088-exec-4 p6spy 2022-05-10 23:16:54 | 耗时 6 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-05-10 23:16:54 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 23:16:54 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-05-10 23:16:54 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 23:16:54 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2022-05-10T23:16:54.384+0800' WHERE (USERNAME = 'admin');
2022-05-10 23:16:54 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 23:16:54 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2022-05-10 23:16:54 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 23:16:54 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-05-10 23:16:54 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 23:16:54 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-05-10 23:16:54 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 23:16:54 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2022-05-10 23:16:54 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 23:16:54 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2022-05-10 23:16:54 INFO  http-nio-8088-exec-8 p6spy 2022-05-10 23:16:54 | 耗时 16 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2022-05-10 23:16:54 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 23:16:54 | 耗时 91 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2022-05-10 23:16:54 INFO  http-nio-8088-exec-4 p6spy 2022-05-10 23:16:54 | 耗时 85 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2022-05-10 23:19:53 INFO  http-nio-8088-exec-4 p6spy 2022-05-10 23:19:53 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-05-10 23:19:53 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 23:19:53 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800');
2022-05-10 23:19:53 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 23:19:53 | 耗时 83 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-10 23:20:27 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 23:20:27 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2022-05-10 23:20:27 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 23:20:27 | 耗时 5 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2022-05-10 23:20:27 INFO  Febs-Async-Thread1 p6spy 2022-05-10 23:20:27 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2022-05-10T23:20:27.651+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 77, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2022-05-10 23:20:33 INFO  http-nio-8088-exec-8 p6spy 2022-05-10 23:20:33 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization_user;
2022-05-10 23:20:33 INFO  http-nio-8088-exec-8 p6spy 2022-05-10 23:20:33 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user ORDER BY Id DESC LIMIT 0,10;
2022-05-10 23:20:33 INFO  Febs-Async-Thread2 p6spy 2022-05-10 23:20:33 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationUserController.organizationUserList()', '2022-05-10T23:20:33.380+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 42, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organizationUser: "OrganizationUser(id=null, organizationCode=null, userName=null, userAccount=null, userPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, status=null, accountType=null, googleKey=null, needBindGoogleKey=null, loginIp=null, description=null, remark=null, createUser=null, createDate=null)"', '商户用户列表', 'admin');
2022-05-10 23:20:36 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 23:20:36 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2022-05-10 23:20:36 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 23:20:36 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2022-05-10 23:20:36 INFO  Febs-Async-Thread3 p6spy 2022-05-10 23:20:36 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2022-05-10T23:20:36.906+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 194, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=null, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=null, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2022-05-10 23:30:51 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 23:30:51 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-10 23:30:51 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 23:30:51 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-10 23:30:51 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 23:30:51 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-10 23:30:53 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 23:30:53 | 耗时 5 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-05-10 23:30:53 INFO  http-nio-8088-exec-3 p6spy 2022-05-10 23:30:53 | 耗时 2 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-05-10 23:30:53 INFO  http-nio-8088-exec-4 p6spy 2022-05-10 23:30:53 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-05-10 23:30:53 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 23:30:53 | 耗时 13 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800');
2022-05-10 23:30:53 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 23:30:53 | 耗时 77 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-10 23:31:22 INFO  http-nio-8088-exec-10 p6spy 2022-05-10 23:31:22 | 耗时 2 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-05-10 23:31:22 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 23:31:22 | 耗时 33 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800');
2022-05-10 23:31:22 INFO  http-nio-8088-exec-5 p6spy 2022-05-10 23:31:22 | 耗时 140 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-10 23:31:50 INFO  http-nio-8088-exec-1 p6spy 2022-05-10 23:31:50 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-05-10 23:31:50 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 23:31:50 | 耗时 18 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800');
2022-05-10 23:31:50 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 23:31:50 | 耗时 37 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-10 23:31:53 INFO  http-nio-8088-exec-2 p6spy 2022-05-10 23:31:53 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800');
2022-05-10 23:31:53 INFO  http-nio-8088-exec-2 p6spy 2022-05-10 23:31:53 | 耗时 8 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-10 23:32:16 INFO  http-nio-8088-exec-9 p6spy 2022-05-10 23:32:16 | 耗时 3 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-05-10 23:32:16 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 23:32:16 | 耗时 30 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800');
2022-05-10 23:32:16 INFO  http-nio-8088-exec-6 p6spy 2022-05-10 23:32:16 | 耗时 134 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-10 23:32:25 INFO  http-nio-8088-exec-10 p6spy 2022-05-10 23:32:25 | 耗时 16 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800');
2022-05-10 23:32:25 INFO  http-nio-8088-exec-10 p6spy 2022-05-10 23:32:25 | 耗时 41 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-10 23:33:05 INFO  http-nio-8088-exec-1 p6spy 2022-05-10 23:33:05 | 耗时 3 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-05-10 23:33:05 INFO  http-nio-8088-exec-3 p6spy 2022-05-10 23:33:05 | 耗时 22 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800');
2022-05-10 23:33:05 INFO  http-nio-8088-exec-3 p6spy 2022-05-10 23:33:05 | 耗时 47 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-10 23:33:10 INFO  http-nio-8088-exec-7 p6spy 2022-05-10 23:33:10 | 耗时 32 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800' AND res_msgid IS NULL);
2022-05-10 23:33:13 INFO  http-nio-8088-exec-2 p6spy 2022-05-10 23:33:13 | 耗时 13 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800' AND res_msgid IS NULL);
2022-05-10 23:33:13 INFO  Febs-Async-Thread4 p6spy 2022-05-10 23:33:13 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-05-10T23:33:13.466+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 39, ' sendRecord: "SendRecordQuery(createStartTime=Tue May 10 00:00:00 CST 2022, createEndTime=Tue May 10 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=true)"', '统计数据', 'admin');
2022-05-10 23:33:16 INFO  http-nio-8088-exec-8 p6spy 2022-05-10 23:33:16 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800' AND res_msgid IS NOT NULL);
2022-05-10 23:33:16 INFO  http-nio-8088-exec-8 p6spy 2022-05-10 23:33:16 | 耗时 48 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800' AND res_msgid IS NOT NULL) ORDER BY create_time DESC LIMIT 0,10;
2022-05-10 23:33:45 INFO  http-nio-8088-exec-4 p6spy 2022-05-10 23:33:45 | 耗时 38 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-05-10T00:00:00.000+0800' AND create_time <= '2022-05-10T23:59:59.000+0800' AND res_msgid IS NOT NULL);
2022-05-10 23:33:45 INFO  Febs-Async-Thread5 p6spy 2022-05-10 23:33:45 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-05-10T23:33:45.372+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 48, ' sendRecord: "SendRecordQuery(createStartTime=Tue May 10 00:00:00 CST 2022, createEndTime=Tue May 10 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=false)"', '统计数据', 'admin');
2022-05-10 23:34:44 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2022-05-10 23:34:44 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652194572900 paused.
2022-05-10 23:34:44 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2022-05-10 23:34:44 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2022-05-10 23:34:44 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652194572900 shutting down.
2022-05-10 23:34:44 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652194572900 paused.
2022-05-10 23:34:44 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652194572900 shutdown complete.
2022-05-10 23:34:44 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2022-05-10 23:34:44 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2022-05-10 23:34:44 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2022-05-10 23:34:44 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2022-05-10 23:34:44 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2022-05-10 23:34:44 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
