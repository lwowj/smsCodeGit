2021-11-16 00:17:01 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 39384 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-11-16 00:17:01 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-11-16 00:17:06 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-16 00:17:06 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-16 00:17:07 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 929ms. Found 0 repository interfaces.
2021-11-16 00:17:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d57dffaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$903fc7f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$4f09aae2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$61931f66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$a9b7fb73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:08 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-16 00:17:08 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-16 00:17:08 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-16 00:17:08 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-16 00:17:09 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-16 00:17:09 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-16 00:17:09 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-16 00:17:09 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-16 00:17:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:17:15 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-11-16 00:17:15 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-11-16 00:17:15 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-16 00:17:15 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-16 00:17:15 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-16 00:17:15 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 13637 ms
2021-11-16 00:17:16 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-16 00:17:21 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-16 00:17:21 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-16 00:17:21 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-16 00:17:21 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-11-16 00:17:21 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-11-16 00:17:21 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1636993041134'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-11-16 00:17:21 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-11-16 00:17:21 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-16 00:17:21 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2bed5828
2021-11-16 00:17:21 INFO  main p6spy 2021-11-16 00:17:21 | 耗时 9 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-11-16 00:17:23 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-16 00:17:23 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-16 00:17:23 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-16 00:17:23 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-16 00:17:24 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-16 00:17:25 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-16 00:17:25 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-16 00:17:25 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-16 00:17:25 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-11-16 00:17:25 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-11-16 00:17:25 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-11-16 00:17:25 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 24.909 seconds (JVM running for 29.985)
2021-11-16 00:17:25 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-11-16 00:17:25 INFO  main p6spy 2021-11-16 00:17:25 | 耗时 4 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-11-16 00:17:25 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-11-16 00:17:25 INFO  main p6spy 2021-11-16 00:17:25 | 耗时 2 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-11-16 00:17:25 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-11-16 00:17:25 INFO  main p6spy 2021-11-16 00:17:25 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-11-16 00:17:25 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-11-16 00:17:25 INFO  main p6spy 2021-11-16 00:17:25 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-11-16 00:17:25 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-11-16 00:17:25 INFO  main p6spy 2021-11-16 00:17:25 | 耗时 9 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-11-16 00:17:25 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-11-16 00:17:25 INFO  main p6spy 2021-11-16 00:17:25 | 耗时 18 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-11-16 00:17:25 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-11-16 00:17:26 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-11-16 00:17:26 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-11-16 00:17:26 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1636986710271"'s failed in-progress jobs.
2021-11-16 00:17:26 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636993041134 started.
2021-11-16 00:17:27 INFO  main p6spy 2021-11-16 00:17:27 | 耗时 1224 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-11-16 00:17:32 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-11-16 00:17:32 INFO  main p6spy 2021-11-16 00:17:32 | 耗时 13 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-11-16 00:17:32 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-11-16 00:17:32 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-11-16 00:17:33 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-11-16 00:17:33 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-11-16 00:17:54 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-11-16 00:17:54 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-11-16 00:17:54 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-11-16 00:17:54 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-11-16 00:17:54 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-11-16 00:18:30 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-16 00:18:30 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-11-16 00:18:30 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 27 ms
2021-11-16 00:18:30 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-11-16 00:18:54 INFO  http-nio-8088-exec-6 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-11-16 00:18:55 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:18:55 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 00:18:55 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:18:55 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 00:18:55 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:18:55 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2021-11-15T22:42:15.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2021-11-16 00:18:55 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:18:55 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2021-11-16T00:18:55.238+0800', 'Chrome 93', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 'admin');
2021-11-16 00:18:55 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 00:18:55 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 00:18:55 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 00:18:55 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 00:18:55 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 00:18:55 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 00:18:56 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:18:56 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 00:18:56 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:18:56 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 00:18:56 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:18:56 | 耗时 7 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-16 00:18:56 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:18:56 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-16 00:18:57 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:18:57 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2021-11-16T00:18:57.011+0800' WHERE (USERNAME = 'admin');
2021-11-16 00:18:57 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:18:57 | 耗时 3 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2021-11-16 00:18:57 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:18:57 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-16 00:18:57 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:18:57 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-16 00:18:57 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:18:57 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2021-11-16 00:18:57 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:18:57 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2021-11-16 00:18:57 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:18:57 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2021-11-16 00:18:57 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:18:57 | 耗时 2 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2021-11-16 00:18:57 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:18:57 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2021-11-16 00:19:03 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:19:03 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-16 00:19:35 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 00:19:35 | 耗时 3 ms | SQL 语句：
INSERT INTO t_menu (MENU_NAME, TYPE, PARENT_ID, CREATE_TIME, PERMS) VALUES ('批量上调资费', '1', 193, '2021-11-16T00:19:35.287+0800', 'organization:updataUpCosts');
2021-11-16 00:19:35 INFO  Febs-Async-Thread1 p6spy 2021-11-16 00:19:35 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.MenuController.addMenu()', '2021-11-16T00:19:35.325+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 35, ' menu: "Menu(menuId=391, parentId=193, menuName=批量上调资费, url=null, perms=organization:updataUpCosts, icon=null, type=1, orderNum=null, createTime=Tue Nov 16 00:19:35 CST 2021, modifyTime=null)"', '新增菜单/按钮', 'admin');
2021-11-16 00:19:35 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:19:35 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-16 00:19:58 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 00:19:58 | 耗时 2 ms | SQL 语句：
INSERT INTO t_menu (MENU_NAME, TYPE, PARENT_ID, CREATE_TIME, PERMS) VALUES ('批量下调资费', '1', 193, '2021-11-16T00:19:58.889+0800', 'organization:updateCutCosts');
2021-11-16 00:19:58 INFO  Febs-Async-Thread2 p6spy 2021-11-16 00:19:58 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.MenuController.addMenu()', '2021-11-16T00:19:58.905+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 13, ' menu: "Menu(menuId=392, parentId=193, menuName=批量下调资费, url=null, perms=organization:updateCutCosts, icon=null, type=1, orderNum=null, createTime=Tue Nov 16 00:19:58 CST 2021, modifyTime=null)"', '新增菜单/按钮', 'admin');
2021-11-16 00:19:58 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:19:58 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-16 00:20:00 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 00:20:00 | 耗时 3 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-16 00:20:00 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:20:00 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2021-11-16 00:20:00 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:20:00 | 耗时 3 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2021-11-16 00:20:25 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:20:25 | 耗时 1 ms | SQL 语句：
UPDATE t_role SET MODIFY_TIME = '2021-11-16T00:20:25.359+0800', ROLE_NAME = '系统管理员', REMARK = '系统管理员，拥有所有操作权限 ^_^' WHERE ROLE_ID = 1;
2021-11-16 00:20:25 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:20:25 | 耗时 3 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('1'));
2021-11-16 00:20:25 INFO  Febs-Async-Thread3 p6spy 2021-11-16 00:20:25 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.RoleController.updateRole()', '2021-11-16T00:20:25.547+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 186, ' role: "Role(roleId=1, roleName=系统管理员, remark=系统管理员，拥有所有操作权限 ^_^, createTime=null, modifyTime=Tue Nov 16 00:20:25 CST 2021, menuIds=1,3,11,12,13,286,160,161,4,14,15,16,162,5,17,18,19,163,6,20,21,22,164,176,177,178,179,180,181,288,289,182,183,184,185,365,366,367,368,369,370,371,374,186,195,257,287,320,380,381,390,187,188,189,190,191,205,219,196,197,198,199,294,295,306,372,192,193,258,263,303,316,318,329,338,340,341,342,359,389,391,392,200,201,202,203,211,206,305,360,361,362,207,208,209,210,220,221,222,231,194,262,227,228,229,296,373,375,376,377,378,379,259,260,347,382,383,261,346,384,385,387,388,300,301,302,314,325,345,213,246,279,315,354,247,280,285,298,304,317,363,364,248,281,254,256,255,242,243,244,245,274,275,276,277,290,291,292,355,356,357,348,349,350,351,358,212,214,297,339,343,352,353,386,223,224,225,226,215,216,217,218,249,250,251,252,253,307,308,309,310,311,312,313,337,344,264,278,265,266,293,330,326,331,327,335,328,336,299,332,319,333,321,334,267,268,271,282,269,272,283,270,273,284,322,323,324,2,8,23,10,24,136,171,172,127,128,129,131,175,101,102,103,104,105,106,107,173,109,110,174,137,138,165,139,166,115,132,133,135,134,126,159,116,117,119,120,121,122,123,118,125,167,168,169)"', '修改角色', 'admin');
2021-11-16 00:20:25 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:20:25 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 00:20:25 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:20:25 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 00:20:25 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:20:25 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2021-11-16 00:20:25 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:20:25 | 耗时 3 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2021-11-16 00:20:39 INFO  http-nio-8088-exec-9 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-11-16 00:20:39 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 00:20:39 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 00:20:39 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 00:20:39 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 00:20:39 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 00:20:39 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2021-11-16T00:18:57.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2021-11-16 00:20:39 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 00:20:39 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2021-11-16T00:20:39.576+0800', 'Chrome 93', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 'admin');
2021-11-16 00:20:39 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:20:39 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 00:20:39 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:20:39 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 00:20:39 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:20:39 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 00:20:40 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:20:40 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 00:20:40 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:20:40 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 00:20:40 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 00:20:40 | 耗时 2 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-16 00:20:40 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 00:20:40 | 耗时 4 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-16 00:20:40 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:20:40 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2021-11-16T00:20:40.611+0800' WHERE (USERNAME = 'admin');
2021-11-16 00:20:40 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:20:40 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2021-11-16 00:20:40 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:20:40 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-16 00:20:40 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:20:40 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-16 00:20:40 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:20:40 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2021-11-16 00:20:40 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:20:40 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2021-11-16 00:20:40 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:20:40 | 耗时 0 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2021-11-16 00:20:40 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 00:20:40 | 耗时 0 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2021-11-16 00:20:40 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:20:40 | 耗时 0 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2021-11-16 00:20:43 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:20:43 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:20:43 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:20:43 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 00:20:43 INFO  Febs-Async-Thread4 p6spy 2021-11-16 00:20:43 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:20:43.202+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 43, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-16 00:20:47 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 00:20:47 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:20:47 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 00:20:47 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-16 00:20:47 INFO  Febs-Async-Thread5 p6spy 2021-11-16 00:20:47 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:20:47.227+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 26, ' request: "QueryRequest(pageSize=10, pageNum=2, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-16 00:20:49 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:20:49 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2021-11-16 00:20:49 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:20:49 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 00:21:11 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 00:21:11 | 耗时 1 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '40' WHERE (Organization_Code IN ('20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-16 00:21:11 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 00:21:11 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-16 00:21:11 INFO  Febs-Async-Thread1 p6spy 2021-11-16 00:21:11 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-16T00:21:11.783+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 53, ' organizationCodes: "20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: "CMCC" costValue: "40"', '批量修改商户资费', 'admin');
2021-11-16 00:21:11 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 00:21:11 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:21:11 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 00:21:11 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 00:21:11 INFO  Febs-Async-Thread2 p6spy 2021-11-16 00:21:11 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:21:11.861+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 26, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 00:21:13 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:21:13 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:21:13 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:21:13 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-16 00:21:13 INFO  Febs-Async-Thread3 p6spy 2021-11-16 00:21:13 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:21:13.732+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 30, ' request: "QueryRequest(pageSize=10, pageNum=2, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 00:21:14 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:21:14 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2021-11-16 00:21:14 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:21:14 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 00:21:41 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 00:21:41 | 耗时 4 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = Cost_Value + 15 WHERE (Organization_Code IN ('20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-16 00:21:41 INFO  Febs-Async-Thread4 p6spy 2021-11-16 00:21:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateUpCosts()', '2021-11-16T00:21:41.624+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 19, ' organizationCodes: "20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: "CMCC" costValue: "15"', '批量上调商户资费', 'admin');
2021-11-16 00:21:41 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:21:41 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:21:41 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:21:41 | 耗时 5 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 00:21:41 INFO  Febs-Async-Thread5 p6spy 2021-11-16 00:21:41 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:21:41.706+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 31, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 00:21:47 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 00:21:47 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:21:47 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 00:21:47 | 耗时 5 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-16 00:21:47 INFO  Febs-Async-Thread1 p6spy 2021-11-16 00:21:47 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:21:47.610+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 41, ' request: "QueryRequest(pageSize=10, pageNum=2, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 00:22:03 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:22:03 | 耗时 11 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = Cost_Value - 55 WHERE (Organization_Code IN ('20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-16 00:22:03 INFO  Febs-Async-Thread2 p6spy 2021-11-16 00:22:03 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCutCosts()', '2021-11-16T00:22:03.807+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 25, ' organizationCodes: "20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: null costValue: "55"', '批量下调商户资费', 'admin');
2021-11-16 00:22:03 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:22:03 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:22:03 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:22:03 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 00:22:03 INFO  Febs-Async-Thread3 p6spy 2021-11-16 00:22:03 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:22:03.897+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 33, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 00:22:15 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:22:15 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:22:15 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:22:15 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-16 00:22:15 INFO  Febs-Async-Thread4 p6spy 2021-11-16 00:22:15 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:22:15.576+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 24, ' request: "QueryRequest(pageSize=10, pageNum=2, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 00:22:25 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 00:22:25 | 耗时 4 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = Cost_Value + 55 WHERE (Organization_Code IN ('20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-16 00:22:25 INFO  Febs-Async-Thread5 p6spy 2021-11-16 00:22:25 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateUpCosts()', '2021-11-16T00:22:25.477+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 13, ' organizationCodes: "20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: null costValue: "55"', '批量上调商户资费', 'admin');
2021-11-16 00:22:25 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:22:25 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:22:25 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:22:25 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 00:22:25 INFO  Febs-Async-Thread1 p6spy 2021-11-16 00:22:25 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:22:25.556+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 26, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 00:22:27 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:22:27 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:22:27 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:22:27 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-16 00:22:27 INFO  Febs-Async-Thread2 p6spy 2021-11-16 00:22:27 | 耗时 9 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:22:27.025+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 26, ' request: "QueryRequest(pageSize=10, pageNum=2, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 00:22:42 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 00:22:42 | 耗时 1 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = Cost_Value + 55 WHERE (Organization_Code IN ('20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+91' AND sms_type = '1');
2021-11-16 00:22:42 INFO  Febs-Async-Thread3 p6spy 2021-11-16 00:22:42 | 耗时 11 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateUpCosts()', '2021-11-16T00:22:42.176+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 7, ' organizationCodes: "20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+91" smsType: "1" operator: null costValue: "55"', '批量上调商户资费', 'admin');
2021-11-16 00:22:42 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:22:42 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:22:42 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:22:42 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 00:22:42 INFO  Febs-Async-Thread4 p6spy 2021-11-16 00:22:42 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:22:42.253+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 24, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 00:23:36 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:23:36 | 耗时 3 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-16 00:46:31 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-16 00:46:31 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636993041134 paused.
2021-11-16 00:46:31 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-16 00:46:31 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-16 00:46:31 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636993041134 shutting down.
2021-11-16 00:46:31 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636993041134 paused.
2021-11-16 00:46:31 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636993041134 shutdown complete.
2021-11-16 00:46:31 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-16 00:46:31 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-16 00:46:31 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-16 00:46:31 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-16 00:46:31 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-16 00:46:31 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2021-11-16 00:46:43 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 56096 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-11-16 00:46:43 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-11-16 00:46:46 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-16 00:46:46 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-16 00:46:47 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 750ms. Found 0 repository interfaces.
2021-11-16 00:46:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e8d61d6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$a397e5b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$6261c8a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$74eb3d28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$bd101935] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:48 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-16 00:46:48 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-16 00:46:49 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-16 00:46:49 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-16 00:46:49 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-16 00:46:49 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-16 00:46:49 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-16 00:46:49 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-16 00:46:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:46:54 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-11-16 00:46:54 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-11-16 00:46:54 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-16 00:46:54 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-16 00:46:54 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-16 00:46:54 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 11508 ms
2021-11-16 00:46:55 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-16 00:46:58 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-16 00:46:58 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-16 00:46:58 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-16 00:46:58 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-11-16 00:46:58 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-11-16 00:46:58 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1636994818344'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-11-16 00:46:58 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-11-16 00:46:58 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-16 00:46:58 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@63614cdd
2021-11-16 00:46:58 INFO  main p6spy 2021-11-16 00:46:58 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-11-16 00:47:00 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-16 00:47:00 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-16 00:47:00 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-16 00:47:00 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-16 00:47:00 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-16 00:47:01 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-16 00:47:01 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-16 00:47:01 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-16 00:47:01 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-11-16 00:47:01 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-11-16 00:47:01 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-11-16 00:47:01 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 19.286 seconds (JVM running for 23.135)
2021-11-16 00:47:01 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-11-16 00:47:01 INFO  main p6spy 2021-11-16 00:47:01 | 耗时 4 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-11-16 00:47:01 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-11-16 00:47:01 INFO  main p6spy 2021-11-16 00:47:01 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-11-16 00:47:01 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-11-16 00:47:01 INFO  main p6spy 2021-11-16 00:47:01 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-11-16 00:47:01 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-11-16 00:47:01 INFO  main p6spy 2021-11-16 00:47:01 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-11-16 00:47:01 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-11-16 00:47:01 INFO  main p6spy 2021-11-16 00:47:01 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-11-16 00:47:01 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-11-16 00:47:01 INFO  main p6spy 2021-11-16 00:47:01 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-11-16 00:47:01 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-11-16 00:47:02 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-11-16 00:47:02 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-11-16 00:47:02 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1636993041134"'s failed in-progress jobs.
2021-11-16 00:47:02 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636994818344 started.
2021-11-16 00:47:02 INFO  main p6spy 2021-11-16 00:47:02 | 耗时 808 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-11-16 00:47:07 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-11-16 00:47:07 INFO  main p6spy 2021-11-16 00:47:07 | 耗时 3 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-11-16 00:47:07 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-11-16 00:47:07 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-11-16 00:47:07 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-11-16 00:47:07 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-11-16 00:47:26 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-11-16 00:47:26 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-11-16 00:47:26 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-11-16 00:47:26 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-11-16 00:47:26 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-11-16 00:47:46 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-16 00:47:46 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-11-16 00:47:46 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 18 ms
2021-11-16 00:47:46 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-11-16 00:47:46 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:47:46 | 耗时 3 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 00:47:46 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:47:46 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 00:47:46 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:47:46 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 00:47:47 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 00:47:47 | 耗时 5 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-16 00:47:47 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:47:47 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-16 00:47:48 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 00:47:48 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:47:48 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 00:47:48 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 00:47:48 INFO  Febs-Async-Thread1 p6spy 2021-11-16 00:47:48 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:47:48.384+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 65, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-16 00:47:49 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:47:49 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:47:49 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:47:49 | 耗时 5 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-16 00:47:49 INFO  Febs-Async-Thread2 p6spy 2021-11-16 00:47:49 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:47:49.974+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 29, ' request: "QueryRequest(pageSize=10, pageNum=2, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-16 00:47:51 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 00:47:51 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2021-11-16 00:47:51 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 00:47:51 | 耗时 3 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 00:47:54 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 00:47:54 | 耗时 3 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 00:47:54 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 00:47:54 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 00:47:54 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 00:47:54 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-16 00:47:54 INFO  Febs-Async-Thread3 p6spy 2021-11-16 00:47:54 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-16T00:47:54.703+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 66, ' organizationCosts: "[OrganizationCost(id=210, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=50, state=1, channelId=, operator=, description=, remark=admin添加, createDate=Tue Nov 16 00:47:54 CST 2021)]"', '商户用户资费更新', 'admin');
2021-11-16 00:47:56 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:47:56 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '97';
2021-11-16 00:47:56 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:47:56 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 00:48:00 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:48:00 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '98';
2021-11-16 00:48:00 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:48:00 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826171404KPPG');
2021-11-16 00:48:04 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 00:48:04 | 耗时 1 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200826171404KPPG');
2021-11-16 00:48:04 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 00:48:04 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826171404KPPG');
2021-11-16 00:48:04 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 00:48:04 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 43);
2021-11-16 00:48:04 INFO  Febs-Async-Thread4 p6spy 2021-11-16 00:48:04 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-16T00:48:04.238+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 24, ' organizationCosts: "[OrganizationCost(id=null, organizationCode=20200826171404KPPG, smsType=1, costName=+86, costValue=50, state=1, channelId=, operator=, description=, remark=admin添加, createDate=Tue Nov 16 00:48:04 CST 2021), OrganizationCost(id=null, organizationCode=20200826171404KPPG, smsType=1, costName=+86, costValue=55, state=1, channelId=, operator=CTCC, description=null, remark=null, createDate=null), OrganizationCost(id=null, organizationCode=20200826171404KPPG, smsType=null, costName=, costValue=NaN, state=, channelId=, operator=, description=null, remark=null, createDate=null)]"', '商户用户资费更新', 'admin');
2021-11-16 00:48:10 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 00:48:10 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '97';
2021-11-16 00:48:10 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 00:48:10 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 00:48:17 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:48:17 | 耗时 1 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 00:48:17 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:48:17 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 00:48:17 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:48:17 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 43);
2021-11-16 00:48:17 INFO  Febs-Async-Thread5 p6spy 2021-11-16 00:48:17 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-16T00:48:17.898+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 31, ' organizationCosts: "[OrganizationCost(id=null, organizationCode=20200826164014MWDR, smsType=1, costName=+86, costValue=50, state=1, channelId=, operator=, description=, remark=admin添加, createDate=Tue Nov 16 00:48:17 CST 2021), OrganizationCost(id=null, organizationCode=20200826164014MWDR, smsType=1, costName=+86, costValue=51, state=1, channelId=, operator=CMCC, description=null, remark=null, createDate=null), OrganizationCost(id=null, organizationCode=20200826164014MWDR, smsType=null, costName=, costValue=NaN, state=, channelId=, operator=, description=null, remark=null, createDate=null)]"', '商户用户资费更新', 'admin');
2021-11-16 00:48:29 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:48:29 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-16 00:48:29 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:48:29 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-16 00:48:29 INFO  Febs-Async-Thread1 p6spy 2021-11-16 00:48:29 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-16T00:48:29.307+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 66, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=null, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=null, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-16 00:48:33 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 00:48:33 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 43);
2021-11-16 00:48:44 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 00:48:44 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2021-11-16 00:48:44 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 00:48:44 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 00:48:47 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:48:47 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '97';
2021-11-16 00:48:47 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:48:47 | 耗时 6 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 00:49:01 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 00:49:01 | 耗时 10 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = Cost_Value + 5 WHERE (Organization_Code IN ('20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-16 00:49:01 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 00:49:01 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-16 00:49:01 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 00:49:01 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-16 00:49:01 INFO  Febs-Async-Thread2 p6spy 2021-11-16 00:49:01 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateUpCosts()', '2021-11-16T00:49:01.425+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 81, ' organizationCodes: "20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: "CMCC" costValue: "5"', '批量上调商户资费', 'admin');
2021-11-16 00:49:01 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 00:49:01 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:49:01 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 00:49:01 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 00:49:01 INFO  Febs-Async-Thread3 p6spy 2021-11-16 00:49:01 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:49:01.489+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 23, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 00:49:03 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 00:49:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:49:03 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 00:49:03 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-16 00:49:03 INFO  Febs-Async-Thread4 p6spy 2021-11-16 00:49:03 | 耗时 11 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:49:03.344+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 18, ' request: "QueryRequest(pageSize=10, pageNum=2, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 00:49:04 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:49:04 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2021-11-16 00:49:04 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:49:04 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 00:49:07 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:49:07 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '97';
2021-11-16 00:49:07 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:49:07 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 00:49:10 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:49:10 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '98';
2021-11-16 00:49:10 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:49:10 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826171404KPPG');
2021-11-16 00:49:25 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 00:49:25 | 耗时 3 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = Cost_Value + 10 WHERE (Organization_Code IN ('20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-16 00:49:25 INFO  Febs-Async-Thread5 p6spy 2021-11-16 00:49:25 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateUpCosts()', '2021-11-16T00:49:25.052+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 15, ' organizationCodes: "20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: null costValue: "10"', '批量上调商户资费', 'admin');
2021-11-16 00:49:25 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:49:25 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:49:25 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:49:25 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 00:49:25 INFO  Febs-Async-Thread1 p6spy 2021-11-16 00:49:25 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:49:25.111+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 18, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 00:49:27 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 00:49:27 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:49:27 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 00:49:27 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-16 00:49:27 INFO  Febs-Async-Thread2 p6spy 2021-11-16 00:49:27 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:49:27.037+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 18, ' request: "QueryRequest(pageSize=10, pageNum=2, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 00:49:28 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:49:28 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2021-11-16 00:49:28 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:49:28 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 00:49:31 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 00:49:31 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '97';
2021-11-16 00:49:31 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 00:49:31 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 00:49:34 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 00:49:34 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '98';
2021-11-16 00:49:34 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 00:49:34 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826171404KPPG');
2021-11-16 00:49:42 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:49:42 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '100';
2021-11-16 00:49:42 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:49:42 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200827192224ERWI');
2021-11-16 00:49:52 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:49:52 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '98';
2021-11-16 00:49:52 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:49:52 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826171404KPPG');
2021-11-16 00:49:55 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:49:55 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '97';
2021-11-16 00:49:55 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 00:49:55 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 00:49:58 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 00:49:58 | 耗时 9 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 00:49:58 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 00:49:58 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 00:49:58 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 00:49:58 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 43);
2021-11-16 00:49:58 INFO  Febs-Async-Thread3 p6spy 2021-11-16 00:49:58 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-16T00:49:58.259+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 25, ' organizationCosts: "[]"', '商户用户资费更新', 'admin');
2021-11-16 00:50:01 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 00:50:01 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '98';
2021-11-16 00:50:01 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 00:50:01 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826171404KPPG');
2021-11-16 00:50:16 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:50:16 | 耗时 11 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = Cost_Value + 10 WHERE (Organization_Code IN ('SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-16 00:50:16 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:50:16 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-16 00:50:16 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:50:16 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-16 00:50:16 INFO  Febs-Async-Thread4 p6spy 2021-11-16 00:50:16 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateUpCosts()', '2021-11-16T00:50:16.450+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 34, ' organizationCodes: "SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR" costName: "+86" smsType: "1" operator: "CMCC" costValue: "10"', '批量上调商户资费', 'admin');
2021-11-16 00:50:16 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:50:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:50:16 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:50:16 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 00:50:16 INFO  Febs-Async-Thread5 p6spy 2021-11-16 00:50:16 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:50:16.516+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 30, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 00:50:18 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 00:50:18 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:50:18 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 00:50:18 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-16 00:50:18 INFO  Febs-Async-Thread1 p6spy 2021-11-16 00:50:18 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:50:18.142+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 34, ' request: "QueryRequest(pageSize=10, pageNum=2, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 00:50:19 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 00:50:19 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2021-11-16 00:50:19 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 00:50:19 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 00:50:30 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:50:30 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '97';
2021-11-16 00:50:30 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 00:50:30 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 00:50:43 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:50:43 | 耗时 9 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 00:50:43 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:50:43 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 00:50:43 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:50:43 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '98';
2021-11-16 00:50:43 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 00:50:43 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826171404KPPG');
2021-11-16 00:52:22 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 00:52:22 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '97';
2021-11-16 00:52:22 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 00:52:22 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 00:52:24 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 00:52:24 | 耗时 3 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 00:52:24 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 00:52:24 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 00:52:24 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 00:52:24 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 43);
2021-11-16 00:52:24 INFO  Febs-Async-Thread2 p6spy 2021-11-16 00:52:24 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-16T00:52:24.427+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 26, ' organizationCosts: "[]"', '商户用户资费更新', 'admin');
2021-11-16 00:53:03 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:53:03 | 耗时 8 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = Cost_Value + 10 WHERE (Organization_Code IN ('20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-16 00:53:23 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:53:23 | 耗时 10 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-16 00:53:30 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 00:53:30 | 耗时 10 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-16 00:54:16 INFO  Febs-Async-Thread3 p6spy 2021-11-16 00:54:16 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateUpCosts()', '2021-11-16T00:54:16.869+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 78176, ' organizationCodes: "20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: "CMCC" costValue: "10"', '批量上调商户资费', 'admin');
2021-11-16 00:54:16 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:54:16 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 00:54:16 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 00:54:16 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 00:54:16 INFO  Febs-Async-Thread4 p6spy 2021-11-16 00:54:16 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T00:54:16.968+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 27, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 00:54:19 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-16 00:54:19 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636994818344 paused.
2021-11-16 00:54:19 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-16 00:54:19 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-16 00:54:19 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636994818344 shutting down.
2021-11-16 00:54:19 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636994818344 paused.
2021-11-16 00:54:19 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636994818344 shutdown complete.
2021-11-16 00:54:19 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-16 00:54:19 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-16 00:54:19 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-16 00:54:19 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-16 00:54:19 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-16 00:54:19 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2021-11-16 00:57:07 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 73708 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-11-16 00:57:07 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-11-16 00:57:11 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-16 00:57:11 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-16 00:57:11 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 802ms. Found 0 repository interfaces.
2021-11-16 00:57:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9d27e209] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$57e9aa54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$16b38d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$293d01c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$7161ddd2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:13 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-16 00:57:13 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-16 00:57:13 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-16 00:57:13 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-16 00:57:13 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-16 00:57:13 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-16 00:57:13 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-16 00:57:13 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-16 00:57:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 00:57:19 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-11-16 00:57:19 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-11-16 00:57:19 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-16 00:57:19 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-16 00:57:20 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-16 00:57:20 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 12526 ms
2021-11-16 00:57:21 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-16 00:57:26 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-16 00:57:26 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-16 00:57:26 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-16 00:57:26 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-11-16 00:57:26 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-11-16 00:57:26 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1636995446453'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-11-16 00:57:26 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-11-16 00:57:26 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-16 00:57:26 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@663e1144
2021-11-16 00:57:26 INFO  main p6spy 2021-11-16 00:57:26 | 耗时 9 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-11-16 00:57:28 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-16 00:57:28 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-16 00:57:28 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-16 00:57:28 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-16 00:57:28 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-16 00:57:29 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-16 00:57:29 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-16 00:57:29 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-16 00:57:29 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-11-16 00:57:29 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-11-16 00:57:29 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-11-16 00:57:29 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 22.655 seconds (JVM running for 26.015)
2021-11-16 00:57:29 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-11-16 00:57:29 INFO  main p6spy 2021-11-16 00:57:29 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-11-16 00:57:29 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-11-16 00:57:29 INFO  main p6spy 2021-11-16 00:57:29 | 耗时 2 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-11-16 00:57:29 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-11-16 00:57:29 INFO  main p6spy 2021-11-16 00:57:29 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-11-16 00:57:29 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-11-16 00:57:29 INFO  main p6spy 2021-11-16 00:57:29 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-11-16 00:57:29 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-11-16 00:57:29 INFO  main p6spy 2021-11-16 00:57:29 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-11-16 00:57:29 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-11-16 00:57:29 INFO  main p6spy 2021-11-16 00:57:29 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-11-16 00:57:29 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-11-16 00:57:30 INFO  main p6spy 2021-11-16 00:57:30 | 耗时 625 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-11-16 00:57:30 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-11-16 00:57:30 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-11-16 00:57:30 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1636994818344"'s failed in-progress jobs.
2021-11-16 00:57:30 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636995446453 started.
2021-11-16 00:57:34 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-11-16 00:57:34 INFO  main p6spy 2021-11-16 00:57:34 | 耗时 9 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-11-16 00:57:34 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-11-16 00:57:34 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-11-16 00:57:34 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-11-16 00:57:34 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-11-16 00:57:52 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-11-16 00:57:52 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-11-16 00:57:52 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-11-16 00:57:52 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-11-16 00:57:52 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-11-16 00:59:57 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 73980 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-11-16 00:59:57 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-11-16 01:00:00 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-16 01:00:00 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-16 01:00:01 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 1065ms. Found 0 repository interfaces.
2021-11-16 01:00:02 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:02 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$797b1498] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:02 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:02 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:02 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$343cdce3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$f306bfd0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$5903454] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$4db51061] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:03 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-16 01:00:03 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-16 01:00:03 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-16 01:00:03 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-16 01:00:03 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-16 01:00:03 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-16 01:00:03 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-16 01:00:03 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-16 01:00:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:00:10 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-11-16 01:00:10 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-11-16 01:00:10 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-16 01:00:10 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-16 01:00:10 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-16 01:00:10 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 13631 ms
2021-11-16 01:00:12 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-16 01:00:16 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-16 01:00:16 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-16 01:00:16 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-16 01:00:16 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-11-16 01:00:16 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-11-16 01:00:16 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1636995616533'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-11-16 01:00:16 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-11-16 01:00:16 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-16 01:00:16 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@8a7cd7c
2021-11-16 01:00:16 INFO  main p6spy 2021-11-16 01:00:16 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-11-16 01:00:18 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-16 01:00:18 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-16 01:00:18 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-16 01:00:18 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-16 01:00:18 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-16 01:00:19 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-16 01:00:19 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-16 01:00:19 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-16 01:00:19 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-11-16 01:00:19 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-11-16 01:00:19 INFO  main org.apache.coyote.http11.Http11NioProtocol Pausing ProtocolHandler ["http-nio-8088"]
2021-11-16 01:00:19 INFO  main org.apache.catalina.core.StandardService Stopping service [Tomcat]
2021-11-16 01:00:19 INFO  main org.apache.coyote.http11.Http11NioProtocol Stopping ProtocolHandler ["http-nio-8088"]
2021-11-16 01:00:19 INFO  main org.apache.coyote.http11.Http11NioProtocol Destroying ProtocolHandler ["http-nio-8088"]
2021-11-16 01:00:19 INFO  main org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-11-16 01:00:19 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-16 01:00:19 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-16 01:00:19 INFO  main org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636995616533 shutting down.
2021-11-16 01:00:19 INFO  main org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636995616533 paused.
2021-11-16 01:00:19 INFO  main org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636995616533 shutdown complete.
2021-11-16 01:00:19 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-16 01:00:19 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-16 01:00:19 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-16 01:00:19 INFO  main com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-16 01:00:19 INFO  main com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-16 01:00:19 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2021-11-16 01:00:20 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-11-16 01:02:43 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 44996 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-11-16 01:02:43 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-11-16 01:02:47 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-16 01:02:47 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-16 01:02:48 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 833ms. Found 0 repository interfaces.
2021-11-16 01:02:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8693732e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$41553b79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$1f1e66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$12a892ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$5acd6ef7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:49 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-16 01:02:49 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-16 01:02:49 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-16 01:02:49 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-16 01:02:49 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-16 01:02:49 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-16 01:02:49 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-16 01:02:49 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-16 01:02:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:02:56 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-11-16 01:02:56 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-11-16 01:02:56 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-16 01:02:56 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-16 01:02:56 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-16 01:02:56 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 12616 ms
2021-11-16 01:02:57 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-16 01:03:01 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-16 01:03:01 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-16 01:03:01 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-16 01:03:01 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-11-16 01:03:01 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-11-16 01:03:01 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1636995781017'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-11-16 01:03:01 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-11-16 01:03:01 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-16 01:03:01 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7402bfe7
2021-11-16 01:03:01 INFO  main p6spy 2021-11-16 01:03:01 | 耗时 0 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-11-16 01:03:02 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-16 01:03:03 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-16 01:03:03 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-16 01:03:03 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-16 01:03:03 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-16 01:03:04 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-16 01:03:04 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-16 01:03:04 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-16 01:03:04 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-11-16 01:03:04 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-11-16 01:03:04 INFO  main org.apache.coyote.http11.Http11NioProtocol Pausing ProtocolHandler ["http-nio-8088"]
2021-11-16 01:03:04 INFO  main org.apache.catalina.core.StandardService Stopping service [Tomcat]
2021-11-16 01:03:04 INFO  main org.apache.coyote.http11.Http11NioProtocol Stopping ProtocolHandler ["http-nio-8088"]
2021-11-16 01:03:04 INFO  main org.apache.coyote.http11.Http11NioProtocol Destroying ProtocolHandler ["http-nio-8088"]
2021-11-16 01:03:04 INFO  main org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-11-16 01:03:04 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-16 01:03:04 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-16 01:03:04 INFO  main org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636995781017 shutting down.
2021-11-16 01:03:04 INFO  main org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636995781017 paused.
2021-11-16 01:03:04 INFO  main org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636995781017 shutdown complete.
2021-11-16 01:03:04 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-16 01:03:04 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-16 01:03:04 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-16 01:03:04 INFO  main com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-16 01:03:04 INFO  main com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-16 01:03:04 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2021-11-16 01:03:05 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-11-16 01:03:19 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-16 01:03:19 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636995446453 paused.
2021-11-16 01:03:19 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-16 01:03:19 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-16 01:03:19 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636995446453 shutting down.
2021-11-16 01:03:19 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636995446453 paused.
2021-11-16 01:03:19 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636995446453 shutdown complete.
2021-11-16 01:03:19 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-16 01:03:19 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-16 01:03:19 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-16 01:03:19 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-16 01:03:19 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-16 01:03:19 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2021-11-16 01:03:30 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 69748 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-11-16 01:03:30 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-11-16 01:03:34 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-16 01:03:34 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-16 01:03:35 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 914ms. Found 0 repository interfaces.
2021-11-16 01:03:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$586f256d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$1330edb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$d1fad0a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$e4844529] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$2ca92136] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:37 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-16 01:03:37 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-16 01:03:37 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-16 01:03:37 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-16 01:03:37 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-16 01:03:37 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-16 01:03:37 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-16 01:03:37 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-16 01:03:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:40 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:40 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:40 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:40 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:03:44 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-11-16 01:03:44 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-11-16 01:03:44 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-16 01:03:44 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-16 01:03:45 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-16 01:03:45 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 14536 ms
2021-11-16 01:03:46 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-16 01:03:50 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-16 01:03:50 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-16 01:03:50 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-16 01:03:50 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-11-16 01:03:50 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-11-16 01:03:50 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1636995830484'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-11-16 01:03:50 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-11-16 01:03:50 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-16 01:03:50 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@61ec2cb5
2021-11-16 01:03:50 INFO  main p6spy 2021-11-16 01:03:50 | 耗时 0 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-11-16 01:03:52 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-16 01:03:52 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-16 01:03:52 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-16 01:03:52 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-16 01:03:52 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-16 01:03:53 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-16 01:03:53 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-16 01:03:53 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-16 01:03:53 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-11-16 01:03:53 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-11-16 01:03:53 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-11-16 01:03:53 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 24.373 seconds (JVM running for 28.068)
2021-11-16 01:03:53 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-11-16 01:03:54 INFO  main p6spy 2021-11-16 01:03:54 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-11-16 01:03:54 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-11-16 01:03:54 INFO  main p6spy 2021-11-16 01:03:54 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-11-16 01:03:54 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-11-16 01:03:54 INFO  main p6spy 2021-11-16 01:03:54 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-11-16 01:03:54 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-11-16 01:03:54 INFO  main p6spy 2021-11-16 01:03:54 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-11-16 01:03:54 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-11-16 01:03:54 INFO  main p6spy 2021-11-16 01:03:54 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-11-16 01:03:54 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-11-16 01:03:54 INFO  main p6spy 2021-11-16 01:03:54 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-11-16 01:03:54 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-11-16 01:03:54 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-11-16 01:03:54 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-11-16 01:03:54 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1636995446453"'s failed in-progress jobs.
2021-11-16 01:03:54 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636995830484 started.
2021-11-16 01:03:54 INFO  main p6spy 2021-11-16 01:03:54 | 耗时 775 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-11-16 01:03:59 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-11-16 01:03:59 INFO  main p6spy 2021-11-16 01:03:59 | 耗时 8 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-11-16 01:03:59 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-11-16 01:03:59 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-11-16 01:03:59 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-11-16 01:03:59 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-11-16 01:04:17 INFO  http-nio-8088-exec-2 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-16 01:04:17 INFO  http-nio-8088-exec-2 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-11-16 01:04:17 INFO  http-nio-8088-exec-2 org.springframework.web.servlet.DispatcherServlet Completed initialization in 23 ms
2021-11-16 01:04:17 INFO  http-nio-8088-exec-2 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-11-16 01:04:17 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:04:17 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 01:04:17 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:04:17 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 01:04:17 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:04:17 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 01:04:20 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-11-16 01:04:20 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-11-16 01:04:20 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-11-16 01:04:20 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-11-16 01:04:20 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-11-16 01:04:20 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:04:20 | 耗时 10 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-16 01:04:21 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 01:04:21 | 耗时 3 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-16 01:04:21 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 01:04:21 | 耗时 10 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 01:04:21 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 01:04:21 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 01:04:21 INFO  Febs-Async-Thread1 p6spy 2021-11-16 01:04:21 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T01:04:21.539+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 66, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-16 01:07:39 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-16 01:07:39 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636995830484 paused.
2021-11-16 01:07:39 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-16 01:07:39 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-16 01:07:39 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636995830484 shutting down.
2021-11-16 01:07:39 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636995830484 paused.
2021-11-16 01:07:39 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636995830484 shutdown complete.
2021-11-16 01:07:39 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-16 01:07:39 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-16 01:07:39 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-16 01:07:39 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-16 01:07:39 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-16 01:07:39 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2021-11-16 01:19:10 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 67436 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-11-16 01:19:10 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-11-16 01:19:13 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-16 01:19:13 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-16 01:19:14 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 778ms. Found 0 repository interfaces.
2021-11-16 01:19:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$b9209926] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$73e26171] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$32ac445e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$4535b8e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$8d5a94ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:16 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-16 01:19:16 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-16 01:19:16 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-16 01:19:16 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-16 01:19:16 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-16 01:19:16 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-16 01:19:16 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-16 01:19:16 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-16 01:19:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:19:25 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-11-16 01:19:25 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-11-16 01:19:25 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-16 01:19:25 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-16 01:19:26 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-16 01:19:26 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 15459 ms
2021-11-16 01:19:27 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-16 01:19:31 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-16 01:19:31 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-16 01:19:31 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-16 01:19:31 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-11-16 01:19:31 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-11-16 01:19:31 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1636996771355'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-11-16 01:19:31 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-11-16 01:19:31 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-16 01:19:31 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@8f8717b
2021-11-16 01:19:31 INFO  main p6spy 2021-11-16 01:19:31 | 耗时 9 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-11-16 01:19:32 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-16 01:19:32 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-16 01:19:33 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-16 01:19:33 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-16 01:19:33 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-16 01:19:34 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-16 01:19:34 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-16 01:19:34 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-16 01:19:34 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-11-16 01:19:34 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-11-16 01:19:34 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-11-16 01:19:34 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 24.266 seconds (JVM running for 27.496)
2021-11-16 01:19:34 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-11-16 01:19:34 INFO  main p6spy 2021-11-16 01:19:34 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-11-16 01:19:34 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-11-16 01:19:34 INFO  main p6spy 2021-11-16 01:19:34 | 耗时 8 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-11-16 01:19:34 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-11-16 01:19:34 INFO  main p6spy 2021-11-16 01:19:34 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-11-16 01:19:34 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-11-16 01:19:34 INFO  main p6spy 2021-11-16 01:19:34 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-11-16 01:19:34 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-11-16 01:19:34 INFO  main p6spy 2021-11-16 01:19:34 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-11-16 01:19:34 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-11-16 01:19:34 INFO  main p6spy 2021-11-16 01:19:34 | 耗时 0 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-11-16 01:19:34 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-11-16 01:19:34 INFO  main p6spy 2021-11-16 01:19:34 | 耗时 694 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-11-16 01:19:35 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-11-16 01:19:35 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-11-16 01:19:35 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1636995830484"'s failed in-progress jobs.
2021-11-16 01:19:35 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636996771355 started.
2021-11-16 01:19:40 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-11-16 01:19:40 INFO  main p6spy 2021-11-16 01:19:40 | 耗时 0 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-11-16 01:19:40 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-11-16 01:19:40 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-11-16 01:19:40 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-11-16 01:19:40 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-11-16 01:19:58 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-16 01:19:58 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-11-16 01:19:58 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 31 ms
2021-11-16 01:19:58 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-11-16 01:19:58 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 01:19:58 | 耗时 10 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 01:19:59 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 01:19:59 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 01:19:59 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 01:19:59 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 01:19:59 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-11-16 01:19:59 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-11-16 01:19:59 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-11-16 01:19:59 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-11-16 01:19:59 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-11-16 01:20:00 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 01:20:00 | 耗时 6 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-16 01:20:00 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 01:20:00 | 耗时 9 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-16 01:20:01 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 01:20:01 | 耗时 12 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 01:20:01 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 01:20:01 | 耗时 6 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 01:20:01 INFO  Febs-Async-Thread1 p6spy 2021-11-16 01:20:01 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T01:20:01.444+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 134, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-16 01:20:04 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 01:20:04 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-16 01:20:57 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:20:57 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 01:20:57 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:20:57 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 01:20:57 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:20:57 | 耗时 10 ms | SQL 语句：
INSERT INTO t_menu (MENU_NAME, TYPE, PARENT_ID, CREATE_TIME, PERMS) VALUES ('批量上调资费', '1', 195, '2021-11-16T01:20:57.069+0800', 'agent:updataUpCosts');
2021-11-16 01:20:57 INFO  Febs-Async-Thread2 p6spy 2021-11-16 01:20:57 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.MenuController.addMenu()', '2021-11-16T01:20:57.100+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 27, ' menu: "Menu(menuId=393, parentId=195, menuName=批量上调资费, url=null, perms=agent:updataUpCosts, icon=null, type=1, orderNum=null, createTime=Tue Nov 16 01:20:57 CST 2021, modifyTime=null)"', '新增菜单/按钮', 'admin');
2021-11-16 01:20:57 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 01:20:57 | 耗时 3 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-16 01:21:16 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 01:21:16 | 耗时 2 ms | SQL 语句：
INSERT INTO t_menu (MENU_NAME, TYPE, PARENT_ID, CREATE_TIME, PERMS) VALUES ('批量下调资费', '1', 195, '2021-11-16T01:21:16.414+0800', 'agent:updateCutCosts');
2021-11-16 01:21:16 INFO  Febs-Async-Thread3 p6spy 2021-11-16 01:21:16 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.MenuController.addMenu()', '2021-11-16T01:21:16.429+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 12, ' menu: "Menu(menuId=394, parentId=195, menuName=批量下调资费, url=null, perms=agent:updateCutCosts, icon=null, type=1, orderNum=null, createTime=Tue Nov 16 01:21:16 CST 2021, modifyTime=null)"', '新增菜单/按钮', 'admin');
2021-11-16 01:21:16 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 01:21:16 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-16 01:21:18 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 01:21:18 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-16 01:21:18 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:21:18 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2021-11-16 01:21:18 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:21:18 | 耗时 4 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2021-11-16 01:21:28 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 01:21:28 | 耗时 1 ms | SQL 语句：
UPDATE t_role SET MODIFY_TIME = '2021-11-16T01:21:28.780+0800', ROLE_NAME = '系统管理员', REMARK = '系统管理员，拥有所有操作权限 ^_^' WHERE ROLE_ID = 1;
2021-11-16 01:21:28 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 01:21:28 | 耗时 4 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('1'));
2021-11-16 01:21:28 INFO  Febs-Async-Thread4 p6spy 2021-11-16 01:21:28 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.RoleController.updateRole()', '2021-11-16T01:21:28.933+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 151, ' role: "Role(roleId=1, roleName=系统管理员, remark=系统管理员，拥有所有操作权限 ^_^, createTime=null, modifyTime=Tue Nov 16 01:21:28 CST 2021, menuIds=1,3,12,13,286,160,161,4,14,15,16,162,5,17,18,19,6,20,21,22,164,176,177,178,179,180,181,289,182,183,184,185,365,366,367,368,369,370,371,374,186,195,257,287,320,380,381,390,393,394,187,188,189,190,191,205,219,196,197,198,199,294,295,306,372,192,193,258,263,303,316,318,329,338,340,341,342,359,389,391,392,200,202,203,211,206,305,360,361,362,207,208,209,210,220,221,222,231,194,262,228,229,296,373,375,376,377,378,379,259,260,347,382,383,261,346,384,385,387,388,300,301,302,314,325,345,213,246,279,315,354,247,280,285,298,304,363,364,248,281,254,256,255,242,243,244,245,274,275,276,277,291,292,355,356,357,348,349,350,358,212,214,297,339,343,352,353,386,223,224,225,226,215,216,217,218,249,250,251,252,253,307,308,309,310,311,313,337,344,264,278,265,266,293,330,326,331,327,335,328,336,299,332,319,333,321,334,267,268,282,269,272,283,270,273,284,322,323,324,2,8,23,10,24,136,171,172,127,128,129,131,175,101,102,103,104,105,106,173,109,110,174,137,165,139,166,115,132,133,135,134,126,159,116,117,119,120,121,122,123,118,125,167,168,169)"', '修改角色', 'admin');
2021-11-16 01:21:29 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:21:29 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 01:21:29 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:21:29 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 01:21:29 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:21:29 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2021-11-16 01:21:29 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:21:29 | 耗时 4 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2021-11-16 01:25:03 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 01:25:03 | 耗时 10 ms | SQL 语句：
UPDATE t_menu SET MENU_NAME = '批量上调资费', TYPE = '1', PARENT_ID = 195, MODIFY_TIME = '2021-11-16T01:25:03.808+0800', PERMS = 'agent:updateUpCosts' WHERE MENU_ID = 393;
2021-11-16 01:25:03 INFO  Febs-Async-Thread5 p6spy 2021-11-16 01:25:03 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.MenuController.updateMenu()', '2021-11-16T01:25:03.839+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 29, ' menu: "Menu(menuId=393, parentId=195, menuName=批量上调资费, url=null, perms=agent:updateUpCosts, icon=null, type=1, orderNum=null, createTime=null, modifyTime=Tue Nov 16 01:25:03 CST 2021)"', '修改菜单/按钮', 'admin');
2021-11-16 01:25:03 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 01:25:03 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-16 01:25:12 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 01:25:12 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 01:25:12 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 01:25:12 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 01:25:12 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 01:25:12 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET MENU_NAME = '批量上调资费', TYPE = '1', PARENT_ID = 193, MODIFY_TIME = '2021-11-16T01:25:12.766+0800', PERMS = 'organization:updateUpCosts' WHERE MENU_ID = 391;
2021-11-16 01:25:12 INFO  Febs-Async-Thread1 p6spy 2021-11-16 01:25:12 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.MenuController.updateMenu()', '2021-11-16T01:25:12.777+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 10, ' menu: "Menu(menuId=391, parentId=193, menuName=批量上调资费, url=null, perms=organization:updateUpCosts, icon=null, type=1, orderNum=null, createTime=null, modifyTime=Tue Nov 16 01:25:12 CST 2021)"', '修改菜单/按钮', 'admin');
2021-11-16 01:25:12 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 01:25:12 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-16 01:25:58 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-16 01:25:58 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636996771355 paused.
2021-11-16 01:25:58 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-16 01:25:58 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-16 01:25:58 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636996771355 shutting down.
2021-11-16 01:25:58 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636996771355 paused.
2021-11-16 01:25:58 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636996771355 shutdown complete.
2021-11-16 01:25:58 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-16 01:25:58 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-16 01:25:58 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-16 01:25:58 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-16 01:25:58 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-16 01:25:58 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2021-11-16 01:26:09 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 69996 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-11-16 01:26:09 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-11-16 01:26:13 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-16 01:26:13 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-16 01:26:13 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 887ms. Found 0 repository interfaces.
2021-11-16 01:26:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$b4030879] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$6ec4d0c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$2d8eb3b1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$40182835] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$883d0442] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:15 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-16 01:26:15 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-16 01:26:15 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-16 01:26:15 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-16 01:26:15 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-16 01:26:15 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-16 01:26:15 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-16 01:26:15 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-16 01:26:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 01:26:23 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-11-16 01:26:23 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-11-16 01:26:23 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-16 01:26:23 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-16 01:26:24 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-16 01:26:24 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 14830 ms
2021-11-16 01:26:25 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-16 01:26:28 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-16 01:26:28 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-16 01:26:28 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-16 01:26:28 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-11-16 01:26:28 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-11-16 01:26:28 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1636997188551'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-11-16 01:26:28 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-11-16 01:26:28 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-16 01:26:28 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@69a3944
2021-11-16 01:26:28 INFO  main p6spy 2021-11-16 01:26:28 | 耗时 8 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-11-16 01:26:30 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-16 01:26:30 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-16 01:26:30 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-16 01:26:30 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-16 01:26:30 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-16 01:26:31 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-16 01:26:31 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-16 01:26:31 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-16 01:26:31 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-11-16 01:26:31 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-11-16 01:26:31 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-11-16 01:26:31 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 23.372 seconds (JVM running for 27.101)
2021-11-16 01:26:31 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-11-16 01:26:31 INFO  main p6spy 2021-11-16 01:26:31 | 耗时 11 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-11-16 01:26:31 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-11-16 01:26:31 INFO  main p6spy 2021-11-16 01:26:31 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-11-16 01:26:31 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-11-16 01:26:31 INFO  main p6spy 2021-11-16 01:26:31 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-11-16 01:26:31 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-11-16 01:26:31 INFO  main p6spy 2021-11-16 01:26:31 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-11-16 01:26:31 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-11-16 01:26:31 INFO  main p6spy 2021-11-16 01:26:31 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-11-16 01:26:31 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-11-16 01:26:31 INFO  main p6spy 2021-11-16 01:26:31 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-11-16 01:26:31 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-11-16 01:26:32 INFO  main p6spy 2021-11-16 01:26:32 | 耗时 631 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-11-16 01:26:32 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-11-16 01:26:32 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-11-16 01:26:32 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1636996771355"'s failed in-progress jobs.
2021-11-16 01:26:32 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636997188551 started.
2021-11-16 01:26:37 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-11-16 01:26:37 INFO  main p6spy 2021-11-16 01:26:37 | 耗时 9 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-11-16 01:26:37 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-11-16 01:26:37 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-11-16 01:26:38 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-11-16 01:26:38 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-11-16 01:26:39 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-16 01:26:39 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-11-16 01:26:39 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 25 ms
2021-11-16 01:26:39 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-11-16 01:26:52 INFO  http-nio-8088-exec-3 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-11-16 01:26:52 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 01:26:52 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 01:26:52 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 01:26:52 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 01:26:52 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 01:26:52 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2021-11-16T00:20:41.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2021-11-16 01:26:52 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 01:26:52 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2021-11-16T01:26:52.849+0800', 'Chrome 93', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 'admin');
2021-11-16 01:26:53 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:26:53 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 01:26:53 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:26:53 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 01:26:53 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:26:53 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 01:26:54 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 01:26:54 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 01:26:54 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 01:26:54 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 01:26:54 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 01:26:54 | 耗时 14 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-16 01:26:54 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 01:26:54 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-16 01:26:55 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:26:55 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2021-11-16T01:26:55.295+0800' WHERE (USERNAME = 'admin');
2021-11-16 01:26:55 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:26:55 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2021-11-16 01:26:55 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:26:55 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-16 01:26:55 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:26:55 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-16 01:26:55 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:26:55 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2021-11-16 01:26:55 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:26:55 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2021-11-16 01:26:55 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 01:26:55 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2021-11-16 01:26:55 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 01:26:55 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2021-11-16 01:26:55 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:26:55 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2021-11-16 01:26:57 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:26:57 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-16 01:26:57 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:26:57 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-16 01:26:57 INFO  Febs-Async-Thread1 p6spy 2021-11-16 01:26:57 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-16T01:26:57.826+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 105, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=null, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=null, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-16 01:27:00 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 01:27:00 | 耗时 9 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-16 01:27:03 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-11-16 01:27:03 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-11-16 01:27:03 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-11-16 01:27:03 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-11-16 01:27:03 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-11-16 01:27:18 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:27:18 | 耗时 0 ms | SQL 语句：
UPDATE t_agent_cost SET Value = Value + 10 WHERE (Agent_Id IN ('36', '35') AND Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-16 01:27:18 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:27:18 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id IN ('36', '35') AND Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-16 01:27:18 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:27:18 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id IN ('36', '35') AND Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-16 01:27:18 INFO  Febs-Async-Thread2 p6spy 2021-11-16 01:27:18 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateUpCosts()', '2021-11-16T01:27:18.710+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 62, ' agentIds: "36,35" costName: "+86" smsType: "1" operator: "CMCC" costValue: "10"', '批量上调代理资费', 'admin');
2021-11-16 01:27:18 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 01:27:18 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-16 01:27:18 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 01:27:18 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-16 01:27:18 INFO  Febs-Async-Thread3 p6spy 2021-11-16 01:27:18 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-16T01:27:18.796+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 30, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-16 01:27:37 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 01:27:37 | 耗时 11 ms | SQL 语句：
UPDATE t_agent_cost SET Value = Value + 10 WHERE (Agent_Id IN ('45', '44', '43', '36', '35') AND Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-16 01:27:37 INFO  Febs-Async-Thread4 p6spy 2021-11-16 01:27:37 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateUpCosts()', '2021-11-16T01:27:37.855+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 27, ' agentIds: "45,44,43,36,35" costName: "+86" smsType: "1" operator: null costValue: "10"', '批量上调代理资费', 'admin');
2021-11-16 01:27:37 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:27:37 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-16 01:27:37 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:27:37 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-16 01:27:37 INFO  Febs-Async-Thread5 p6spy 2021-11-16 01:27:37 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-16T01:27:37.963+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 48, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-16 01:27:47 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 01:27:47 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-16 01:27:50 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 01:27:50 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 36;
2021-11-16 01:27:50 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 01:27:50 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-16 01:27:50 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 01:27:50 | 耗时 9 ms | SQL 语句：
DELETE FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-16 01:27:50 INFO  Febs-Async-Thread1 p6spy 2021-11-16 01:27:50 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateAgentCosts()', '2021-11-16T01:27:50.452+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 34, ' agentCosts: "[]"', '代理资费修改', 'admin');
2021-11-16 01:28:02 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:28:02 | 耗时 1 ms | SQL 语句：
UPDATE t_agent_cost SET Value = Value + 10 WHERE (Agent_Id IN ('43', '36', '35') AND Name = '+86' AND sms_type = '1' AND Operator = 'CTCC');
2021-11-16 01:28:02 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:28:02 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id IN ('43', '36', '35') AND Name = '+86' AND sms_type = '1' AND Operator = 'CTCC');
2021-11-16 01:28:02 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:28:02 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id IN ('43', '36', '35') AND Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-16 01:28:02 INFO  Febs-Async-Thread2 p6spy 2021-11-16 01:28:02 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateUpCosts()', '2021-11-16T01:28:02.249+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 30, ' agentIds: "43,36,35" costName: "+86" smsType: "1" operator: "CTCC" costValue: "10"', '批量上调代理资费', 'admin');
2021-11-16 01:28:02 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 01:28:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-16 01:28:02 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 01:28:02 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-16 01:28:02 INFO  Febs-Async-Thread3 p6spy 2021-11-16 01:28:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-16T01:28:02.321+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 32, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-16 01:28:04 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 01:28:04 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-16 01:28:07 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 01:28:07 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-16 01:28:24 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:28:24 | 耗时 2 ms | SQL 语句：
UPDATE t_agent_cost SET Value = Value - 10 WHERE (Agent_Id IN ('43', '36', '35') AND Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-16 01:28:24 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:28:24 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id IN ('43', '36', '35') AND Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-16 01:28:24 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:28:24 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id IN ('43', '36', '35') AND Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-16 01:28:24 INFO  Febs-Async-Thread4 p6spy 2021-11-16 01:28:24 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateCutCosts()', '2021-11-16T01:28:24.965+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 28, ' agentIds: "43,36,35" costName: "+86" smsType: "1" operator: "CMCC" costValue: "10"', '批量下调代理资费', 'admin');
2021-11-16 01:28:25 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 01:28:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-16 01:28:25 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 01:28:25 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-16 01:28:25 INFO  Febs-Async-Thread5 p6spy 2021-11-16 01:28:25 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-16T01:28:25.050+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 30, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-16 01:28:47 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 01:28:47 | 耗时 4 ms | SQL 语句：
UPDATE t_agent_cost SET Value = Value + 10 WHERE (Agent_Id IN ('45', '44', '43', '36', '35') AND Name = '+91' AND sms_type = '1');
2021-11-16 01:28:47 INFO  Febs-Async-Thread1 p6spy 2021-11-16 01:28:47 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateUpCosts()', '2021-11-16T01:28:47.153+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 13, ' agentIds: "45,44,43,36,35" costName: "+91" smsType: "1" operator: "CUCC" costValue: "10"', '批量上调代理资费', 'admin');
2021-11-16 01:28:47 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:28:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-16 01:28:47 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:28:47 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-16 01:28:47 INFO  Febs-Async-Thread2 p6spy 2021-11-16 01:28:47 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-16T01:28:47.241+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 35, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-16 01:29:02 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 01:29:02 | 耗时 5 ms | SQL 语句：
UPDATE t_agent_cost SET Value = Value + 10 WHERE (Agent_Id IN ('45', '44', '43', '36', '35') AND Name = '+91' AND sms_type = '1');
2021-11-16 01:29:02 INFO  Febs-Async-Thread3 p6spy 2021-11-16 01:29:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateUpCosts()', '2021-11-16T01:29:02.887+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 11, ' agentIds: "45,44,43,36,35" costName: "+91" smsType: "1" operator: "CUCC" costValue: "10"', '批量上调代理资费', 'admin');
2021-11-16 01:29:02 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 01:29:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-16 01:29:02 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 01:29:02 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-16 01:29:02 INFO  Febs-Async-Thread4 p6spy 2021-11-16 01:29:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-16T01:29:02.951+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 24, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-16 01:29:57 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 01:29:57 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 01:29:57 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 01:29:57 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 01:29:57 INFO  Febs-Async-Thread5 p6spy 2021-11-16 01:29:57 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T01:29:57.596+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 46, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-16 01:29:59 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 01:29:59 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 01:29:59 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 01:29:59 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-16 01:29:59 INFO  Febs-Async-Thread1 p6spy 2021-11-16 01:29:59 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T01:29:59.319+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 23, ' request: "QueryRequest(pageSize=10, pageNum=2, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-16 01:30:36 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 01:30:36 | 耗时 4 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = Cost_Value + 10 WHERE (Organization_Code IN ('SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-16 01:30:36 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 01:30:36 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-16 01:30:36 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 01:30:36 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-16 01:30:36 INFO  Febs-Async-Thread2 p6spy 2021-11-16 01:30:36 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateUpCosts()', '2021-11-16T01:30:36.193+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 42, ' organizationCodes: "SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: "CMCC" costValue: "10"', '批量上调商户资费', 'admin');
2021-11-16 01:30:36 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 01:30:36 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 01:30:36 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 01:30:36 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 01:30:36 INFO  Febs-Async-Thread3 p6spy 2021-11-16 01:30:36 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T01:30:36.258+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 20, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 01:30:53 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 01:30:53 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 01:30:53 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 01:30:53 | 耗时 5 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-16 01:30:53 INFO  Febs-Async-Thread4 p6spy 2021-11-16 01:30:53 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T01:30:53.088+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 28, ' request: "QueryRequest(pageSize=10, pageNum=2, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 01:31:09 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 01:31:09 | 耗时 3 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = Cost_Value - 30 WHERE (Organization_Code IN ('SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-16 01:31:09 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 01:31:09 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND Operator = 'CMCC');
2021-11-16 01:31:09 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 01:31:09 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-16 01:31:09 INFO  Febs-Async-Thread5 p6spy 2021-11-16 01:31:09 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCutCosts()', '2021-11-16T01:31:09.948+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 34, ' organizationCodes: "SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: "CMCC" costValue: "30"', '批量下调商户资费', 'admin');
2021-11-16 01:31:10 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:31:10 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 01:31:10 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:31:10 | 耗时 6 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 01:31:10 INFO  Febs-Async-Thread1 p6spy 2021-11-16 01:31:10 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T01:31:10.066+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 38, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 01:31:17 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 01:31:17 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 01:31:17 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 01:31:17 | 耗时 5 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-16 01:31:17 INFO  Febs-Async-Thread2 p6spy 2021-11-16 01:31:17 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T01:31:17.752+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 39, ' request: "QueryRequest(pageSize=10, pageNum=2, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 01:31:26 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 01:31:26 | 耗时 3 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = Cost_Value + 10 WHERE (Organization_Code IN ('SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-16 01:31:26 INFO  Febs-Async-Thread3 p6spy 2021-11-16 01:31:26 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateUpCosts()', '2021-11-16T01:31:26.614+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 13, ' organizationCodes: "SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: null costValue: "10"', '批量上调商户资费', 'admin');
2021-11-16 01:31:26 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 01:31:26 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 01:31:26 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 01:31:26 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 01:31:26 INFO  Febs-Async-Thread4 p6spy 2021-11-16 01:31:26 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T01:31:26.681+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 23, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 01:31:43 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:31:43 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 01:31:43 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 01:31:43 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-16 01:31:43 INFO  Febs-Async-Thread5 p6spy 2021-11-16 01:31:43 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T01:31:43.523+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 38, ' request: "QueryRequest(pageSize=10, pageNum=2, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 01:32:01 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 01:32:01 | 耗时 3 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = Cost_Value + 10 WHERE (Organization_Code IN ('SMS201117111508PIKE', 'SMS200831203105CVLC', 'SMS200827192224ERWI', '20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-16 01:32:01 INFO  Febs-Async-Thread1 p6spy 2021-11-16 01:32:01 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateUpCosts()', '2021-11-16T01:32:01.559+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 9, ' organizationCodes: "SMS201117111508PIKE,SMS200831203105CVLC,SMS200827192224ERWI,20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: null costValue: "10"', '批量上调商户资费', 'admin');
2021-11-16 01:32:01 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 01:32:01 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 01:32:01 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 01:32:01 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 01:32:01 INFO  Febs-Async-Thread2 p6spy 2021-11-16 01:32:01 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T01:32:01.628+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 19, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 01:32:15 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 01:32:15 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 01:32:15 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 01:32:15 | 耗时 5 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-16 01:32:15 INFO  Febs-Async-Thread3 p6spy 2021-11-16 01:32:15 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T01:32:15.374+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 33, ' request: "QueryRequest(pageSize=10, pageNum=2, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 01:32:21 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:32:21 | 耗时 2 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '98';
2021-11-16 01:32:21 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 01:32:21 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826171404KPPG');
2021-11-16 01:32:28 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 01:32:28 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '97';
2021-11-16 01:32:28 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 01:32:28 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 01:33:23 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 01:33:23 | 耗时 3 ms | SQL 语句：
UPDATE t_organization_cost SET Cost_Value = '40' WHERE (Organization_Code IN ('20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-16 01:33:23 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 01:33:23 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code IN ('20200826171404KPPG', '20200826164014MWDR', '20200331160443FKDW') AND Cost_Name = '+86' AND sms_type = '1' AND ((Operator IS NULL OR Operator = '')));
2021-11-16 01:33:23 INFO  Febs-Async-Thread4 p6spy 2021-11-16 01:33:23 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateCosts()', '2021-11-16T01:33:23.596+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 45, ' organizationCodes: "20200826171404KPPG,20200826164014MWDR,20200331160443FKDW" costName: "+86" smsType: "1" operator: null costValue: "40"', '批量修改商户资费', 'admin');
2021-11-16 01:33:23 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 01:33:23 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 01:33:23 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 01:33:23 | 耗时 5 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 01:33:23 INFO  Febs-Async-Thread5 p6spy 2021-11-16 01:33:23 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T01:33:23.748+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 43, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 01:33:40 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-16 01:33:40 INFO  RMI TCP Connection(4)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-16 01:33:40 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636997188551 paused.
2021-11-16 01:33:40 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-16 01:33:40 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-16 01:33:40 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636997188551 shutting down.
2021-11-16 01:33:40 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636997188551 paused.
2021-11-16 01:33:40 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1636997188551 shutdown complete.
2021-11-16 01:33:41 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-16 01:33:41 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-16 01:33:41 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-16 01:33:41 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-16 01:33:41 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-16 01:33:41 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2021-11-16 15:27:34 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 44960 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-11-16 15:27:34 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-11-16 15:27:38 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-16 15:27:38 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-16 15:27:39 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 1196ms. Found 0 repository interfaces.
2021-11-16 15:27:40 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1a7602d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$d537cb24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$9401ae11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$a68b2295] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$eeaffea2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:41 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-16 15:27:41 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-16 15:27:41 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-16 15:27:41 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-16 15:27:41 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-16 15:27:41 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-16 15:27:41 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-16 15:27:41 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-16 15:27:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 15:27:49 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-11-16 15:27:49 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-11-16 15:27:49 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-16 15:27:49 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-16 15:27:49 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-16 15:27:49 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 14526 ms
2021-11-16 15:27:50 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-16 15:27:53 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-16 15:27:53 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-16 15:27:53 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-16 15:27:53 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-11-16 15:27:53 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-11-16 15:27:53 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1637047673706'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-11-16 15:27:53 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-11-16 15:27:53 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-16 15:27:53 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@75973f7a
2021-11-16 15:27:53 INFO  main p6spy 2021-11-16 15:27:53 | 耗时 9 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-11-16 15:27:55 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-16 15:27:55 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-16 15:27:55 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-16 15:27:55 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-16 15:27:55 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-16 15:27:56 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-16 15:27:56 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-16 15:27:56 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-16 15:27:56 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-11-16 15:27:56 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-11-16 15:27:56 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-11-16 15:27:56 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 23.158 seconds (JVM running for 26.471)
2021-11-16 15:27:56 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-11-16 15:27:56 INFO  main p6spy 2021-11-16 15:27:56 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-11-16 15:27:56 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-11-16 15:27:56 INFO  main p6spy 2021-11-16 15:27:56 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-11-16 15:27:56 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-11-16 15:27:56 INFO  main p6spy 2021-11-16 15:27:56 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-11-16 15:27:56 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-11-16 15:27:56 INFO  main p6spy 2021-11-16 15:27:56 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-11-16 15:27:56 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-11-16 15:27:56 INFO  main p6spy 2021-11-16 15:27:56 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-11-16 15:27:56 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-11-16 15:27:56 INFO  main p6spy 2021-11-16 15:27:56 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-11-16 15:27:56 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-11-16 15:27:57 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-11-16 15:27:57 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-11-16 15:27:57 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1636997188551"'s failed in-progress jobs.
2021-11-16 15:27:57 INFO  main p6spy 2021-11-16 15:27:57 | 耗时 751 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-11-16 15:27:57 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1637047673706 started.
2021-11-16 15:28:02 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-11-16 15:28:02 INFO  main p6spy 2021-11-16 15:28:02 | 耗时 0 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-11-16 15:28:02 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-11-16 15:28:02 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-11-16 15:28:03 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-11-16 15:28:03 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-11-16 15:28:24 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-11-16 15:28:24 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-11-16 15:28:24 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-11-16 15:28:24 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-11-16 15:28:24 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-11-16 15:29:04 INFO  http-nio-8088-exec-2 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-16 15:29:04 INFO  http-nio-8088-exec-2 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-11-16 15:29:04 INFO  http-nio-8088-exec-2 org.springframework.web.servlet.DispatcherServlet Completed initialization in 22 ms
2021-11-16 15:29:04 INFO  http-nio-8088-exec-2 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-11-16 15:29:18 INFO  http-nio-8088-exec-4 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-11-16 15:29:19 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 15:29:19 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 15:29:27 INFO  http-nio-8088-exec-3 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 2 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-11-16 15:29:27 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 15:29:27 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 15:29:27 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 15:29:27 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 15:29:27 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 15:29:27 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2021-11-16T01:26:55.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2021-11-16 15:29:27 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 15:29:27 | 耗时 9 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2021-11-16T15:29:27.906+0800', 'Chrome 93', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 'admin');
2021-11-16 15:29:28 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 15:29:28 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 15:29:28 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 15:29:28 | 耗时 6 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 15:29:28 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 15:29:28 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 15:29:29 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 15:29:29 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 15:29:29 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 15:29:29 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 15:29:29 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 15:29:29 | 耗时 13 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-16 15:29:29 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 15:29:29 | 耗时 8 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-16 15:29:29 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 15:29:29 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2021-11-16T15:29:29.875+0800' WHERE (USERNAME = 'admin');
2021-11-16 15:29:29 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 15:29:29 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2021-11-16 15:29:29 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 15:29:29 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-16 15:29:29 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 15:29:29 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-16 15:29:29 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 15:29:29 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2021-11-16 15:29:29 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 15:29:29 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2021-11-16 15:29:30 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 15:29:30 | 耗时 3 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2021-11-16 15:29:30 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 15:29:30 | 耗时 3 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2021-11-16 15:29:30 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 15:29:30 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2021-11-16 15:29:35 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 15:29:35 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-16 15:29:35 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 15:29:35 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2021-11-16 15:29:35 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 15:29:35 | 耗时 3 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2021-11-16 15:31:57 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 15:31:57 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-11-16 15:32:17 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 15:32:17 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2021-11-16 15:32:18 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 15:32:17 | 耗时 14 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2021-11-16 15:35:43 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 15:35:43 | 耗时 1 ms | SQL 语句：
UPDATE t_role SET MODIFY_TIME = '2021-11-16T15:35:43.109+0800', ROLE_NAME = '系统管理员', REMARK = '系统管理员，拥有所有操作权限 ^_^' WHERE ROLE_ID = 1;
2021-11-16 15:35:43 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 15:35:43 | 耗时 2 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('1'));
2021-11-16 15:35:43 INFO  Febs-Async-Thread1 p6spy 2021-11-16 15:35:43 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.RoleController.updateRole()', '2021-11-16T15:35:43.290+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 178, ' role: "Role(roleId=1, roleName=系统管理员, remark=系统管理员，拥有所有操作权限 ^_^, createTime=null, modifyTime=Tue Nov 16 15:35:43 CST 2021, menuIds=1,3,11,12,13,286,160,161,4,14,15,16,162,5,17,18,19,163,6,20,21,22,164,176,177,178,179,180,181,288,289,182,183,184,185,365,366,367,368,369,370,371,374,186,195,257,287,320,380,381,390,393,394,187,188,189,190,191,205,219,196,197,198,199,294,295,306,372,192,193,258,263,303,316,318,329,338,340,341,342,359,389,391,392,200,201,202,203,211,206,305,360,361,362,207,208,209,210,220,221,222,231,194,262,227,228,229,296,373,375,376,377,378,379,259,260,347,382,383,261,346,384,385,387,388,300,301,302,314,325,345,213,246,279,315,354,247,280,285,298,304,317,363,364,248,281,254,256,255,242,243,244,245,274,275,276,277,290,291,292,355,356,357,348,349,350,351,358,212,214,297,339,343,352,353,386,223,224,225,226,215,216,217,218,249,250,251,252,253,307,308,309,310,311,312,313,337,344,264,278,265,266,293,330,326,331,327,335,328,336,299,332,319,333,321,334,267,268,271,282,269,272,283,270,273,284,322,323,324,2,8,23,10,24,170,136,171,172,127,128,129,131,175,101,102,103,104,105,106,107,108,173,109,110,174,137,138,165,139,166,115,132,133,135,134,126,159,116,117,119,120,121,122,123,118,125,167,168,169)"', '修改角色', 'admin');
2021-11-16 15:35:43 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 15:35:43 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 15:35:43 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 15:35:43 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 15:35:53 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 15:35:53 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2021-11-16 15:35:53 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 15:35:53 | 耗时 2 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2021-11-16 16:10:06 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-16 16:10:06 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1637047673706 paused.
2021-11-16 16:10:06 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-16 16:10:06 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-16 16:10:06 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1637047673706 shutting down.
2021-11-16 16:10:06 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1637047673706 paused.
2021-11-16 16:10:06 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1637047673706 shutdown complete.
2021-11-16 16:10:06 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-16 16:10:06 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-16 16:10:06 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-16 16:10:06 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-16 16:10:06 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-16 16:10:06 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2021-11-16 19:34:04 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 12376 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-11-16 19:34:04 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-11-16 19:34:10 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-16 19:34:10 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-16 19:34:11 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 1351ms. Found 0 repository interfaces.
2021-11-16 19:34:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$4086aa2f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$fb48727a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$ba125567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$cc9bc9eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$14c0a5f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:14 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-16 19:34:14 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-16 19:34:14 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-16 19:34:14 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-16 19:34:14 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-16 19:34:14 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-16 19:34:14 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-16 19:34:14 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-16 19:34:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-16 19:34:24 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-11-16 19:34:24 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-11-16 19:34:24 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-16 19:34:24 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-16 19:34:25 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-16 19:34:25 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 19981 ms
2021-11-16 19:34:26 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-16 19:34:31 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-16 19:34:31 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-16 19:34:31 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-16 19:34:31 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-11-16 19:34:31 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-11-16 19:34:31 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1637062471627'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-11-16 19:34:31 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-11-16 19:34:31 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-16 19:34:31 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1f5f4d48
2021-11-16 19:34:32 INFO  main p6spy 2021-11-16 19:34:32 | 耗时 3 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-11-16 19:34:35 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-16 19:34:35 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-16 19:34:35 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-16 19:34:35 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-16 19:34:36 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-16 19:34:38 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-16 19:34:38 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-16 19:34:38 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-16 19:34:38 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-11-16 19:34:39 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-11-16 19:34:39 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-11-16 19:34:39 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 35.346 seconds (JVM running for 40.064)
2021-11-16 19:34:39 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-11-16 19:34:39 INFO  main p6spy 2021-11-16 19:34:39 | 耗时 2 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-11-16 19:34:39 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-11-16 19:34:39 INFO  main p6spy 2021-11-16 19:34:39 | 耗时 5 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-11-16 19:34:39 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-11-16 19:34:39 INFO  main p6spy 2021-11-16 19:34:39 | 耗时 2 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-11-16 19:34:39 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-11-16 19:34:39 INFO  main p6spy 2021-11-16 19:34:39 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-11-16 19:34:39 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-11-16 19:34:39 INFO  main p6spy 2021-11-16 19:34:39 | 耗时 2 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-11-16 19:34:39 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-11-16 19:34:39 INFO  main p6spy 2021-11-16 19:34:39 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-11-16 19:34:39 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-11-16 19:34:39 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-11-16 19:34:40 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-11-16 19:34:40 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1637047673706"'s failed in-progress jobs.
2021-11-16 19:34:40 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1637062471627 started.
2021-11-16 19:34:42 INFO  main p6spy 2021-11-16 19:34:42 | 耗时 2884 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-11-16 19:34:51 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-11-16 19:34:51 INFO  main p6spy 2021-11-16 19:34:51 | 耗时 1 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-11-16 19:34:51 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-11-16 19:34:51 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-11-16 19:34:52 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-11-16 19:34:52 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-11-16 19:35:22 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-11-16 19:35:22 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-11-16 19:35:22 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-11-16 19:35:22 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-11-16 19:35:22 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-11-16 19:35:40 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-16 19:35:40 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-11-16 19:35:40 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 32 ms
2021-11-16 19:35:40 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-11-16 19:35:57 INFO  http-nio-8088-exec-4 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-11-16 19:35:57 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:35:57 | 耗时 11 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 19:35:57 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:35:57 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 19:35:57 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:35:57 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2021-11-16T15:29:30.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2021-11-16 19:35:57 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:35:57 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2021-11-16T19:35:57.523+0800', 'Chrome 93', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 'admin');
2021-11-16 19:35:57 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 19:35:57 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 19:35:57 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 19:35:57 | 耗时 11 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 19:35:57 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 19:35:57 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 19:35:59 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 19:35:59 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-11-16 19:35:59 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 19:35:59 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-16 19:35:59 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 19:35:59 | 耗时 6 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-11-16 19:35:59 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 19:35:59 | 耗时 66 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-11-16 19:35:59 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 19:35:59 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2021-11-16T19:35:59.837+0800' WHERE (USERNAME = 'admin');
2021-11-16 19:35:59 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 19:35:59 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2021-11-16 19:35:59 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 19:35:59 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-16 19:35:59 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 19:35:59 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-11-16 19:35:59 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 19:35:59 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2021-11-16 19:35:59 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 19:35:59 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2021-11-16 19:36:00 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 19:36:00 | 耗时 4 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2021-11-16 19:36:00 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 19:36:00 | 耗时 2 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2021-11-16 19:36:00 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:36:00 | 耗时 2 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2021-11-16 19:36:02 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 19:36:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2021-11-16 19:36:02 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 19:36:02 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2021-11-16 19:36:02 INFO  Febs-Async-Thread1 p6spy 2021-11-16 19:36:02 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-16T19:36:02.299+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 188, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=null, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=null, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2021-11-16 19:36:04 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 19:36:04 | 耗时 2 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-16 19:36:09 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 19:36:09 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 19:36:09 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 19:36:09 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 19:36:09 INFO  Febs-Async-Thread2 p6spy 2021-11-16 19:36:09 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T19:36:09.979+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 59, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-16 19:36:11 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 19:36:11 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 19:36:11 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 19:36:11 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-16 19:36:11 INFO  Febs-Async-Thread3 p6spy 2021-11-16 19:36:11 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T19:36:11.537+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 27, ' request: "QueryRequest(pageSize=10, pageNum=2, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-11-16 19:36:14 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 19:36:14 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2021-11-16 19:36:14 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 19:36:14 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 19:36:21 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 19:36:21 | 耗时 1 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 19:36:21 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 19:36:21 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 19:36:21 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 19:36:21 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-16 19:36:21 INFO  Febs-Async-Thread4 p6spy 2021-11-16 19:36:21 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-16T19:36:21.648+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 35, ' organizationCosts: "[OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=50, state=1, channelId=, operator=, description=null, remark=null, createDate=null), OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=60, state=1, channelId=, operator=CMCC, description=null, remark=null, createDate=null), OrganizationCost(id=null, organizationCode=20200331160443FKDW, smsType=null, costName=, costValue=NaN, state=, channelId=, operator=, description=null, remark=null, createDate=null)]"', '商户用户资费更新', 'admin');
2021-11-16 19:36:28 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 19:36:28 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-16 19:36:30 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 19:36:30 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-16 19:36:40 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:36:40 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 35;
2021-11-16 19:36:40 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:36:40 | 耗时 1 ms | SQL 语句：
DELETE FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-16 19:36:40 INFO  Febs-Async-Thread5 p6spy 2021-11-16 19:36:40 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateAgentCosts()', '2021-11-16T19:36:40.700+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 62, ' agentCosts: "[AgentCost(id=217, agentId=35, smsType=1, name=+86, value=50, channelId=, operator=, description=, remark=admin添加, createDate=Tue Nov 16 19:36:40 CST 2021), AgentCost(id=218, agentId=35, smsType=1, name=+86, value=60, channelId=, operator=CMCC, description=, remark=admin添加, createDate=Tue Nov 16 19:36:40 CST 2021), AgentCost(id=219, agentId=35, smsType=1, name=+86, value=70, channelId=, operator=CTCC, description=, remark=admin添加, createDate=Tue Nov 16 19:36:40 CST 2021)]"', '代理资费修改', 'admin');
2021-11-16 19:36:42 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 19:36:42 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-16 19:37:00 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 19:37:00 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 36;
2021-11-16 19:37:00 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 19:37:00 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-16 19:37:00 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 19:37:00 | 耗时 1 ms | SQL 语句：
DELETE FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-16 19:37:00 INFO  Febs-Async-Thread1 p6spy 2021-11-16 19:37:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateAgentCosts()', '2021-11-16T19:37:00.744+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 33, ' agentCosts: "[AgentCost(id=220, agentId=36, smsType=1, name=+86, value=50, channelId=, operator=, description=, remark=admin添加, createDate=Tue Nov 16 19:37:00 CST 2021), AgentCost(id=221, agentId=36, smsType=1, name=+86, value=60, channelId=, operator=CMCC, description=, remark=admin添加, createDate=Tue Nov 16 19:37:00 CST 2021)]"', '代理资费修改', 'admin');
2021-11-16 19:37:04 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 19:37:04 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2021-11-16 19:37:04 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 19:37:04 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 19:37:10 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 19:37:10 | 耗时 1 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 19:37:10 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 19:37:10 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2021-11-16 19:37:10 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 19:37:10 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-16 19:37:10 INFO  Febs-Async-Thread2 p6spy 2021-11-16 19:37:10 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-16T19:37:10.878+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 23, ' organizationCosts: "[OrganizationCost(id=218, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=50, state=1, channelId=, operator=, description=, remark=admin添加, createDate=Tue Nov 16 19:37:10 CST 2021), OrganizationCost(id=219, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=60, state=1, channelId=, operator=CMCC, description=, remark=admin添加, createDate=Tue Nov 16 19:37:10 CST 2021)]"', '商户用户资费更新', 'admin');
2021-11-16 19:37:56 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 19:37:56 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1);
2021-11-16 19:37:56 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 19:37:56 | 耗时 3 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:37:59 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 19:37:59 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2021-11-16 19:37:59 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 19:37:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800');
2021-11-16 19:38:43 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 19:38:43 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-16 19:38:52 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 19:38:52 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 35;
2021-11-16 19:38:52 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 19:38:52 | 耗时 2 ms | SQL 语句：
DELETE FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-16 19:38:52 INFO  Febs-Async-Thread3 p6spy 2021-11-16 19:38:52 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateAgentCosts()', '2021-11-16T19:38:52.252+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 27, ' agentCosts: "[AgentCost(id=222, agentId=35, smsType=1, name=+86, value=50, channelId=, operator=, description=, remark=admin添加, createDate=Tue Nov 16 19:38:52 CST 2021), AgentCost(id=223, agentId=35, smsType=1, name=+86, value=60, channelId=, operator=CMCC, description=, remark=admin添加, createDate=Tue Nov 16 19:38:52 CST 2021)]"', '代理资费修改', 'admin');
2021-11-16 19:38:53 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 19:38:53 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-16 19:39:27 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 19:39:27 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1);
2021-11-16 19:39:27 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 19:39:27 | 耗时 3 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:39:29 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:39:29 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800');
2021-11-16 19:39:29 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:39:29 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:40:14 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 19:40:14 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 43);
2021-11-16 19:40:32 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 19:40:32 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '97';
2021-11-16 19:40:37 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 19:40:37 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = 97;
2021-11-16 19:40:37 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 19:40:37 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Name = 'testorg' AND Id <> 97);
2021-11-16 19:40:37 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 19:40:37 | 耗时 9 ms | SQL 语句：
UPDATE t_organization SET Sms_Approve_type = '0', Description = '', interface_type = 1, Contact = '', Sms_Sign = '', EMail = '', Contact_Mobile = '', Address = '', Organization_Name = 'testorg', Business_User_Id = 0, Data_MD5 = '528D89399AB17CA8BEC8B326BFEEC602', Bind_IP = '', Web_Url = '', notify_url = '' WHERE Id = 97;
2021-11-16 19:40:57 INFO  Febs-Async-Thread4 p6spy 2021-11-16 19:40:57 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.updateOrganization()', '2021-11-16T19:40:57.918+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 20067, ' organization: "Organization(id=97, agentId=35, businessUserId=null, organizationName=testorg, organizationCode=20200826164014MWDR, contact=, contactMobile=, email=, address=, webUrl=, amount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, status=null, approveStateCode=null, smsSign=, chargesType=null, settlementType=null, smsApproveType=0, interfaceType=1, md5Key=null, bindIp=, notifyUrl=, dataMd5=null, description=, remark=null, createUser=null, createDate=null)"', '商户更新', 'admin');
2021-11-16 19:42:28 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 19:42:28 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 19:42:28 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 19:42:28 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 19:42:28 INFO  Febs-Async-Thread5 p6spy 2021-11-16 19:42:28 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T19:42:28.520+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 20, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 19:42:30 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 19:42:30 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 19:42:30 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 19:42:30 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-16 19:42:30 INFO  Febs-Async-Thread1 p6spy 2021-11-16 19:42:30 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T19:42:30.150+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 23, ' request: "QueryRequest(pageSize=10, pageNum=2, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 19:42:34 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 19:42:34 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-16 19:42:40 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 19:42:40 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '97';
2021-11-16 19:42:40 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 19:42:40 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:42:57 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:42:57 | 耗时 1 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:42:57 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:42:57 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:42:57 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:42:57 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-16 19:42:57 INFO  Febs-Async-Thread2 p6spy 2021-11-16 19:42:57 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-16T19:42:57.117+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 50, ' organizationCosts: "[OrganizationCost(id=220, organizationCode=20200826164014MWDR, smsType=1, costName=+86, costValue=50, state=1, channelId=, operator=, description=, remark=admin添加, createDate=Tue Nov 16 19:42:57 CST 2021), OrganizationCost(id=221, organizationCode=20200826164014MWDR, smsType=1, costName=+86, costValue=60, state=1, channelId=, operator=CMCC, description=, remark=admin添加, createDate=Tue Nov 16 19:42:57 CST 2021)]"', '商户用户资费更新', 'admin');
2021-11-16 19:43:01 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 19:43:01 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '97';
2021-11-16 19:43:14 INFO  http-nio-8088-exec-2 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_organizationRechargeOrder169.254.130.216]，描述为 [商户充值] 的接口
2021-11-16 19:43:14 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 19:43:14 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-11-16 19:43:14 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 19:43:14 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR') FOR UPDATE;
2021-11-16 19:43:14 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 19:43:14 | 耗时 2 ms | SQL 语句：
INSERT INTO t_organization_recharge_order (order_no, ceate_user, recharge_time, recorded_type, remark, req_time, recharge_state_code, recharge_complete_time, available_amount, recharge_amount, netway_code, pay_merch_no, create_time, organization_code, req_state_code, recharge_type, pay_channel_id) VALUES ('20211116194314fxGPfw', 'admin', '2021-11-16 19:43:14', '0', '', '2021-11-16 19:43:14', '00', '2021-11-16 19:43:14', 10000, 10000, 'UNION', '', '2021-11-16T19:43:14.680+0800', '20200826164014MWDR', '00', 'platformRecharge', '');
2021-11-16 19:43:14 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 19:43:14 | 耗时 1 ms | SQL 语句：
UPDATE t_organization SET Agent_Id = 35, Sms_Approve_type = '0', Cash_Amount = 0, Description = '', interface_type = 1, Available_Amount = 10000, Contact = '', Md5_Key = 'ITCVGZTYVPFZHEKVWTNEMZWZKWJNOBHK', Sms_Sign = '', EMail = '', Create_Date = '2020-08-26T16:40:14.000+0800', Settlement_type = '0', Contact_Mobile = '', Amount = 10000, Address = '', Organization_Name = 'testorg', charges_type = '0', Business_User_Id = 0, Data_MD5 = 'CBE35285177E745D9CA334E3F75CCD77', Bind_IP = '', Approve_State_Code = '2', Organization_Code = '20200826164014MWDR', Web_Url = '', Send_Sms_Total = 0, Create_User = 'testagent', Status = '1' WHERE Id = 97;
2021-11-16 19:43:14 INFO  Febs-Async-Thread3 p6spy 2021-11-16 19:43:14 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.rechargeOrder.OrganizationRechargeOrderController.addOrganizationRechargeOrder()', '2021-11-16T19:43:14.701+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 54, ' organizationRechargeOrder: OrganizationRechargeOrder(id=184, organizationCode=20200826164014MWDR, orderNo=20211116194314fxGPfw, payChannelId=, payMerchNo=, rechargeType=platformRecharge, netwayCode=UNION, rechargePictureUrl=null, rechargeAmount=10000, availableAmount=10000, reqStateCode=00, reqTime=2021-11-16 19:43:14, reqStateDescription=null, rechargeStateCode=00, rechargeTime=2021-11-16 19:43:14, rechargeCompleteTime=2021-11-16 19:43:14, remark=, ceateUser=admin, createTime=Tue Nov 16 19:43:14 CST 2021, recordedType=0) verifyCode: "204387" sessionToken: "119498749c0de8b2d5c181a642304ef0" request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@35a6fa0f', '商户充值订单新增', 'admin');
2021-11-16 19:43:15 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 19:43:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 19:43:15 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 19:43:15 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-11-16 19:43:15 INFO  Febs-Async-Thread4 p6spy 2021-11-16 19:43:15 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T19:43:15.851+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 15, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 19:43:17 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 19:43:17 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-11-16 19:43:17 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 19:43:17 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-11-16 19:43:17 INFO  Febs-Async-Thread5 p6spy 2021-11-16 19:43:17 | 耗时 7 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-16T19:43:17.312+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 28, ' request: "QueryRequest(pageSize=10, pageNum=2, field=createTime, order=)" organization: "OrganizationQuery(groupId=)"', '商户列表', 'admin');
2021-11-16 19:43:21 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 19:43:21 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '97';
2021-11-16 19:43:21 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 19:43:21 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826164014MWDR');
2021-11-16 19:43:30 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 19:43:30 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization_user;
2021-11-16 19:43:30 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 19:43:30 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user ORDER BY Id DESC LIMIT 0,10;
2021-11-16 19:43:30 INFO  Febs-Async-Thread1 p6spy 2021-11-16 19:43:30 | 耗时 8 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationUserController.organizationUserList()', '2021-11-16T19:43:30.181+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 23, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organizationUser: "OrganizationUser(id=null, organizationCode=null, userName=null, userAccount=null, userPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, status=null, accountType=null, googleKey=null, needBindGoogleKey=null, loginIp=null, description=null, remark=null, createUser=null, createDate=null)"', '商户用户列表', 'admin');
2021-11-16 19:43:32 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:43:32 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization_user;
2021-11-16 19:43:32 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:43:32 | 耗时 0 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user ORDER BY Id DESC LIMIT 20,10;
2021-11-16 19:43:32 INFO  Febs-Async-Thread2 p6spy 2021-11-16 19:43:32 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationUserController.organizationUserList()', '2021-11-16T19:43:32.471+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 6, ' request: "QueryRequest(pageSize=10, pageNum=3, field=null, order=null)" organizationUser: "OrganizationUser(id=null, organizationCode=null, userName=null, userAccount=null, userPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, status=null, accountType=null, googleKey=null, needBindGoogleKey=null, loginIp=null, description=null, remark=null, createUser=null, createDate=null)"', '商户用户列表', 'admin');
2021-11-16 19:43:42 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 19:43:42 | 耗时 2 ms | SQL 语句：
UPDATE t_organization_user SET User_Password = '728c2ad63099c075d756bcd382c31e90' WHERE (User_Account = 'testorg');
2021-11-16 19:43:42 INFO  Febs-Async-Thread3 p6spy 2021-11-16 19:43:42 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationUserController.resetPassword()', '2021-11-16T19:43:42.935+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 34, ' userAccounts: "testorg"', '重置用户密码', 'admin');
2021-11-16 19:43:43 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 19:43:43 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization_user;
2021-11-16 19:43:43 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 19:43:43 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user ORDER BY Id DESC LIMIT 0,10;
2021-11-16 19:43:43 INFO  Febs-Async-Thread4 p6spy 2021-11-16 19:43:43 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationUserController.organizationUserList()', '2021-11-16T19:43:43.019+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 16, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organizationUser: "OrganizationUser(id=null, organizationCode=, userName=, userAccount=, userPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, status=, accountType=null, googleKey=null, needBindGoogleKey=null, loginIp=null, description=null, remark=null, createUser=null, createDate=null)"', '商户用户列表', 'admin');
2021-11-16 19:45:19 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 19:45:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1);
2021-11-16 19:45:19 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 19:45:19 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:45:19 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 19:45:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1);
2021-11-16 19:45:19 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 19:45:19 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:45:20 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 19:45:20 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1);
2021-11-16 19:45:20 INFO  http-nio-8088-exec-1 p6spy 2021-11-16 19:45:20 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:45:20 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 19:45:20 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1);
2021-11-16 19:45:20 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 19:45:20 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:45:22 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 19:45:22 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1);
2021-11-16 19:45:22 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 19:45:22 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:45:22 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:45:22 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1);
2021-11-16 19:45:22 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:45:22 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:45:23 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 19:45:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (audit_state = 1);
2021-11-16 19:45:23 INFO  http-nio-8088-exec-2 p6spy 2021-11-16 19:45:23 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (audit_state = 1) ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:45:29 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 19:45:29 | 耗时 3 ms | SQL 语句：
UPDATE t_send_box SET audit_state = 2 WHERE (id IN ('16984'));
2021-11-16 19:45:29 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 19:45:29 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, sms_numbers, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (id IN (16984) AND timing_time IS NULL) ORDER BY create_time DESC;
2021-11-16 19:45:29 INFO  Febs-Async-Thread1 p6spy 2021-11-16 19:45:29 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxController.auditSendBox()', '2021-11-16T19:45:29.022+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 28, ' stateTag: "pass" sendBoxIds: "16984" refuseCause: ""', '批量审核发件箱', 'admin');
2021-11-16 19:45:29 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 19:45:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (audit_state = 1);
2021-11-16 19:45:29 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 19:45:29 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (audit_state = 1) ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:45:31 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 19:45:31 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1);
2021-11-16 19:45:31 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 19:45:31 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:45:35 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 19:45:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800');
2021-11-16 19:45:35 INFO  http-nio-8088-exec-7 p6spy 2021-11-16 19:45:35 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:47:15 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 19:47:15 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (audit_state = 1);
2021-11-16 19:47:15 INFO  http-nio-8088-exec-3 p6spy 2021-11-16 19:47:15 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (audit_state = 1) ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:47:18 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 19:47:18 | 耗时 11 ms | SQL 语句：
UPDATE t_send_box SET audit_state = 2 WHERE (id IN ('16985'));
2021-11-16 19:47:18 INFO  http-nio-8088-exec-10 p6spy 2021-11-16 19:47:18 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, sms_numbers, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (id IN (16985) AND timing_time IS NULL) ORDER BY create_time DESC;
2021-11-16 19:47:18 INFO  Febs-Async-Thread3 p6spy 2021-11-16 19:47:18 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxController.auditSendBox()', '2021-11-16T19:47:18.234+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 22, ' stateTag: "pass" sendBoxIds: "16985" refuseCause: ""', '批量审核发件箱', 'admin');
2021-11-16 19:47:18 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:47:18 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (audit_state = 1);
2021-11-16 19:47:18 INFO  http-nio-8088-exec-4 p6spy 2021-11-16 19:47:18 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (audit_state = 1) ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:47:29 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 19:47:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800');
2021-11-16 19:47:29 INFO  http-nio-8088-exec-8 p6spy 2021-11-16 19:47:29 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2021-11-16T00:00:00.000+0800' AND create_time <= '2021-11-16T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:48:32 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 19:48:32 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (audit_state = 1);
2021-11-16 19:48:32 INFO  http-nio-8088-exec-5 p6spy 2021-11-16 19:48:32 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (audit_state = 1) ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:48:35 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 19:48:35 | 耗时 4 ms | SQL 语句：
UPDATE t_send_box SET audit_state = 2 WHERE (id IN ('16986'));
2021-11-16 19:48:35 INFO  http-nio-8088-exec-9 p6spy 2021-11-16 19:48:35 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, sms_numbers, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (id IN (16986) AND timing_time IS NULL) ORDER BY create_time DESC;
2021-11-16 19:48:35 INFO  Febs-Async-Thread1 p6spy 2021-11-16 19:48:35 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxController.auditSendBox()', '2021-11-16T19:48:35.228+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 23, ' stateTag: "pass" sendBoxIds: "16986" refuseCause: ""', '批量审核发件箱', 'admin');
2021-11-16 19:48:35 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 19:48:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (audit_state = 1);
2021-11-16 19:48:35 INFO  http-nio-8088-exec-6 p6spy 2021-11-16 19:48:35 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (audit_state = 1) ORDER BY create_time DESC LIMIT 0,10;
2021-11-16 19:50:34 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-16 19:50:34 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1637062471627 paused.
2021-11-16 19:50:34 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-16 19:50:34 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-16 19:50:34 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1637062471627 shutting down.
2021-11-16 19:50:34 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1637062471627 paused.
2021-11-16 19:50:34 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1637062471627 shutdown complete.
2021-11-16 19:50:34 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-16 19:50:34 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-16 19:50:34 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-16 19:50:34 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-16 19:50:34 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-16 19:50:34 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
