2022-05-09 11:49:49 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 78720 (C:\work\workspaceSmsBfSvn\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBfSvn\sms\sms-admin)
2022-05-09 11:49:49 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2022-05-09 11:49:52 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-05-09 11:49:52 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-05-09 11:49:53 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 723ms. Found 0 repository interfaces.
2022-05-09 11:49:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9dae8771] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$58704fbc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$173a32a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$29c3a72d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$71e8833a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:54 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-05-09 11:49:54 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-05-09 11:49:54 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2022-05-09 11:49:54 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2022-05-09 11:49:54 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2022-05-09 11:49:54 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2022-05-09 11:49:54 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2022-05-09 11:49:54 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2022-05-09 11:49:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 11:49:59 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2022-05-09 11:49:59 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2022-05-09 11:49:59 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-05-09 11:49:59 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2022-05-09 11:49:59 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-05-09 11:49:59 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 10062 ms
2022-05-09 11:50:00 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2022-05-09 11:50:03 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2022-05-09 11:50:04 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-05-09 11:50:04 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2022-05-09 11:50:04 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2022-05-09 11:50:04 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2022-05-09 11:50:04 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1652068203986'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-05-09 11:50:04 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2022-05-09 11:50:04 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2022-05-09 11:50:04 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1dbfbd94
2022-05-09 11:50:04 INFO  main p6spy 2022-05-09 11:50:04 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2022-05-09 11:50:05 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2022-05-09 11:50:05 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-05-09 11:50:05 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2022-05-09 11:50:05 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2022-05-09 11:50:06 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2022-05-09 11:50:06 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2022-05-09 11:50:06 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2022-05-09 11:50:06 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2022-05-09 11:50:06 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2022-05-09 11:50:07 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2022-05-09 11:50:07 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2022-05-09 11:50:07 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 18.247 seconds (JVM running for 20.419)
2022-05-09 11:50:07 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2022-05-09 11:50:07 INFO  main p6spy 2022-05-09 11:50:07 | 耗时 8 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-05-09 11:50:07 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2022-05-09 11:50:07 INFO  main p6spy 2022-05-09 11:50:07 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2022-05-09 11:50:07 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2022-05-09 11:50:07 INFO  main p6spy 2022-05-09 11:50:07 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2022-05-09 11:50:07 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2022-05-09 11:50:07 INFO  main p6spy 2022-05-09 11:50:07 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-05-09 11:50:07 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2022-05-09 11:50:07 INFO  main p6spy 2022-05-09 11:50:07 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2022-05-09 11:50:07 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2022-05-09 11:50:07 INFO  main p6spy 2022-05-09 11:50:07 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2022-05-09 11:50:07 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2022-05-09 11:50:07 INFO  main p6spy 2022-05-09 11:50:07 | 耗时 1 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2022-05-09 11:50:07 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2022-05-09 11:50:07 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-05-09 11:50:07 INFO  main p6spy 2022-05-09 11:50:07 | 耗时 1 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-05-09 11:50:07 INFO  main com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-05-09 11:50:07 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2022-05-09 11:50:07 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2022-05-09 11:50:07 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-05-09 11:50:07 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2022-05-09 11:50:08 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2022-05-09 11:50:08 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1652020041752"'s failed in-progress jobs.
2022-05-09 11:50:08 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652068203986 started.
2022-05-09 11:50:15 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2022-05-09 11:50:15 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-05-09 11:50:15 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-05-09 11:50:15 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2022-05-09 11:50:15 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://192.168.189.1:8088/login
2022-05-09 11:59:15 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-05-09 11:59:15 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-05-09 11:59:15 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 15 ms
2022-05-09 11:59:15 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2022-05-09 11:59:35 INFO  http-nio-8088-exec-6 com.hero.sms.common.aspect.LimitAspect IP:192.168.189.1 第 1 次访问key为 [limit_login192.168.189.1]，描述为 [登录接口] 的接口
2022-05-09 11:59:35 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 11:59:35 | 耗时 12 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 11:59:42 INFO  http-nio-8088-exec-5 com.hero.sms.common.aspect.LimitAspect IP:192.168.189.1 第 2 次访问key为 [limit_login192.168.189.1]，描述为 [登录接口] 的接口
2022-05-09 11:59:42 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 11:59:42 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 11:59:42 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 11:59:42 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 11:59:42 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 11:59:42 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2022-05-08T22:28:29.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2022-05-09 11:59:43 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 11:59:43 | 耗时 8 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2022-05-09T11:59:43.043+0800', 'Chrome 10', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 'admin');
2022-05-09 11:59:43 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 11:59:43 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-09 11:59:43 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 11:59:43 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-09 11:59:43 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 11:59:43 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 11:59:44 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 11:59:44 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-09 11:59:44 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 11:59:44 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-09 11:59:44 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 11:59:44 | 耗时 5 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-05-09 11:59:44 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 11:59:44 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-05-09 11:59:44 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 11:59:44 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2022-05-09T11:59:44.717+0800' WHERE (USERNAME = 'admin');
2022-05-09 11:59:44 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 11:59:44 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2022-05-09 11:59:44 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 11:59:44 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-05-09 11:59:44 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 11:59:44 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-05-09 11:59:44 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 11:59:44 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2022-05-09 11:59:44 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 11:59:44 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2022-05-09 11:59:45 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 11:59:45 | 耗时 16 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2022-05-09 11:59:45 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 11:59:45 | 耗时 62 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2022-05-09 11:59:45 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 11:59:45 | 耗时 73 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2022-05-09 12:02:59 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 12:02:59 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-05-09 12:02:59 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 12:02:59 | 耗时 10 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-09T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800');
2022-05-09 12:06:32 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 12:06:32 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-05-09T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800' AND audit_state <> 1);
2022-05-09 12:06:35 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 12:06:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (send_code = 'BNF210915230719BLNH' AND create_time >= '2022-05-09T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800' AND audit_state <> 1);
2022-05-09 12:06:39 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 12:06:39 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (send_code = 'BNF210915230719BLNH' AND create_time >= '2022-05-01T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800' AND audit_state <> 1);
2022-05-09 12:06:48 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 12:06:48 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-01T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800');
2022-05-09 12:06:48 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 12:06:48 | 耗时 85 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-01T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-09 12:06:52 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 12:06:52 | 耗时 38 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-01T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800' AND res_msgid = 'BNF210915230719BLNH');
2022-05-09 12:07:04 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 12:07:04 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2019-05-01T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800' AND res_msgid = 'BNF210915230719BLNH');
2022-05-09 12:07:49 INFO  http-nio-8088-exec-8 p6spy 2022-05-09 12:07:49 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (send_code = 'BNF210915230719BLNH' AND create_time >= '2019-05-01T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800');
2022-05-09 12:07:55 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 12:07:55 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (send_code = 'BNF210915230719BLNH' AND create_time >= '2018-05-01T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800' AND audit_state <> 1);
2022-05-09 12:08:17 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 12:08:17 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2022-05-09 12:08:17 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 12:08:17 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2022-05-09 12:08:17 INFO  Febs-Async-Thread1 p6spy 2022-05-09 12:08:17 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2022-05-09T12:08:17.644+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 54, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2022-05-09 12:08:20 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 12:08:20 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2022-05-09 12:08:20 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 12:08:20 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,30;
2022-05-09 12:08:20 INFO  Febs-Async-Thread2 p6spy 2022-05-09 12:08:20 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2022-05-09T12:08:20.798+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 17, ' request: "QueryRequest(pageSize=30, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2022-05-09 12:24:07 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 12:24:07 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (send_code = 'BNF210915230719BLNH' AND create_time >= '2019-05-01T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800');
2022-05-09 12:24:09 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 12:24:09 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-05-09 12:24:09 INFO  http-nio-8088-exec-8 p6spy 2022-05-09 12:24:09 | 耗时 16 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-09T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800');
2022-05-09 12:24:09 INFO  http-nio-8088-exec-8 p6spy 2022-05-09 12:24:09 | 耗时 88 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-09T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-09 12:24:13 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 12:24:13 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (state IN (2, 8) AND id IN ('140144'));
2022-05-09 12:24:13 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 12:24:13 | 耗时 6 ms | SQL 语句：
UPDATE t_send_record_checkinfo tsrc, t_send_record tsr SET tsrc.state = '0509122413' WHERE tsrc.state = 1 AND tsrc.send_code = tsr.send_code AND tsrc.sms_number = tsr.sms_number AND tsr.Id IN (140144);
2022-05-09 12:24:13 INFO  Febs-Async-Thread3 p6spy 2022-05-09 12:24:13 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.forceUnLock()', '2022-05-09T12:24:13.165+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 51, ' sendRecordIds: "140144"', '批量强制解锁SendRecord', 'admin');
2022-05-09 12:24:15 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 12:24:15 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (state IN (2, 8) AND id IN ('140144') AND res_msgid IS NULL);
2022-05-09 12:24:15 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 12:24:15 | 耗时 0 ms | SQL 语句：
UPDATE t_send_record_checkinfo tsrc, t_send_record tsr SET tsrc.state = '0' WHERE tsrc.state = 1 AND tsrc.send_code = tsr.send_code AND tsrc.sms_number = tsr.sms_number AND tsr.Id IN (140144);
2022-05-09 12:24:15 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 12:24:15 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-05-09 12:24:15 INFO  Febs-Async-Thread4 p6spy 2022-05-09 12:24:15 | 耗时 11 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.forceReSend()', '2022-05-09T12:24:15.938+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 881, ' sendRecordIds: "140144"', '批量强制重发SendRecord', 'admin');
2022-05-09 12:59:15 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-05-09 12:59:15 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-05-09 13:00:44 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 13:00:44 | 耗时 10 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-09 13:00:44 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 13:00:44 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-09 13:00:44 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 13:00:44 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-05-09 13:59:15 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-05-09 13:59:15 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-05-09 14:59:15 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-05-09 14:59:15 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-05-09 15:59:15 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-05-09 15:59:15 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-05-09 16:31:22 INFO  http-nio-8088-exec-9 com.hero.sms.common.aspect.LimitAspect IP:192.168.189.1 第 1 次访问key为 [limit_login192.168.189.1]，描述为 [登录接口] 的接口
2022-05-09 16:31:22 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 16:31:22 | 耗时 17 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 16:31:22 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 16:31:22 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 16:31:22 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 16:31:22 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2022-05-09T11:59:45.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2022-05-09 16:31:22 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 16:31:22 | 耗时 10 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2022-05-09T16:31:22.579+0800', 'Chrome 10', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 'admin');
2022-05-09 16:31:22 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 16:31:22 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-09 16:31:22 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 16:31:22 | 耗时 58 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-09 16:31:22 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 16:31:22 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 16:31:23 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 16:31:23 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-09 16:31:23 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 16:31:23 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-09 16:31:24 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 16:31:24 | 耗时 2 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-05-09 16:31:24 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 16:31:24 | 耗时 5 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-05-09 16:31:24 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 16:31:24 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2022-05-09T16:31:24.335+0800' WHERE (USERNAME = 'admin');
2022-05-09 16:31:24 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 16:31:24 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2022-05-09 16:31:24 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 16:31:24 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-05-09 16:31:24 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 16:31:24 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-05-09 16:31:24 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 16:31:24 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2022-05-09 16:31:24 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 16:31:24 | 耗时 3 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2022-05-09 16:31:24 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 16:31:24 | 耗时 28 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2022-05-09 16:31:24 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 16:31:24 | 耗时 85 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2022-05-09 16:31:24 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 16:31:24 | 耗时 102 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2022-05-09 16:31:31 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 16:31:31 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-05-09 16:31:31 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 16:31:31 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-09T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800');
2022-05-09 16:31:31 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 16:31:31 | 耗时 37 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-09T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-09 16:33:39 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 16:33:39 | 耗时 17 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-09 16:33:39 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 16:33:39 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 16:33:42 INFO  http-nio-8088-exec-8 p6spy 2022-05-09 16:33:42 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE id = 13;
2022-05-09 16:39:36 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2022-05-09 16:39:36 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652068203986 paused.
2022-05-09 16:39:36 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2022-05-09 16:39:36 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2022-05-09 16:39:36 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652068203986 shutting down.
2022-05-09 16:39:36 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652068203986 paused.
2022-05-09 16:39:36 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652068203986 shutdown complete.
2022-05-09 16:39:36 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2022-05-09 16:39:36 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2022-05-09 16:39:36 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2022-05-09 16:39:36 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2022-05-09 16:39:36 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2022-05-09 16:39:36 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2022-05-09 18:43:28 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 81576 (C:\work\workspaceSmsBfSvn\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBfSvn\sms\sms-admin)
2022-05-09 18:43:28 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2022-05-09 18:43:31 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-05-09 18:43:31 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-05-09 18:43:32 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 686ms. Found 0 repository interfaces.
2022-05-09 18:43:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$41a7d725] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$fc699f70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$bb33825d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$cdbcf6e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$15e1d2ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:33 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-05-09 18:43:33 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-05-09 18:43:33 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2022-05-09 18:43:33 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2022-05-09 18:43:33 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2022-05-09 18:43:33 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2022-05-09 18:43:33 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2022-05-09 18:43:33 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2022-05-09 18:43:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:33 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 18:43:38 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2022-05-09 18:43:38 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2022-05-09 18:43:38 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-05-09 18:43:38 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2022-05-09 18:43:38 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-05-09 18:43:38 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 9574 ms
2022-05-09 18:43:39 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2022-05-09 18:43:41 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2022-05-09 18:43:41 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-05-09 18:43:41 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2022-05-09 18:43:41 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2022-05-09 18:43:42 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2022-05-09 18:43:42 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1652093021900'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-05-09 18:43:42 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2022-05-09 18:43:42 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2022-05-09 18:43:42 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@469bd719
2022-05-09 18:43:42 INFO  main p6spy 2022-05-09 18:43:42 | 耗时 8 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2022-05-09 18:43:43 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2022-05-09 18:43:43 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-05-09 18:43:43 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2022-05-09 18:43:43 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2022-05-09 18:43:43 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2022-05-09 18:43:44 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2022-05-09 18:43:44 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2022-05-09 18:43:44 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2022-05-09 18:43:44 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2022-05-09 18:43:44 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2022-05-09 18:43:44 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2022-05-09 18:43:44 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 16.606 seconds (JVM running for 18.79)
2022-05-09 18:43:44 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2022-05-09 18:43:44 INFO  main p6spy 2022-05-09 18:43:44 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-05-09 18:43:44 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2022-05-09 18:43:44 INFO  main p6spy 2022-05-09 18:43:44 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2022-05-09 18:43:44 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2022-05-09 18:43:44 INFO  main p6spy 2022-05-09 18:43:44 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2022-05-09 18:43:44 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2022-05-09 18:43:44 INFO  main p6spy 2022-05-09 18:43:44 | 耗时 5 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-05-09 18:43:44 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2022-05-09 18:43:44 INFO  main p6spy 2022-05-09 18:43:44 | 耗时 0 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2022-05-09 18:43:44 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2022-05-09 18:43:44 INFO  main p6spy 2022-05-09 18:43:44 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2022-05-09 18:43:44 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2022-05-09 18:43:44 INFO  main p6spy 2022-05-09 18:43:44 | 耗时 0 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2022-05-09 18:43:44 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2022-05-09 18:43:44 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-05-09 18:43:44 INFO  main p6spy 2022-05-09 18:43:44 | 耗时 0 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-05-09 18:43:44 INFO  main com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-05-09 18:43:44 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2022-05-09 18:43:44 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2022-05-09 18:43:44 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-05-09 18:43:45 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2022-05-09 18:43:45 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2022-05-09 18:43:45 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1652068203986"'s failed in-progress jobs.
2022-05-09 18:43:45 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652093021900 started.
2022-05-09 18:43:52 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2022-05-09 18:43:52 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-05-09 18:43:52 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-05-09 18:43:52 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2022-05-09 18:43:52 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://192.168.189.1:8088/login
2022-05-09 18:45:09 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-05-09 18:45:09 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-05-09 18:45:09 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 17 ms
2022-05-09 18:45:09 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2022-05-09 18:45:25 INFO  http-nio-8088-exec-2 com.hero.sms.common.aspect.LimitAspect IP:192.168.189.1 第 1 次访问key为 [limit_login192.168.189.1]，描述为 [登录接口] 的接口
2022-05-09 18:45:25 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 18:45:25 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 18:45:25 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 18:45:25 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 18:45:25 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 18:45:25 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2022-05-09T16:31:24.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2022-05-09 18:45:25 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 18:45:25 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2022-05-09T18:45:25.669+0800', 'Chrome 10', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 'admin');
2022-05-09 18:45:25 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 18:45:25 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-09 18:45:25 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 18:45:25 | 耗时 5 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-09 18:45:25 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 18:45:25 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 18:45:27 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 18:45:27 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-09 18:45:27 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 18:45:27 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-09 18:45:27 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 18:45:27 | 耗时 5 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-05-09 18:45:27 INFO  http-nio-8088-exec-4 p6spy 2022-05-09 18:45:27 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-05-09 18:45:27 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 18:45:27 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2022-05-09T18:45:27.508+0800' WHERE (USERNAME = 'admin');
2022-05-09 18:45:27 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 18:45:27 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2022-05-09 18:45:27 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 18:45:27 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-05-09 18:45:27 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 18:45:27 | 耗时 2 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-05-09 18:45:27 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 18:45:27 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2022-05-09 18:45:27 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 18:45:27 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2022-05-09 18:45:27 INFO  http-nio-8088-exec-4 p6spy 2022-05-09 18:45:27 | 耗时 17 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2022-05-09 18:45:27 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 18:45:27 | 耗时 80 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2022-05-09 18:45:27 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 18:45:27 | 耗时 67 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2022-05-09 18:45:32 INFO  http-nio-8088-exec-8 p6spy 2022-05-09 18:45:32 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-09 18:45:32 INFO  http-nio-8088-exec-8 p6spy 2022-05-09 18:45:32 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 18:45:36 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 18:45:36 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE id = 12;
2022-05-09 18:45:41 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 18:45:41 | 耗时 12 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel WHERE (code = 'LTSS01' AND id <> 12);
2022-05-09 18:45:41 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 18:45:41 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE id = 12;
2022-05-09 18:45:41 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 18:45:41 | 耗时 1 ms | SQL 语句：
UPDATE t_sms_channel SET support_area = '+86', code = 'LTSS01', weight = 1, description = '', protocol_type = 'http', submit_way = 1, impl_full_class = 'com.hero.sms.service.impl.channel.push.LtssYunTongXin', area_regex = '', name = 'LTSS云通信', state = 5, area_operator_regex = '', operator_regex = '' WHERE id = 12;
2022-05-09 18:45:41 INFO  http-nio-8088-exec-5 com.hero.sms.common.DatabaseCache Begin-缓存短信通道信息
2022-05-09 18:45:41 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 18:45:41 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-05-09 18:45:41 INFO  http-nio-8088-exec-5 com.hero.sms.common.DatabaseCache End-短信通道信息缓存完成
2022-05-09 18:45:43 INFO  Febs-Async-Thread1 p6spy 2022-05-09 18:45:43 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelController.updateSmsChannel()', '2022-05-09T18:45:43.722+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 2070, ' smsChannel: SmsChannel(id=12, code=LTSS01, name=LTSS云通信, state=5, supportArea=+86, protocolType=http, implFullClass=com.hero.sms.service.impl.channel.push.LtssYunTongXin, areaRegex=, operatorRegex=, areaOperatorRegex=, description=, weight=1, remark=null, isDel=null, createUserName=null, dayLimit=null, createTime=null, stateWith=null, submitWay=1)', '修改SmsChannel', 'admin');
2022-05-09 18:45:43 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 18:45:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-09 18:45:43 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 18:45:43 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 18:45:46 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 18:45:46 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE id = 12;
2022-05-09 18:46:49 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 18:46:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2022-05-09 18:46:49 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 18:46:49 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,10;
2022-05-09 18:46:51 INFO  http-nio-8088-exec-4 p6spy 2022-05-09 18:46:51 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE ID = '1001';
2022-05-09 18:46:51 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 18:46:51 | 耗时 2 ms | SQL 语句：
SELECT ID, DESCREPTION, CODE, CREATE_TIME, PARENT_CODE, NAME, REMARK FROM code_sort;
2022-05-09 18:47:12 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 18:47:12 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE ID = 1001;
2022-05-09 18:47:12 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 18:47:12 | 耗时 1 ms | SQL 语句：
UPDATE code SET CODE = 'sendSmsWaySwitch', PARENT_CODE = '', NAME = 'ON', DESCRIPTION = '', REMARK = 'smpp短信提交方式：ON:根据通道自身设置 ； OFF或其他值 为 全部同步提交', SORT_CODE = 'System' WHERE ID = 1001;
2022-05-09 18:47:12 INFO  Febs-Async-Thread2 p6spy 2022-05-09 18:47:12 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.CodeController.updateCode()', '2022-05-09T18:47:12.301+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 12, ' code: Code(id=1001, sortCode=System, code=sendSmsWaySwitch, name=ON, parentCode=, orderLevel=null, isDelete=null, description=, remark=smpp短信提交方式：ON:根据通道自身设置 ； OFF或其他值 为 全部同步提交, createTime=null)', '修改Code', 'admin');
2022-05-09 18:47:12 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 18:47:12 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2022-05-09 18:47:12 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 18:47:12 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,10;
2022-05-09 18:58:58 INFO  http-nio-8088-exec-8 p6spy 2022-05-09 18:58:58 | 耗时 7 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-05-09 18:58:58 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 18:58:58 | 耗时 18 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-09T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800');
2022-05-09 18:58:58 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 18:58:58 | 耗时 70 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-09T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-09 18:59:02 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 18:59:02 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (state IN (2, 8) AND id IN ('140142'));
2022-05-09 18:59:02 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 18:59:02 | 耗时 2 ms | SQL 语句：
UPDATE t_send_record_checkinfo tsrc, t_send_record tsr SET tsrc.state = '0509185902' WHERE tsrc.state = 1 AND tsrc.send_code = tsr.send_code AND tsrc.sms_number = tsr.sms_number AND tsr.Id IN (140142);
2022-05-09 18:59:02 INFO  Febs-Async-Thread3 p6spy 2022-05-09 18:59:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.forceUnLock()', '2022-05-09T18:59:02.783+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 39, ' sendRecordIds: "140142"', '批量强制解锁SendRecord', 'admin');
2022-05-09 18:59:31 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 18:59:31 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (state IN (2, 8) AND id IN ('140142') AND res_msgid IS NULL);
2022-05-09 18:59:31 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 18:59:31 | 耗时 0 ms | SQL 语句：
UPDATE t_send_record_checkinfo tsrc, t_send_record tsr SET tsrc.state = '0' WHERE tsrc.state = 1 AND tsrc.send_code = tsr.send_code AND tsrc.sms_number = tsr.sms_number AND tsr.Id IN (140142);
2022-05-09 18:59:31 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 18:59:31 | 耗时 3 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-05-09 18:59:32 INFO  Febs-Async-Thread4 p6spy 2022-05-09 18:59:32 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.forceReSend()', '2022-05-09T18:59:32.016+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 847, ' sendRecordIds: "140142"', '批量强制重发SendRecord', 'admin');
2022-05-09 19:04:03 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 19:04:03 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE id = 11;
2022-05-09 19:04:06 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 19:04:06 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel WHERE (code = 'BEN001' AND id <> 11);
2022-05-09 19:04:06 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 19:04:06 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE id = 11;
2022-05-09 19:04:06 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 19:04:06 | 耗时 1 ms | SQL 语句：
UPDATE t_sms_channel SET support_area = '', code = 'BEN001', weight = 50, description = '', protocol_type = 'smpp', submit_way = 1, impl_full_class = '1', area_regex = '', name = '奔001', state = 1, area_operator_regex = '', operator_regex = '' WHERE id = 11;
2022-05-09 19:04:06 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 19:04:06 | 耗时 0 ms | SQL 语句：
SELECT * FROM t_sms_channel WHERE id = 11;
2022-05-09 19:04:06 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 19:04:06 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel_property WHERE sms_channel_id = 11;
2022-05-09 19:04:06 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 19:04:06 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_sms_channel_cost WHERE sms_channel_id = 11;
2022-05-09 19:04:08 INFO  Febs-Async-Thread5 p6spy 2022-05-09 19:04:08 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelController.updateSmsChannel()', '2022-05-09T19:04:08.474+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 2115, ' smsChannel: SmsChannel(id=11, code=BEN001, name=奔001, state=1, supportArea=, protocolType=smpp, implFullClass=1, areaRegex=, operatorRegex=, areaOperatorRegex=, description=, weight=50, remark=null, isDel=null, createUserName=null, dayLimit=null, createTime=null, stateWith=null, submitWay=1)', '修改SmsChannel', 'admin');
2022-05-09 19:04:19 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 19:04:19 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE id = 11;
2022-05-09 19:05:42 INFO  http-nio-8088-exec-8 p6spy 2022-05-09 19:05:42 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (state IN (2, 8) AND id IN ('140144'));
2022-05-09 19:05:42 INFO  http-nio-8088-exec-8 p6spy 2022-05-09 19:05:42 | 耗时 9 ms | SQL 语句：
UPDATE t_send_record_checkinfo tsrc, t_send_record tsr SET tsrc.state = '0509190542' WHERE tsrc.state = 1 AND tsrc.send_code = tsr.send_code AND tsrc.sms_number = tsr.sms_number AND tsr.Id IN (140144);
2022-05-09 19:05:42 INFO  Febs-Async-Thread1 p6spy 2022-05-09 19:05:42 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.forceUnLock()', '2022-05-09T19:05:42.795+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 24, ' sendRecordIds: "140144"', '批量强制解锁SendRecord', 'admin');
2022-05-09 19:05:44 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 19:05:44 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (state IN (2, 8) AND id IN ('140144') AND res_msgid IS NULL);
2022-05-09 19:05:44 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 19:05:44 | 耗时 0 ms | SQL 语句：
UPDATE t_send_record_checkinfo tsrc, t_send_record tsr SET tsrc.state = '0' WHERE tsrc.state = 1 AND tsrc.send_code = tsr.send_code AND tsrc.sms_number = tsr.sms_number AND tsr.Id IN (140144);
2022-05-09 19:05:44 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 19:05:44 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-05-09 19:05:44 INFO  Febs-Async-Thread2 p6spy 2022-05-09 19:05:44 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.forceReSend()', '2022-05-09T19:05:44.850+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 20, ' sendRecordIds: "140144"', '批量强制重发SendRecord', 'admin');
2022-05-09 19:07:13 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 19:07:13 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-09T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800');
2022-05-09 19:07:13 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 19:07:13 | 耗时 38 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-09T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-09 19:10:27 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 19:10:27 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (state IN (2, 8) AND id IN ('140143'));
2022-05-09 19:10:27 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 19:10:27 | 耗时 2 ms | SQL 语句：
UPDATE t_send_record_checkinfo tsrc, t_send_record tsr SET tsrc.state = '0509191027' WHERE tsrc.state = 1 AND tsrc.send_code = tsr.send_code AND tsrc.sms_number = tsr.sms_number AND tsr.Id IN (140143);
2022-05-09 19:10:27 INFO  Febs-Async-Thread3 p6spy 2022-05-09 19:10:27 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.forceUnLock()', '2022-05-09T19:10:27.192+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 14, ' sendRecordIds: "140143"', '批量强制解锁SendRecord', 'admin');
2022-05-09 19:10:29 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 19:10:29 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (state IN (2, 8) AND id IN ('140143') AND res_msgid IS NULL);
2022-05-09 19:10:29 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 19:10:29 | 耗时 2 ms | SQL 语句：
UPDATE t_send_record_checkinfo tsrc, t_send_record tsr SET tsrc.state = '0' WHERE tsrc.state = 1 AND tsrc.send_code = tsr.send_code AND tsrc.sms_number = tsr.sms_number AND tsr.Id IN (140143);
2022-05-09 19:10:29 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 19:10:29 | 耗时 3 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-05-09 19:10:29 INFO  Febs-Async-Thread4 p6spy 2022-05-09 19:10:29 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.forceReSend()', '2022-05-09T19:10:29.576+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 40, ' sendRecordIds: "140143"', '批量强制重发SendRecord', 'admin');
2022-05-09 19:11:28 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 19:11:28 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-09T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800');
2022-05-09 19:11:28 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 19:11:28 | 耗时 66 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-09T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-09 19:17:02 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 19:17:02 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-09 19:17:02 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 19:17:02 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-09 19:17:02 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 19:17:02 | 耗时 17 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-09T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800');
2022-05-09 19:17:02 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 19:17:02 | 耗时 85 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-09T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-09 19:17:03 INFO  http-nio-8088-exec-8 p6spy 2022-05-09 19:17:03 | 耗时 13 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-05-09T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800');
2022-05-09 19:17:03 INFO  http-nio-8088-exec-8 p6spy 2022-05-09 19:17:03 | 耗时 45 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-05-09T00:00:00.000+0800' AND create_time <= '2022-05-09T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-05-09 19:45:09 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-05-09 19:45:09 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-05-09 19:46:27 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 19:46:27 | 耗时 2 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-05-09 20:15:16 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2022-05-09 20:15:16 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652093021900 paused.
2022-05-09 20:15:16 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2022-05-09 20:15:16 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2022-05-09 20:15:16 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652093021900 shutting down.
2022-05-09 20:15:16 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652093021900 paused.
2022-05-09 20:15:16 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652093021900 shutdown complete.
2022-05-09 20:15:16 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2022-05-09 20:15:16 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2022-05-09 20:15:16 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2022-05-09 20:15:16 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2022-05-09 20:15:16 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2022-05-09 20:15:16 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2022-05-09 21:30:04 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 83964 (C:\work\workspaceSmsBfSvn\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBfSvn\sms\sms-admin)
2022-05-09 21:30:04 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2022-05-09 21:30:08 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-05-09 21:30:08 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-05-09 21:30:08 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 740ms. Found 0 repository interfaces.
2022-05-09 21:30:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8b06b7d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$45c8801d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$492630a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$171bd78e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$5f40b39b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:10 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-05-09 21:30:10 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-05-09 21:30:10 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2022-05-09 21:30:10 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2022-05-09 21:30:10 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2022-05-09 21:30:10 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2022-05-09 21:30:10 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2022-05-09 21:30:10 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2022-05-09 21:30:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:30:15 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2022-05-09 21:30:15 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2022-05-09 21:30:15 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-05-09 21:30:15 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2022-05-09 21:30:15 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-05-09 21:30:15 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 10669 ms
2022-05-09 21:30:16 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2022-05-09 21:30:19 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2022-05-09 21:30:19 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-05-09 21:30:19 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2022-05-09 21:30:19 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2022-05-09 21:30:19 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2022-05-09 21:30:19 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1652103019555'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-05-09 21:30:19 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2022-05-09 21:30:19 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2022-05-09 21:30:19 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7e4dddee
2022-05-09 21:30:19 INFO  main p6spy 2022-05-09 21:30:19 | 耗时 8 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2022-05-09 21:30:21 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2022-05-09 21:30:21 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-05-09 21:30:21 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2022-05-09 21:30:21 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2022-05-09 21:30:21 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2022-05-09 21:30:22 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2022-05-09 21:30:22 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2022-05-09 21:30:22 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2022-05-09 21:30:22 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2022-05-09 21:30:22 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2022-05-09 21:30:22 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2022-05-09 21:30:22 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 19.046 seconds (JVM running for 21.306)
2022-05-09 21:30:22 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2022-05-09 21:30:22 INFO  main p6spy 2022-05-09 21:30:22 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-05-09 21:30:22 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2022-05-09 21:30:22 INFO  main p6spy 2022-05-09 21:30:22 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2022-05-09 21:30:22 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2022-05-09 21:30:22 INFO  main p6spy 2022-05-09 21:30:22 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2022-05-09 21:30:22 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2022-05-09 21:30:22 INFO  main p6spy 2022-05-09 21:30:22 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-05-09 21:30:22 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2022-05-09 21:30:22 INFO  main p6spy 2022-05-09 21:30:22 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2022-05-09 21:30:22 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2022-05-09 21:30:23 INFO  main p6spy 2022-05-09 21:30:23 | 耗时 0 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2022-05-09 21:30:23 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2022-05-09 21:30:23 INFO  main p6spy 2022-05-09 21:30:23 | 耗时 0 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2022-05-09 21:30:23 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2022-05-09 21:30:23 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-05-09 21:30:23 INFO  main p6spy 2022-05-09 21:30:23 | 耗时 0 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-05-09 21:30:23 INFO  main com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-05-09 21:30:23 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2022-05-09 21:30:23 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2022-05-09 21:30:23 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-05-09 21:30:23 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2022-05-09 21:30:23 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2022-05-09 21:30:23 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1652093021900"'s failed in-progress jobs.
2022-05-09 21:30:23 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652103019555 started.
2022-05-09 21:30:31 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2022-05-09 21:30:31 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-05-09 21:30:31 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-05-09 21:30:31 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2022-05-09 21:30:31 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://192.168.189.1:8088/login
2022-05-09 21:31:30 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-05-09 21:31:30 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-05-09 21:31:30 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 16 ms
2022-05-09 21:31:30 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2022-05-09 21:31:45 INFO  http-nio-8088-exec-5 com.hero.sms.common.aspect.LimitAspect IP:192.168.189.1 第 1 次访问key为 [limit_login192.168.189.1]，描述为 [登录接口] 的接口
2022-05-09 21:31:45 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 21:31:45 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 21:31:45 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 21:31:45 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 21:31:45 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 21:31:45 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2022-05-09T18:45:28.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2022-05-09 21:31:45 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 21:31:45 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2022-05-09T21:31:45.407+0800', 'Chrome 10', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 'admin');
2022-05-09 21:31:45 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:31:45 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-09 21:31:45 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:31:45 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-09 21:31:45 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:31:45 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 21:31:46 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 21:31:46 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-09 21:31:46 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 21:31:46 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-09 21:31:46 INFO  http-nio-8088-exec-8 p6spy 2022-05-09 21:31:46 | 耗时 5 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-05-09 21:31:46 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 21:31:46 | 耗时 0 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-05-09 21:31:46 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 21:31:46 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2022-05-09T21:31:46.979+0800' WHERE (USERNAME = 'admin');
2022-05-09 21:31:47 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 21:31:47 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2022-05-09 21:31:47 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 21:31:47 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-05-09 21:31:47 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 21:31:47 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-05-09 21:31:47 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 21:31:47 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2022-05-09 21:31:47 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 21:31:47 | 耗时 3 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2022-05-09 21:31:47 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 21:31:47 | 耗时 19 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2022-05-09 21:31:47 INFO  http-nio-8088-exec-4 p6spy 2022-05-09 21:31:47 | 耗时 79 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2022-05-09 21:31:47 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:31:47 | 耗时 67 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2022-05-09 21:31:50 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 21:31:50 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2022-05-09 21:32:39 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 21:32:39 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu (MENU_NAME, TYPE, PARENT_ID, CREATE_TIME, PERMS) VALUES ('刷新通道缓存', '1', 214, '2022-05-09T21:32:39.907+0800', 'smsChannel:reloadChannelCache');
2022-05-09 21:32:39 INFO  Febs-Async-Thread1 p6spy 2022-05-09 21:32:39 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.MenuController.addMenu()', '2022-05-09T21:32:39.928+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 16, ' menu: "Menu(menuId=400, parentId=214, menuName=刷新通道缓存, url=null, perms=smsChannel:reloadChannelCache, icon=null, type=1, orderNum=null, createTime=Mon May 09 21:32:39 CST 2022, modifyTime=null)"', '新增菜单/按钮', 'admin');
2022-05-09 21:32:39 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 21:32:39 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2022-05-09 21:32:46 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 21:32:46 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2022-05-09 21:32:46 INFO  http-nio-8088-exec-4 p6spy 2022-05-09 21:32:46 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2022-05-09 21:32:46 INFO  http-nio-8088-exec-4 p6spy 2022-05-09 21:32:46 | 耗时 2 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2022-05-09 21:33:53 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 21:33:53 | 耗时 2 ms | SQL 语句：
UPDATE t_role SET MODIFY_TIME = '2022-05-09T21:33:53.961+0800', ROLE_NAME = '系统管理员', REMARK = '系统管理员，拥有所有操作权限 ^_^' WHERE ROLE_ID = 1;
2022-05-09 21:33:53 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 21:33:53 | 耗时 1 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('1'));
2022-05-09 21:33:54 INFO  Febs-Async-Thread2 p6spy 2022-05-09 21:33:54 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.RoleController.updateRole()', '2022-05-09T21:33:54.142+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 178, ' role: "Role(roleId=1, roleName=系统管理员, remark=系统管理员，拥有所有操作权限 ^_^, createTime=null, modifyTime=Mon May 09 21:33:53 CST 2022, menuIds=1,3,11,12,13,286,160,161,4,14,15,16,162,5,17,18,19,163,6,20,21,22,164,176,177,178,179,180,181,288,289,182,183,184,185,365,366,367,368,369,370,371,374,186,195,257,287,320,380,381,390,393,394,187,188,189,190,191,205,219,196,197,198,199,294,295,306,372,192,193,258,263,303,316,318,329,338,340,341,342,359,389,391,392,200,201,202,203,211,206,305,360,361,362,207,208,209,210,220,221,222,231,194,262,227,228,229,296,373,375,376,377,378,379,259,260,347,382,383,261,346,384,385,387,388,300,301,302,314,325,345,213,246,279,315,354,247,280,285,298,304,317,363,364,248,281,254,256,255,242,243,244,245,274,275,276,277,290,291,292,355,356,357,348,349,350,351,358,212,214,297,339,343,352,353,386,400,223,224,225,226,215,216,217,218,249,250,251,252,253,307,308,309,310,311,312,313,337,344,395,396,397,398,399,264,278,265,266,293,330,326,331,327,335,328,336,299,332,319,333,321,334,267,268,271,282,269,272,283,270,273,284,322,323,324,2,8,23,10,24,170,136,171,172,127,128,129,131,175,101,102,103,104,105,106,107,108,173,109,110,174,137,138,165,139,166,115,132,133,135,134,126,159,116,117,119,120,121,122,123,118,125,167,168,169)"', '修改角色', 'admin');
2022-05-09 21:33:54 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:33:54 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-09 21:33:54 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:33:54 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-09 21:33:54 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:33:54 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2022-05-09 21:33:54 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:33:54 | 耗时 2 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2022-05-09 21:34:04 INFO  http-nio-8088-exec-1 com.hero.sms.common.aspect.LimitAspect IP:192.168.189.1 第 1 次访问key为 [limit_login192.168.189.1]，描述为 [登录接口] 的接口
2022-05-09 21:34:04 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 21:34:04 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 21:34:04 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 21:34:04 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 21:34:04 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 21:34:04 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2022-05-09T21:31:47.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2022-05-09 21:34:04 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 21:34:04 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2022-05-09T21:34:04.474+0800', 'Chrome 10', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 'admin');
2022-05-09 21:34:04 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 21:34:04 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-09 21:34:04 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 21:34:04 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-09 21:34:04 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 21:34:04 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 21:34:05 INFO  http-nio-8088-exec-4 p6spy 2022-05-09 21:34:05 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-09 21:34:05 INFO  http-nio-8088-exec-4 p6spy 2022-05-09 21:34:05 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-09 21:34:05 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 21:34:05 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-05-09 21:34:05 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 21:34:05 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-05-09 21:34:05 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:34:05 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2022-05-09T21:34:05.884+0800' WHERE (USERNAME = 'admin');
2022-05-09 21:34:05 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:34:05 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2022-05-09 21:34:05 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:34:05 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-05-09 21:34:05 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:34:05 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-05-09 21:34:05 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:34:05 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2022-05-09 21:34:05 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:34:05 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2022-05-09 21:34:06 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 21:34:06 | 耗时 17 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2022-05-09 21:34:06 INFO  http-nio-8088-exec-4 p6spy 2022-05-09 21:34:06 | 耗时 82 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2022-05-09 21:34:06 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 21:34:06 | 耗时 83 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2022-05-09 21:34:19 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 21:34:19 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-09 21:34:19 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 21:34:19 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 21:34:33 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 21:34:33 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-09 21:34:33 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 21:34:33 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 21:34:36 INFO  http-nio-8088-exec-10 com.hero.sms.common.DatabaseCache Begin-缓存短信通道信息
2022-05-09 21:34:36 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 21:34:36 | 耗时 5 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-05-09 21:34:36 INFO  http-nio-8088-exec-10 com.hero.sms.common.DatabaseCache End-短信通道信息缓存完成
2022-05-09 21:34:42 INFO  Febs-Async-Thread3 p6spy 2022-05-09 21:34:42 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelController.reloadChannelCache()', '2022-05-09T21:34:42.266+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 6054, '', '刷新通道列表缓存', 'admin');
2022-05-09 21:34:42 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 21:34:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-09 21:34:42 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 21:34:42 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 21:35:09 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 21:35:09 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-09 21:35:09 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 21:35:09 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 21:35:11 INFO  http-nio-8088-exec-8 p6spy 2022-05-09 21:35:11 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-09 21:35:11 INFO  http-nio-8088-exec-8 p6spy 2022-05-09 21:35:11 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 21:35:14 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 21:35:14 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-09 21:35:14 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 21:35:14 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 21:38:42 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2022-05-09 21:38:42 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652103019555 paused.
2022-05-09 21:38:42 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2022-05-09 21:38:42 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2022-05-09 21:38:42 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652103019555 shutting down.
2022-05-09 21:38:42 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652103019555 paused.
2022-05-09 21:38:42 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652103019555 shutdown complete.
2022-05-09 21:38:42 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2022-05-09 21:38:42 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2022-05-09 21:38:42 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2022-05-09 21:38:42 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2022-05-09 21:38:42 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2022-05-09 21:38:42 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2022-05-09 21:45:11 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 62060 (C:\work\workspaceSmsBfSvn\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBfSvn\sms\sms-admin)
2022-05-09 21:45:11 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2022-05-09 21:45:14 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-05-09 21:45:14 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-05-09 21:45:15 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 744ms. Found 0 repository interfaces.
2022-05-09 21:45:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7f3a83f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$39fc4c43] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$f8c62f30] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$b4fa3b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$53747fc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:17 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-05-09 21:45:17 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-05-09 21:45:17 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2022-05-09 21:45:17 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2022-05-09 21:45:17 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2022-05-09 21:45:17 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2022-05-09 21:45:17 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2022-05-09 21:45:17 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2022-05-09 21:45:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:45:22 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2022-05-09 21:45:22 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2022-05-09 21:45:22 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-05-09 21:45:22 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2022-05-09 21:45:23 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-05-09 21:45:23 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 11540 ms
2022-05-09 21:45:24 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2022-05-09 21:45:27 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2022-05-09 21:45:27 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-05-09 21:45:27 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2022-05-09 21:45:27 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2022-05-09 21:45:27 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2022-05-09 21:45:27 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1652103927223'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-05-09 21:45:27 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2022-05-09 21:45:27 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2022-05-09 21:45:27 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@52fed5b7
2022-05-09 21:45:27 INFO  main p6spy 2022-05-09 21:45:27 | 耗时 10 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2022-05-09 21:45:28 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2022-05-09 21:45:28 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-05-09 21:45:28 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2022-05-09 21:45:28 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2022-05-09 21:45:29 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2022-05-09 21:45:29 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2022-05-09 21:45:29 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2022-05-09 21:45:29 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2022-05-09 21:45:29 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2022-05-09 21:45:29 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2022-05-09 21:45:29 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2022-05-09 21:45:29 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 19.57 seconds (JVM running for 22.619)
2022-05-09 21:45:29 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2022-05-09 21:45:29 INFO  main p6spy 2022-05-09 21:45:29 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-05-09 21:45:29 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2022-05-09 21:45:29 INFO  main p6spy 2022-05-09 21:45:29 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2022-05-09 21:45:29 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2022-05-09 21:45:29 INFO  main p6spy 2022-05-09 21:45:29 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2022-05-09 21:45:30 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2022-05-09 21:45:30 INFO  main p6spy 2022-05-09 21:45:30 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-05-09 21:45:30 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2022-05-09 21:45:30 INFO  main p6spy 2022-05-09 21:45:30 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2022-05-09 21:45:30 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2022-05-09 21:45:30 INFO  main p6spy 2022-05-09 21:45:30 | 耗时 0 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2022-05-09 21:45:30 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2022-05-09 21:45:30 INFO  main p6spy 2022-05-09 21:45:30 | 耗时 0 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2022-05-09 21:45:30 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2022-05-09 21:45:30 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-05-09 21:45:30 INFO  main p6spy 2022-05-09 21:45:30 | 耗时 0 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-05-09 21:45:30 INFO  main com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-05-09 21:45:30 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2022-05-09 21:45:30 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2022-05-09 21:45:30 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-05-09 21:45:30 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2022-05-09 21:45:30 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2022-05-09 21:45:30 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1652103019555"'s failed in-progress jobs.
2022-05-09 21:45:30 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652103927223 started.
2022-05-09 21:45:38 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2022-05-09 21:45:38 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-05-09 21:45:38 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-05-09 21:45:38 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2022-05-09 21:45:38 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://192.168.189.1:8088/login
2022-05-09 21:47:03 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-05-09 21:47:03 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-05-09 21:47:03 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 14 ms
2022-05-09 21:47:03 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2022-05-09 21:47:04 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 21:47:04 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-09 21:47:04 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 21:47:04 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-09 21:47:04 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 21:47:04 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 21:47:06 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 21:47:06 | 耗时 6 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-05-09 21:47:06 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 21:47:06 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-05-09 21:47:06 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:47:06 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-09 21:47:06 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:47:06 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 21:47:09 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 21:47:09 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-09 21:47:09 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 21:47:09 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 21:47:12 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 21:47:12 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-09 21:47:12 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 21:47:12 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 21:47:14 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 21:47:14 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE id = 11;
2022-05-09 21:47:47 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 21:47:47 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-09 21:47:47 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 21:47:47 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 21:48:55 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 21:48:55 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-09 21:48:55 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 21:48:55 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 21:48:58 INFO  http-nio-8088-exec-8 p6spy 2022-05-09 21:48:58 | 耗时 24 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id WHERE cnl.submitWay = 1;
2022-05-09 21:49:44 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 21:49:44 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-09 21:49:44 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 21:49:44 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-09 21:49:44 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 21:49:44 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 21:49:45 INFO  http-nio-8088-exec-8 p6spy 2022-05-09 21:49:45 | 耗时 5 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-05-09 21:49:45 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 21:49:45 | 耗时 0 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-05-09 21:49:45 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 21:49:45 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-09 21:49:45 INFO  http-nio-8088-exec-3 p6spy 2022-05-09 21:49:45 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 21:49:48 INFO  http-nio-8088-exec-4 p6spy 2022-05-09 21:49:48 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id WHERE cnl.submitWay = 0;
2022-05-09 21:49:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2022-05-09 21:49:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652103927223 paused.
2022-05-09 21:49:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2022-05-09 21:49:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2022-05-09 21:49:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652103927223 shutting down.
2022-05-09 21:49:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652103927223 paused.
2022-05-09 21:49:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652103927223 shutdown complete.
2022-05-09 21:49:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2022-05-09 21:49:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2022-05-09 21:49:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2022-05-09 21:49:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2022-05-09 21:49:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2022-05-09 21:49:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2022-05-09 21:51:07 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 77120 (C:\work\workspaceSmsBfSvn\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBfSvn\sms\sms-admin)
2022-05-09 21:51:07 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2022-05-09 21:51:11 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-05-09 21:51:11 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-05-09 21:51:12 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 1057ms. Found 0 repository interfaces.
2022-05-09 21:51:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$b2935150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$6d55199b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$2c1efc88] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$3ea8710c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$86cd4d19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:14 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-05-09 21:51:14 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-05-09 21:51:14 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2022-05-09 21:51:14 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2022-05-09 21:51:14 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2022-05-09 21:51:14 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2022-05-09 21:51:14 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2022-05-09 21:51:14 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2022-05-09 21:51:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-05-09 21:51:22 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2022-05-09 21:51:22 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2022-05-09 21:51:22 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-05-09 21:51:22 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2022-05-09 21:51:22 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-05-09 21:51:22 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 15478 ms
2022-05-09 21:51:24 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2022-05-09 21:51:28 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2022-05-09 21:51:28 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-05-09 21:51:28 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2022-05-09 21:51:28 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2022-05-09 21:51:28 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2022-05-09 21:51:28 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1652104288009'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-05-09 21:51:28 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2022-05-09 21:51:28 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2022-05-09 21:51:28 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@382608d0
2022-05-09 21:51:28 INFO  main p6spy 2022-05-09 21:51:28 | 耗时 3 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2022-05-09 21:51:30 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2022-05-09 21:51:30 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-05-09 21:51:30 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2022-05-09 21:51:30 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2022-05-09 21:51:30 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2022-05-09 21:51:31 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2022-05-09 21:51:31 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2022-05-09 21:51:31 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2022-05-09 21:51:31 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2022-05-09 21:51:31 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2022-05-09 21:51:32 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2022-05-09 21:51:32 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 25.933 seconds (JVM running for 29.06)
2022-05-09 21:51:32 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2022-05-09 21:51:32 INFO  main p6spy 2022-05-09 21:51:32 | 耗时 3 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-05-09 21:51:32 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2022-05-09 21:51:32 INFO  main p6spy 2022-05-09 21:51:32 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2022-05-09 21:51:32 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2022-05-09 21:51:32 INFO  main p6spy 2022-05-09 21:51:32 | 耗时 2 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2022-05-09 21:51:32 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2022-05-09 21:51:32 INFO  main p6spy 2022-05-09 21:51:32 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-05-09 21:51:32 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2022-05-09 21:51:32 INFO  main p6spy 2022-05-09 21:51:32 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2022-05-09 21:51:32 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2022-05-09 21:51:32 INFO  main p6spy 2022-05-09 21:51:32 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2022-05-09 21:51:32 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2022-05-09 21:51:32 INFO  main p6spy 2022-05-09 21:51:32 | 耗时 2 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2022-05-09 21:51:32 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2022-05-09 21:51:32 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-05-09 21:51:32 INFO  main p6spy 2022-05-09 21:51:32 | 耗时 1 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-05-09 21:51:32 INFO  main com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-05-09 21:51:32 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2022-05-09 21:51:32 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-05-09 21:51:32 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-05-09 21:51:32 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 62 ms
2022-05-09 21:51:32 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2022-05-09 21:51:32 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2022-05-09 21:51:32 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-05-09 21:51:32 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 21:51:32 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-05-09 21:51:32 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 21:51:32 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-05-09 21:51:32 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 21:51:32 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-05-09 21:51:32 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2022-05-09 21:51:32 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2022-05-09 21:51:32 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1652103927223"'s failed in-progress jobs.
2022-05-09 21:51:32 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652104288009 started.
2022-05-09 21:51:35 INFO  http-nio-8088-exec-10 p6spy 2022-05-09 21:51:35 | 耗时 5 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-05-09 21:51:35 INFO  http-nio-8088-exec-9 p6spy 2022-05-09 21:51:35 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-05-09 21:51:36 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 21:51:36 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-09 21:51:36 INFO  http-nio-8088-exec-5 p6spy 2022-05-09 21:51:36 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 21:51:39 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:51:39 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id WHERE cnl.submit_way = 1;
2022-05-09 21:51:39 INFO  http-nio-8088-exec-7 p6spy 2022-05-09 21:51:39 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id WHERE cnl.submit_way = 1 ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 21:51:42 INFO  http-nio-8088-exec-6 p6spy 2022-05-09 21:51:42 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, submit_way, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE id = 12;
2022-05-09 21:51:45 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2022-05-09 21:51:45 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-05-09 21:51:45 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-05-09 21:51:45 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2022-05-09 21:51:45 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://192.168.189.1:8088/login
2022-05-09 21:51:47 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 21:51:47 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id WHERE cnl.submit_way = 0;
2022-05-09 21:51:47 INFO  http-nio-8088-exec-1 p6spy 2022-05-09 21:51:47 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id WHERE cnl.submit_way = 0 ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 21:51:50 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 21:51:50 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-05-09 21:51:50 INFO  http-nio-8088-exec-2 p6spy 2022-05-09 21:51:50 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-05-09 21:52:03 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2022-05-09 21:52:03 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652104288009 paused.
2022-05-09 21:52:03 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2022-05-09 21:52:03 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2022-05-09 21:52:03 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652104288009 shutting down.
2022-05-09 21:52:03 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652104288009 paused.
2022-05-09 21:52:03 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1652104288009 shutdown complete.
2022-05-09 21:52:03 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2022-05-09 21:52:03 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2022-05-09 21:52:03 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2022-05-09 21:52:03 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2022-05-09 21:52:03 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2022-05-09 21:52:03 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
