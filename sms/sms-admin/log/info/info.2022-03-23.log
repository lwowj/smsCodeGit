2022-03-23 15:01:14 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 200804 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2022-03-23 15:01:14 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2022-03-23 15:01:18 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 15:01:18 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 15:01:19 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 736ms. Found 0 repository interfaces.
2022-03-23 15:01:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9415dfe2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$4ed7a82d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$da18b1a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$202aff9e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$684fdbab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:20 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-03-23 15:01:20 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-03-23 15:01:20 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2022-03-23 15:01:20 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2022-03-23 15:01:20 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2022-03-23 15:01:20 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2022-03-23 15:01:20 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2022-03-23 15:01:20 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2022-03-23 15:01:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:25 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:25 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:25 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:25 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 15:01:26 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2022-03-23 15:01:26 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2022-03-23 15:01:26 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-03-23 15:01:26 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2022-03-23 15:01:26 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-03-23 15:01:26 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 11426 ms
2022-03-23 15:01:27 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2022-03-23 15:01:30 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2022-03-23 15:01:30 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 15:01:30 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2022-03-23 15:01:30 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2022-03-23 15:01:30 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2022-03-23 15:01:30 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1648018890874'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 15:01:30 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2022-03-23 15:01:30 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2022-03-23 15:01:30 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1dbfbd94
2022-03-23 15:01:31 INFO  main p6spy 2022-03-23 15:01:31 | 耗时 4 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2022-03-23 15:01:33 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 15:01:33 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-03-23 15:01:33 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2022-03-23 15:01:33 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2022-03-23 15:01:33 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2022-03-23 15:01:34 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2022-03-23 15:01:34 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2022-03-23 15:01:34 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2022-03-23 15:01:34 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2022-03-23 15:01:34 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2022-03-23 15:01:34 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2022-03-23 15:01:34 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 20.838 seconds (JVM running for 23.532)
2022-03-23 15:01:34 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2022-03-23 15:01:34 INFO  main p6spy 2022-03-23 15:01:34 | 耗时 14 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-03-23 15:01:34 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2022-03-23 15:01:34 INFO  main p6spy 2022-03-23 15:01:34 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2022-03-23 15:01:34 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2022-03-23 15:01:34 INFO  main p6spy 2022-03-23 15:01:34 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2022-03-23 15:01:34 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2022-03-23 15:01:34 INFO  main p6spy 2022-03-23 15:01:34 | 耗时 2 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-03-23 15:01:34 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2022-03-23 15:01:34 INFO  main p6spy 2022-03-23 15:01:34 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2022-03-23 15:01:34 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2022-03-23 15:01:34 INFO  main p6spy 2022-03-23 15:01:34 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2022-03-23 15:01:34 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2022-03-23 15:01:35 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 15:01:35 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2022-03-23 15:01:35 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1647949444406"'s failed in-progress jobs.
2022-03-23 15:01:35 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648018890874 started.
2022-03-23 15:01:35 INFO  main p6spy 2022-03-23 15:01:35 | 耗时 873 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2022-03-23 15:01:42 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2022-03-23 15:01:42 INFO  main p6spy 2022-03-23 15:01:42 | 耗时 8 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2022-03-23 15:01:42 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2022-03-23 15:01:42 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-03-23 15:01:42 INFO  main p6spy 2022-03-23 15:01:42 | 耗时 1 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-03-23 15:01:42 INFO  main com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-03-23 15:01:42 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2022-03-23 15:01:42 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2022-03-23 15:01:42 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-03-23 15:01:57 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 15:01:57 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 15:01:57 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 15:01:57 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2022-03-23 15:01:57 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://192.168.189.1:8088/login
2022-03-23 15:02:43 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 15:02:43 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-03-23 15:02:43 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 18 ms
2022-03-23 15:02:43 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2022-03-23 15:02:58 INFO  http-nio-8088-exec-3 com.hero.sms.common.aspect.LimitAspect IP:192.168.189.1 第 1 次访问key为 [limit_login192.168.189.1]，描述为 [登录接口] 的接口
2022-03-23 15:02:58 INFO  http-nio-8088-exec-3 p6spy 2022-03-23 15:02:58 | 耗时 9 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 15:02:58 INFO  http-nio-8088-exec-3 p6spy 2022-03-23 15:02:58 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 15:02:58 INFO  http-nio-8088-exec-3 p6spy 2022-03-23 15:02:58 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2022-03-22T19:41:30.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2022-03-23 15:02:58 INFO  http-nio-8088-exec-3 p6spy 2022-03-23 15:02:58 | 耗时 3 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2022-03-23T15:02:58.615+0800', 'Chrome 98', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 'admin');
2022-03-23 15:02:58 INFO  http-nio-8088-exec-4 p6spy 2022-03-23 15:02:58 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-23 15:02:58 INFO  http-nio-8088-exec-4 p6spy 2022-03-23 15:02:58 | 耗时 7 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-23 15:02:59 INFO  http-nio-8088-exec-4 p6spy 2022-03-23 15:02:59 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 15:03:00 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 15:03:00 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-23 15:03:00 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 15:03:00 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-23 15:03:01 INFO  http-nio-8088-exec-3 p6spy 2022-03-23 15:03:01 | 耗时 7 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-03-23 15:03:01 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 15:03:01 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-23 15:03:01 INFO  http-nio-8088-exec-9 p6spy 2022-03-23 15:03:01 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2022-03-23T15:03:01.548+0800' WHERE (USERNAME = 'admin');
2022-03-23 15:03:01 INFO  http-nio-8088-exec-9 p6spy 2022-03-23 15:03:01 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2022-03-23 15:03:01 INFO  http-nio-8088-exec-9 p6spy 2022-03-23 15:03:01 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-03-23 15:03:01 INFO  http-nio-8088-exec-9 p6spy 2022-03-23 15:03:01 | 耗时 2 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-03-23 15:03:01 INFO  http-nio-8088-exec-9 p6spy 2022-03-23 15:03:01 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2022-03-23 15:03:01 INFO  http-nio-8088-exec-9 p6spy 2022-03-23 15:03:01 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2022-03-23 15:03:02 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 15:03:02 | 耗时 2 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2022-03-23 15:03:02 INFO  http-nio-8088-exec-4 p6spy 2022-03-23 15:03:02 | 耗时 6 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2022-03-23 15:03:02 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 15:03:02 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2022-03-23 15:03:18 INFO  http-nio-8088-exec-8 p6spy 2022-03-23 15:03:18 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2022-03-23 15:04:11 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 15:04:11 | 耗时 2 ms | SQL 语句：
INSERT INTO t_menu (MENU_NAME, TYPE, PARENT_ID, CREATE_TIME, PERMS) VALUES ('立即生效', '1', 395, '2022-03-23T15:04:11.110+0800', 'areaCode:loadAreaCodeCache');
2022-03-23 15:04:11 INFO  Febs-Async-Thread1 p6spy 2022-03-23 15:04:11 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.MenuController.addMenu()', '2022-03-23T15:04:11.145+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 30, ' menu: "Menu(menuId=399, parentId=395, menuName=立即生效, url=null, perms=areaCode:loadAreaCodeCache, icon=null, type=1, orderNum=null, createTime=Wed Mar 23 15:04:11 CST 2022, modifyTime=null)"', '新增菜单/按钮', 'admin');
2022-03-23 15:04:11 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 15:04:11 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2022-03-23 15:04:14 INFO  http-nio-8088-exec-5 p6spy 2022-03-23 15:04:14 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2022-03-23 15:04:14 INFO  http-nio-8088-exec-3 p6spy 2022-03-23 15:04:14 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2022-03-23 15:04:14 INFO  http-nio-8088-exec-3 p6spy 2022-03-23 15:04:14 | 耗时 3 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2022-03-23 15:04:22 INFO  http-nio-8088-exec-7 p6spy 2022-03-23 15:04:22 | 耗时 3 ms | SQL 语句：
UPDATE t_role SET MODIFY_TIME = '2022-03-23T15:04:22.174+0800', ROLE_NAME = '系统管理员', REMARK = '系统管理员，拥有所有操作权限 ^_^' WHERE ROLE_ID = 1;
2022-03-23 15:04:22 INFO  http-nio-8088-exec-7 p6spy 2022-03-23 15:04:22 | 耗时 1 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('1'));
2022-03-23 15:04:22 INFO  Febs-Async-Thread2 p6spy 2022-03-23 15:04:22 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.RoleController.updateRole()', '2022-03-23T15:04:22.381+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 203, ' role: "Role(roleId=1, roleName=系统管理员, remark=系统管理员，拥有所有操作权限 ^_^, createTime=null, modifyTime=Wed Mar 23 15:04:22 CST 2022, menuIds=1,3,11,12,13,286,160,161,4,14,15,16,162,5,17,18,19,163,6,20,21,22,164,176,177,178,179,180,181,288,289,182,183,184,185,365,366,367,368,369,370,371,374,186,195,257,287,320,380,381,390,393,394,187,188,189,190,191,205,219,196,197,198,199,294,295,306,372,192,193,258,263,303,316,318,329,338,340,341,342,359,389,391,392,200,201,202,203,211,206,305,360,361,362,207,208,209,210,220,221,222,231,194,262,227,228,229,296,373,375,376,377,378,379,259,260,347,382,383,261,346,384,385,387,388,300,301,302,314,325,345,213,246,279,315,354,247,280,285,298,304,317,363,364,248,281,254,256,255,242,243,244,245,274,275,276,277,290,291,292,355,356,357,348,349,350,351,358,212,214,297,339,343,352,353,386,223,224,225,226,215,216,217,218,249,250,251,252,253,307,308,309,310,311,312,313,337,344,395,396,397,398,399,264,278,265,266,293,330,326,331,327,335,328,336,299,332,319,333,321,334,267,268,271,282,269,272,283,270,273,284,322,323,324,2,8,23,10,24,170,136,171,172,127,128,129,131,175,101,102,103,104,105,106,107,108,173,109,110,174,137,138,165,139,166,115,132,133,135,134,126,159,116,117,119,120,121,122,123,118,125,167,168,169)"', '修改角色', 'admin');
2022-03-23 15:04:22 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 15:04:22 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-23 15:04:22 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 15:04:22 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-23 15:04:22 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 15:04:22 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2022-03-23 15:04:22 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 15:04:22 | 耗时 4 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2022-03-23 15:04:34 INFO  http-nio-8088-exec-1 com.hero.sms.common.aspect.LimitAspect IP:192.168.189.1 第 1 次访问key为 [limit_login192.168.189.1]，描述为 [登录接口] 的接口
2022-03-23 15:04:34 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 15:04:34 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 15:04:34 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 15:04:34 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 15:04:34 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 15:04:34 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2022-03-23T15:03:02.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2022-03-23 15:04:34 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 15:04:34 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2022-03-23T15:04:34.489+0800', 'Chrome 98', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 'admin');
2022-03-23 15:04:34 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 15:04:34 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-23 15:04:34 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 15:04:34 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-23 15:04:34 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 15:04:34 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 15:04:35 INFO  http-nio-8088-exec-8 p6spy 2022-03-23 15:04:35 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-23 15:04:35 INFO  http-nio-8088-exec-8 p6spy 2022-03-23 15:04:35 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-23 15:04:35 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 15:04:35 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-03-23 15:04:35 INFO  http-nio-8088-exec-10 p6spy 2022-03-23 15:04:35 | 耗时 0 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-23 15:04:36 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 15:04:36 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2022-03-23T15:04:36.162+0800' WHERE (USERNAME = 'admin');
2022-03-23 15:04:36 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 15:04:36 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2022-03-23 15:04:36 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 15:04:36 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-03-23 15:04:36 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 15:04:36 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-03-23 15:04:36 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 15:04:36 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2022-03-23 15:04:36 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 15:04:36 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2022-03-23 15:04:36 INFO  http-nio-8088-exec-8 p6spy 2022-03-23 15:04:36 | 耗时 0 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2022-03-23 15:04:36 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 15:04:36 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2022-03-23 15:04:36 INFO  http-nio-8088-exec-10 p6spy 2022-03-23 15:04:36 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2022-03-23 15:04:38 INFO  http-nio-8088-exec-5 p6spy 2022-03-23 15:04:38 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_area_code;
2022-03-23 15:04:38 INFO  http-nio-8088-exec-5 p6spy 2022-03-23 15:04:38 | 耗时 0 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC LIMIT 0,10;
2022-03-23 15:04:42 INFO  http-nio-8088-exec-6 com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-03-23 15:04:42 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 15:04:42 | 耗时 0 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-03-23 15:04:42 INFO  http-nio-8088-exec-6 com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-03-23 15:04:53 INFO  http-nio-8088-exec-7 p6spy 2022-03-23 15:04:53 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-23 15:04:53 INFO  http-nio-8088-exec-7 p6spy 2022-03-23 15:04:53 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-23 15:04:53 INFO  http-nio-8088-exec-7 p6spy 2022-03-23 15:04:53 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 15:04:54 INFO  http-nio-8088-exec-9 p6spy 2022-03-23 15:04:54 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-03-23 15:04:54 INFO  http-nio-8088-exec-7 p6spy 2022-03-23 15:04:54 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-23 15:04:54 INFO  http-nio-8088-exec-4 p6spy 2022-03-23 15:04:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_area_code;
2022-03-23 15:04:54 INFO  http-nio-8088-exec-4 p6spy 2022-03-23 15:04:54 | 耗时 0 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC LIMIT 0,10;
2022-03-23 15:04:57 INFO  http-nio-8088-exec-9 p6spy 2022-03-23 15:04:57 | 耗时 0 ms | SQL 语句：
SELECT DEPT_ID, DEPT_NAME, MODIFY_TIME, CREATE_TIME, ORDER_NUM, PARENT_ID FROM t_dept ORDER BY ORDER_NUM ASC;
2022-03-23 15:04:58 INFO  http-nio-8088-exec-8 p6spy 2022-03-23 15:04:58 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2022-03-23 15:05:03 INFO  Febs-Async-Thread3 p6spy 2022-03-23 15:05:03 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.AreaCodeController.loadAreaCodeCache()', '2022-03-23T15:05:03.767+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 21030, '', '刷新地域配置缓存', 'admin');
2022-03-23 16:02:43 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-03-23 16:02:43 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-03-23 16:40:55 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2022-03-23 16:40:55 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648018890874 paused.
2022-03-23 16:40:55 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2022-03-23 16:40:55 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2022-03-23 16:40:55 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648018890874 shutting down.
2022-03-23 16:40:55 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648018890874 paused.
2022-03-23 16:40:55 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648018890874 shutdown complete.
2022-03-23 16:40:55 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2022-03-23 16:40:55 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2022-03-23 16:40:55 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2022-03-23 16:40:55 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2022-03-23 16:40:55 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2022-03-23 16:40:55 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2022-03-23 17:04:38 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 204908 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2022-03-23 17:04:38 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2022-03-23 17:04:42 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 17:04:42 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 17:04:43 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 847ms. Found 0 repository interfaces.
2022-03-23 17:04:43 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1a7602d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$d537cb24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$9401ae11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$a68b2295] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$eeaffea2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:44 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-03-23 17:04:44 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-03-23 17:04:44 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2022-03-23 17:04:44 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2022-03-23 17:04:44 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2022-03-23 17:04:44 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2022-03-23 17:04:44 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2022-03-23 17:04:44 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2022-03-23 17:04:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:04:50 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2022-03-23 17:04:50 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2022-03-23 17:04:50 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-03-23 17:04:50 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2022-03-23 17:04:50 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-03-23 17:04:50 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 12422 ms
2022-03-23 17:04:51 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2022-03-23 17:04:55 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2022-03-23 17:04:55 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 17:04:55 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2022-03-23 17:04:55 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2022-03-23 17:04:55 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2022-03-23 17:04:55 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1648026295196'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 17:04:55 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2022-03-23 17:04:55 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2022-03-23 17:04:55 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@4c438f66
2022-03-23 17:04:55 INFO  main p6spy 2022-03-23 17:04:55 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2022-03-23 17:04:57 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 17:04:57 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-03-23 17:04:57 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2022-03-23 17:04:57 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2022-03-23 17:04:57 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2022-03-23 17:04:58 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2022-03-23 17:04:58 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2022-03-23 17:04:58 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2022-03-23 17:04:58 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2022-03-23 17:04:58 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2022-03-23 17:04:58 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2022-03-23 17:04:58 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 21.694 seconds (JVM running for 25.026)
2022-03-23 17:04:58 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2022-03-23 17:04:58 INFO  main p6spy 2022-03-23 17:04:58 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-03-23 17:04:58 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2022-03-23 17:04:58 INFO  main p6spy 2022-03-23 17:04:58 | 耗时 2 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2022-03-23 17:04:58 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2022-03-23 17:04:58 INFO  main p6spy 2022-03-23 17:04:58 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2022-03-23 17:04:58 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2022-03-23 17:04:58 INFO  main p6spy 2022-03-23 17:04:58 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-03-23 17:04:58 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2022-03-23 17:04:58 INFO  main p6spy 2022-03-23 17:04:58 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2022-03-23 17:04:58 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2022-03-23 17:04:58 INFO  main p6spy 2022-03-23 17:04:58 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2022-03-23 17:04:58 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2022-03-23 17:04:59 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 17:04:59 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2022-03-23 17:04:59 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1648018890874"'s failed in-progress jobs.
2022-03-23 17:04:59 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648026295196 started.
2022-03-23 17:05:00 INFO  main p6spy 2022-03-23 17:05:00 | 耗时 1232 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2022-03-23 17:05:07 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2022-03-23 17:05:07 INFO  main p6spy 2022-03-23 17:05:07 | 耗时 1 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2022-03-23 17:05:07 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2022-03-23 17:05:07 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-03-23 17:05:07 INFO  main p6spy 2022-03-23 17:05:07 | 耗时 1 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-03-23 17:05:07 INFO  main com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-03-23 17:05:07 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2022-03-23 17:05:07 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2022-03-23 17:05:07 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-03-23 17:05:12 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 17:05:12 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-03-23 17:05:12 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 28 ms
2022-03-23 17:05:12 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2022-03-23 17:05:20 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 17:05:20 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 17:05:20 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 17:05:20 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2022-03-23 17:05:20 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://192.168.189.1:8088/login
2022-03-23 17:05:30 INFO  http-nio-8088-exec-2 com.hero.sms.common.aspect.LimitAspect IP:192.168.189.1 第 1 次访问key为 [limit_login192.168.189.1]，描述为 [登录接口] 的接口
2022-03-23 17:05:30 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 17:05:30 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 17:05:30 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 17:05:30 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 17:05:30 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 17:05:30 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2022-03-23T15:04:36.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2022-03-23 17:05:30 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 17:05:30 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2022-03-23T17:05:30.729+0800', 'Chrome 98', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 'admin');
2022-03-23 17:05:30 INFO  http-nio-8088-exec-3 p6spy 2022-03-23 17:05:30 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-23 17:05:30 INFO  http-nio-8088-exec-3 p6spy 2022-03-23 17:05:30 | 耗时 5 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-23 17:05:30 INFO  http-nio-8088-exec-3 p6spy 2022-03-23 17:05:30 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 17:05:32 INFO  http-nio-8088-exec-10 p6spy 2022-03-23 17:05:32 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-23 17:05:32 INFO  http-nio-8088-exec-10 p6spy 2022-03-23 17:05:32 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-23 17:05:32 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 17:05:32 | 耗时 8 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-03-23 17:05:32 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 17:05:32 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-23 17:05:32 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 17:05:32 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2022-03-23T17:05:32.857+0800' WHERE (USERNAME = 'admin');
2022-03-23 17:05:32 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 17:05:32 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2022-03-23 17:05:32 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 17:05:32 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-03-23 17:05:32 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 17:05:32 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-03-23 17:05:32 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 17:05:32 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2022-03-23 17:05:32 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 17:05:32 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2022-03-23 17:05:33 INFO  http-nio-8088-exec-10 p6spy 2022-03-23 17:05:33 | 耗时 2 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2022-03-23 17:05:33 INFO  http-nio-8088-exec-3 p6spy 2022-03-23 17:05:33 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2022-03-23 17:05:33 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 17:05:33 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2022-03-23 17:06:22 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2022-03-23 17:06:22 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648026295196 paused.
2022-03-23 17:06:22 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2022-03-23 17:06:22 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2022-03-23 17:06:22 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648026295196 shutting down.
2022-03-23 17:06:22 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648026295196 paused.
2022-03-23 17:06:22 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648026295196 shutdown complete.
2022-03-23 17:06:22 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2022-03-23 17:06:22 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2022-03-23 17:06:22 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2022-03-23 17:06:22 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2022-03-23 17:06:22 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2022-03-23 17:06:22 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2022-03-23 17:06:34 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 202520 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2022-03-23 17:06:34 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2022-03-23 17:06:38 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 17:06:38 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 17:06:39 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 965ms. Found 0 repository interfaces.
2022-03-23 17:06:40 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c8f6d472] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$83b89cbd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$42827faa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$550bf42e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$9d30d03b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:41 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-03-23 17:06:41 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-03-23 17:06:41 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2022-03-23 17:06:41 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2022-03-23 17:06:41 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2022-03-23 17:06:41 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2022-03-23 17:06:41 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2022-03-23 17:06:41 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2022-03-23 17:06:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:06:48 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2022-03-23 17:06:48 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2022-03-23 17:06:48 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-03-23 17:06:48 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2022-03-23 17:06:49 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-03-23 17:06:49 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 14297 ms
2022-03-23 17:06:50 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2022-03-23 17:06:55 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2022-03-23 17:06:55 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 17:06:55 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2022-03-23 17:06:55 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2022-03-23 17:06:55 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2022-03-23 17:06:55 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1648026415020'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 17:06:55 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2022-03-23 17:06:55 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2022-03-23 17:06:55 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@123426a9
2022-03-23 17:06:55 INFO  main p6spy 2022-03-23 17:06:55 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2022-03-23 17:06:56 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 17:06:56 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-03-23 17:06:56 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2022-03-23 17:06:56 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2022-03-23 17:06:57 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2022-03-23 17:06:57 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2022-03-23 17:06:57 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2022-03-23 17:06:57 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2022-03-23 17:06:57 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2022-03-23 17:06:57 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2022-03-23 17:06:57 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2022-03-23 17:06:57 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 24.306 seconds (JVM running for 27.806)
2022-03-23 17:06:57 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2022-03-23 17:06:58 INFO  main p6spy 2022-03-23 17:06:58 | 耗时 3 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-03-23 17:06:58 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2022-03-23 17:06:58 INFO  main p6spy 2022-03-23 17:06:58 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2022-03-23 17:06:58 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2022-03-23 17:06:58 INFO  main p6spy 2022-03-23 17:06:58 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2022-03-23 17:06:58 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2022-03-23 17:06:58 INFO  main p6spy 2022-03-23 17:06:58 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-03-23 17:06:58 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2022-03-23 17:06:58 INFO  main p6spy 2022-03-23 17:06:58 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2022-03-23 17:06:58 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2022-03-23 17:06:58 INFO  main p6spy 2022-03-23 17:06:58 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2022-03-23 17:06:58 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2022-03-23 17:06:58 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 17:06:58 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2022-03-23 17:06:58 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1648026295196"'s failed in-progress jobs.
2022-03-23 17:06:58 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648026415020 started.
2022-03-23 17:06:58 INFO  main p6spy 2022-03-23 17:06:58 | 耗时 770 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2022-03-23 17:07:05 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2022-03-23 17:07:05 INFO  main p6spy 2022-03-23 17:07:05 | 耗时 3 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2022-03-23 17:07:05 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2022-03-23 17:07:05 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-03-23 17:07:05 INFO  main p6spy 2022-03-23 17:07:05 | 耗时 5 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-03-23 17:07:05 INFO  main com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-03-23 17:07:05 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2022-03-23 17:07:05 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2022-03-23 17:07:05 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-03-23 17:07:19 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 17:07:19 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 17:07:19 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 17:07:19 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2022-03-23 17:07:19 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://192.168.189.1:8088/login
2022-03-23 17:07:44 INFO  http-nio-8088-exec-2 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 17:07:44 INFO  http-nio-8088-exec-2 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-03-23 17:07:44 INFO  http-nio-8088-exec-2 org.springframework.web.servlet.DispatcherServlet Completed initialization in 28 ms
2022-03-23 17:07:44 INFO  http-nio-8088-exec-2 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2022-03-23 17:07:44 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 17:07:44 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-23 17:07:44 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 17:07:44 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-23 17:07:44 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 17:07:44 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 17:07:47 INFO  http-nio-8088-exec-9 p6spy 2022-03-23 17:07:47 | 耗时 13 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-03-23 17:07:47 INFO  http-nio-8088-exec-10 p6spy 2022-03-23 17:07:47 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-23 17:07:48 INFO  http-nio-8088-exec-5 p6spy 2022-03-23 17:07:48 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-03-23 17:07:48 INFO  http-nio-8088-exec-5 p6spy 2022-03-23 17:07:48 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-23 17:09:29 INFO  http-nio-8088-exec-10 p6spy 2022-03-23 17:09:29 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-03-23 17:09:29 INFO  http-nio-8088-exec-10 p6spy 2022-03-23 17:09:29 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-23 17:10:25 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 17:10:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-03-23 17:10:25 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 17:10:25 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-23 17:10:53 INFO  http-nio-8088-exec-3 p6spy 2022-03-23 17:10:53 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id WHERE channelProperty.property_value LIKE CONCAT('%', '103.156.178', '%');
2022-03-23 17:10:53 INFO  http-nio-8088-exec-3 p6spy 2022-03-23 17:10:53 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id WHERE channelProperty.property_value LIKE CONCAT('%', '103.156.178', '%') ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-23 17:11:07 INFO  http-nio-8088-exec-5 p6spy 2022-03-23 17:11:07 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-03-23 17:11:07 INFO  http-nio-8088-exec-5 p6spy 2022-03-23 17:11:07 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-23 17:11:24 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 17:11:24 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-03-23 17:11:24 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 17:11:24 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-23 17:14:38 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2022-03-23 17:14:38 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648026415020 paused.
2022-03-23 17:14:38 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2022-03-23 17:14:38 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2022-03-23 17:14:38 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648026415020 shutting down.
2022-03-23 17:14:38 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648026415020 paused.
2022-03-23 17:14:38 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648026415020 shutdown complete.
2022-03-23 17:14:38 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2022-03-23 17:14:38 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2022-03-23 17:14:38 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2022-03-23 17:14:38 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2022-03-23 17:14:38 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2022-03-23 17:14:38 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2022-03-23 17:15:41 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 206704 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2022-03-23 17:15:41 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2022-03-23 17:15:46 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 17:15:46 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 17:15:47 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 955ms. Found 0 repository interfaces.
2022-03-23 17:15:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$79759a43] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$3437628e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$f301457b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$58ab9ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$4daf960c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:48 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-03-23 17:15:48 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-03-23 17:15:48 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2022-03-23 17:15:48 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2022-03-23 17:15:48 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2022-03-23 17:15:48 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2022-03-23 17:15:48 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2022-03-23 17:15:48 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2022-03-23 17:15:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:15:53 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2022-03-23 17:15:54 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2022-03-23 17:15:54 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-03-23 17:15:54 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2022-03-23 17:15:54 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-03-23 17:15:54 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 12878 ms
2022-03-23 17:15:55 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2022-03-23 17:15:58 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2022-03-23 17:15:58 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 17:15:58 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2022-03-23 17:15:58 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2022-03-23 17:15:58 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2022-03-23 17:15:58 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1648026958454'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 17:15:58 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2022-03-23 17:15:58 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2022-03-23 17:15:58 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@61ec2cb5
2022-03-23 17:15:58 INFO  main p6spy 2022-03-23 17:15:58 | 耗时 3 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2022-03-23 17:16:00 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 17:16:00 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-03-23 17:16:00 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2022-03-23 17:16:00 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2022-03-23 17:16:00 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2022-03-23 17:16:01 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2022-03-23 17:16:01 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2022-03-23 17:16:01 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2022-03-23 17:16:01 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2022-03-23 17:16:01 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2022-03-23 17:16:02 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2022-03-23 17:16:02 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 21.722 seconds (JVM running for 25.062)
2022-03-23 17:16:02 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2022-03-23 17:16:02 INFO  main p6spy 2022-03-23 17:16:02 | 耗时 2 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-03-23 17:16:02 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2022-03-23 17:16:02 INFO  main p6spy 2022-03-23 17:16:02 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2022-03-23 17:16:02 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2022-03-23 17:16:02 INFO  main p6spy 2022-03-23 17:16:02 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2022-03-23 17:16:02 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2022-03-23 17:16:02 INFO  main p6spy 2022-03-23 17:16:02 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-03-23 17:16:02 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2022-03-23 17:16:02 INFO  main p6spy 2022-03-23 17:16:02 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2022-03-23 17:16:02 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2022-03-23 17:16:02 INFO  main p6spy 2022-03-23 17:16:02 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2022-03-23 17:16:02 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2022-03-23 17:16:02 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 17:16:02 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2022-03-23 17:16:02 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1648026415020"'s failed in-progress jobs.
2022-03-23 17:16:02 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648026958454 started.
2022-03-23 17:16:03 INFO  main p6spy 2022-03-23 17:16:03 | 耗时 912 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2022-03-23 17:16:09 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 17:16:09 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-03-23 17:16:09 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 31 ms
2022-03-23 17:16:09 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2022-03-23 17:16:10 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 17:16:10 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-23 17:16:10 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 17:16:10 | 耗时 5 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-23 17:16:10 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 17:16:10 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 17:16:12 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2022-03-23 17:16:12 INFO  main p6spy 2022-03-23 17:16:12 | 耗时 3 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2022-03-23 17:16:12 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2022-03-23 17:16:12 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-03-23 17:16:12 INFO  main p6spy 2022-03-23 17:16:12 | 耗时 2 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-03-23 17:16:12 INFO  main com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-03-23 17:16:12 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2022-03-23 17:16:12 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2022-03-23 17:16:12 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-03-23 17:16:13 INFO  http-nio-8088-exec-10 p6spy 2022-03-23 17:16:13 | 耗时 4 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-03-23 17:16:13 INFO  http-nio-8088-exec-9 p6spy 2022-03-23 17:16:13 | 耗时 2 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-23 17:16:13 INFO  http-nio-8088-exec-5 p6spy 2022-03-23 17:16:13 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-03-23 17:16:13 INFO  http-nio-8088-exec-5 p6spy 2022-03-23 17:16:13 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-23 17:16:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 17:16:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 17:16:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 17:16:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2022-03-23 17:16:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://192.168.189.1:8088/login
2022-03-23 17:18:09 INFO  http-nio-8088-exec-9 p6spy 2022-03-23 17:18:09 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-03-23 17:18:09 INFO  http-nio-8088-exec-9 p6spy 2022-03-23 17:18:09 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-23 17:18:52 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 17:18:52 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-23 17:18:52 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 17:18:52 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-23 17:18:52 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 17:18:52 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 17:18:53 INFO  http-nio-8088-exec-10 p6spy 2022-03-23 17:18:53 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-23 17:18:54 INFO  http-nio-8088-exec-9 p6spy 2022-03-23 17:18:54 | 耗时 8 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-03-23 17:18:54 INFO  http-nio-8088-exec-5 p6spy 2022-03-23 17:18:54 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-03-23 17:18:54 INFO  http-nio-8088-exec-5 p6spy 2022-03-23 17:18:54 | 耗时 5 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-23 17:19:29 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2022-03-23 17:19:29 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648026958454 paused.
2022-03-23 17:19:29 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2022-03-23 17:19:29 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2022-03-23 17:19:29 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648026958454 shutting down.
2022-03-23 17:19:29 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648026958454 paused.
2022-03-23 17:19:29 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648026958454 shutdown complete.
2022-03-23 17:19:29 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2022-03-23 17:19:29 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2022-03-23 17:19:29 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2022-03-23 17:19:29 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2022-03-23 17:19:29 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2022-03-23 17:19:29 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2022-03-23 17:19:41 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 207232 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2022-03-23 17:19:41 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2022-03-23 17:19:46 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 17:19:46 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 17:19:47 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 884ms. Found 0 repository interfaces.
2022-03-23 17:19:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$77bda47d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$327f6cc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$f1494fb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$3d2c439] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$4bf7a046] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:48 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-03-23 17:19:48 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-03-23 17:19:48 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2022-03-23 17:19:48 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2022-03-23 17:19:48 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2022-03-23 17:19:48 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2022-03-23 17:19:48 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2022-03-23 17:19:48 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2022-03-23 17:19:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 17:19:55 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2022-03-23 17:19:55 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2022-03-23 17:19:55 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-03-23 17:19:55 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2022-03-23 17:19:56 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-03-23 17:19:56 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 14408 ms
2022-03-23 17:19:57 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2022-03-23 17:20:01 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2022-03-23 17:20:01 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 17:20:01 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2022-03-23 17:20:01 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2022-03-23 17:20:01 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2022-03-23 17:20:01 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1648027201124'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 17:20:01 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2022-03-23 17:20:01 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2022-03-23 17:20:01 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@74d3b331
2022-03-23 17:20:01 INFO  main p6spy 2022-03-23 17:20:01 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2022-03-23 17:20:02 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 17:20:02 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-03-23 17:20:02 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2022-03-23 17:20:02 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2022-03-23 17:20:03 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2022-03-23 17:20:03 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2022-03-23 17:20:03 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2022-03-23 17:20:03 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2022-03-23 17:20:03 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2022-03-23 17:20:04 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2022-03-23 17:20:04 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2022-03-23 17:20:04 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 23.354 seconds (JVM running for 27.129)
2022-03-23 17:20:04 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2022-03-23 17:20:04 INFO  main p6spy 2022-03-23 17:20:04 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-03-23 17:20:04 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2022-03-23 17:20:04 INFO  main p6spy 2022-03-23 17:20:04 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2022-03-23 17:20:04 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2022-03-23 17:20:04 INFO  main p6spy 2022-03-23 17:20:04 | 耗时 2 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2022-03-23 17:20:04 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2022-03-23 17:20:04 INFO  main p6spy 2022-03-23 17:20:04 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-03-23 17:20:04 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2022-03-23 17:20:04 INFO  main p6spy 2022-03-23 17:20:04 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2022-03-23 17:20:04 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2022-03-23 17:20:04 INFO  main p6spy 2022-03-23 17:20:04 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2022-03-23 17:20:04 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2022-03-23 17:20:04 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 17:20:05 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2022-03-23 17:20:05 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1648026958454"'s failed in-progress jobs.
2022-03-23 17:20:05 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648027201124 started.
2022-03-23 17:20:05 INFO  main p6spy 2022-03-23 17:20:05 | 耗时 956 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2022-03-23 17:20:10 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2022-03-23 17:20:10 INFO  main p6spy 2022-03-23 17:20:10 | 耗时 1 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2022-03-23 17:20:10 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2022-03-23 17:20:10 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-03-23 17:20:10 INFO  main p6spy 2022-03-23 17:20:10 | 耗时 1 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-03-23 17:20:10 INFO  main com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-03-23 17:20:10 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2022-03-23 17:20:11 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2022-03-23 17:20:11 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-03-23 17:20:23 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 17:20:23 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 17:20:23 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 17:20:23 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2022-03-23 17:20:23 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://192.168.189.1:8088/login
2022-03-23 17:21:47 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 17:21:47 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-03-23 17:21:47 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 24 ms
2022-03-23 17:21:47 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2022-03-23 17:21:48 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 17:21:48 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-23 17:21:48 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 17:21:48 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-23 17:21:48 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 17:21:48 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 17:21:50 INFO  http-nio-8088-exec-10 p6spy 2022-03-23 17:21:50 | 耗时 5 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-03-23 17:21:50 INFO  http-nio-8088-exec-9 p6spy 2022-03-23 17:21:50 | 耗时 8 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-23 17:21:51 INFO  http-nio-8088-exec-5 p6spy 2022-03-23 17:21:51 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-03-23 17:21:51 INFO  http-nio-8088-exec-5 p6spy 2022-03-23 17:21:51 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-23 20:16:08 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 205936 (C:\work\workspaceSmsBfSvn\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBfSvn\sms\sms-admin)
2022-03-23 20:16:08 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2022-03-23 20:16:11 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-23 20:16:11 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-23 20:16:12 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 826ms. Found 0 repository interfaces.
2022-03-23 20:16:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$497d5397] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$43f1be2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$c308fecf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$d5927353] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$1db74f60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:13 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-03-23 20:16:13 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-03-23 20:16:13 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2022-03-23 20:16:13 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2022-03-23 20:16:13 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2022-03-23 20:16:13 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2022-03-23 20:16:13 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2022-03-23 20:16:13 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2022-03-23 20:16:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-23 20:16:20 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2022-03-23 20:16:20 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2022-03-23 20:16:20 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-03-23 20:16:20 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2022-03-23 20:16:20 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-03-23 20:16:20 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 12464 ms
2022-03-23 20:16:21 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2022-03-23 20:16:25 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2022-03-23 20:16:25 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-23 20:16:25 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2022-03-23 20:16:25 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2022-03-23 20:16:25 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2022-03-23 20:16:25 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1648037785134'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-23 20:16:25 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2022-03-23 20:16:25 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2022-03-23 20:16:25 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@16f2d883
2022-03-23 20:16:25 INFO  main p6spy 2022-03-23 20:16:25 | 耗时 4 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2022-03-23 20:16:27 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-23 20:16:27 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-03-23 20:16:27 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2022-03-23 20:16:27 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2022-03-23 20:16:27 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2022-03-23 20:16:28 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2022-03-23 20:16:28 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2022-03-23 20:16:28 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2022-03-23 20:16:28 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2022-03-23 20:16:28 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2022-03-23 20:16:29 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2022-03-23 20:16:29 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 21.778 seconds (JVM running for 26.067)
2022-03-23 20:16:29 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2022-03-23 20:16:29 INFO  main p6spy 2022-03-23 20:16:29 | 耗时 4 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-03-23 20:16:29 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2022-03-23 20:16:29 INFO  main p6spy 2022-03-23 20:16:29 | 耗时 2 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2022-03-23 20:16:29 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2022-03-23 20:16:29 INFO  main p6spy 2022-03-23 20:16:29 | 耗时 3 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2022-03-23 20:16:29 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2022-03-23 20:16:29 INFO  main p6spy 2022-03-23 20:16:29 | 耗时 2 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-03-23 20:16:29 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2022-03-23 20:16:29 INFO  main p6spy 2022-03-23 20:16:29 | 耗时 3 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2022-03-23 20:16:29 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2022-03-23 20:16:29 INFO  main p6spy 2022-03-23 20:16:29 | 耗时 3 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2022-03-23 20:16:29 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2022-03-23 20:16:29 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-23 20:16:30 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2022-03-23 20:16:30 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1648027201124"'s failed in-progress jobs.
2022-03-23 20:16:30 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648037785134 started.
2022-03-23 20:16:30 INFO  main p6spy 2022-03-23 20:16:30 | 耗时 1209 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2022-03-23 20:16:36 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2022-03-23 20:16:36 INFO  main p6spy 2022-03-23 20:16:36 | 耗时 2 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2022-03-23 20:16:36 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2022-03-23 20:16:36 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-03-23 20:16:36 INFO  main p6spy 2022-03-23 20:16:36 | 耗时 1 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-03-23 20:16:36 INFO  main com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-03-23 20:16:36 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2022-03-23 20:16:37 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2022-03-23 20:16:37 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-03-23 20:16:43 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-23 20:16:43 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-03-23 20:16:43 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 26 ms
2022-03-23 20:16:43 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2022-03-23 20:16:49 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2022-03-23 20:16:49 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-23 20:16:49 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-23 20:16:49 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2022-03-23 20:16:49 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://192.168.189.1:8088/login
2022-03-23 20:43:24 INFO  http-nio-8088-exec-9 com.hero.sms.common.aspect.LimitAspect IP:192.168.189.1 第 1 次访问key为 [limit_login192.168.189.1]，描述为 [登录接口] 的接口
2022-03-23 20:43:25 INFO  http-nio-8088-exec-9 p6spy 2022-03-23 20:43:25 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 20:43:34 INFO  http-nio-8088-exec-8 com.hero.sms.common.aspect.LimitAspect IP:192.168.189.1 第 2 次访问key为 [limit_login192.168.189.1]，描述为 [登录接口] 的接口
2022-03-23 20:43:34 INFO  http-nio-8088-exec-8 p6spy 2022-03-23 20:43:34 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 20:43:35 INFO  http-nio-8088-exec-8 p6spy 2022-03-23 20:43:35 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 20:43:35 INFO  http-nio-8088-exec-8 p6spy 2022-03-23 20:43:35 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2022-03-23T17:05:33.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2022-03-23 20:43:35 INFO  http-nio-8088-exec-8 p6spy 2022-03-23 20:43:35 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2022-03-23T20:43:35.097+0800', 'Chrome 98', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 'admin');
2022-03-23 20:43:35 INFO  http-nio-8088-exec-10 p6spy 2022-03-23 20:43:35 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-23 20:43:35 INFO  http-nio-8088-exec-10 p6spy 2022-03-23 20:43:35 | 耗时 7 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-23 20:43:35 INFO  http-nio-8088-exec-10 p6spy 2022-03-23 20:43:35 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-23 20:43:36 INFO  http-nio-8088-exec-7 p6spy 2022-03-23 20:43:36 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-23 20:43:36 INFO  http-nio-8088-exec-7 p6spy 2022-03-23 20:43:36 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-23 20:43:36 INFO  http-nio-8088-exec-8 p6spy 2022-03-23 20:43:36 | 耗时 4 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-03-23 20:43:36 INFO  http-nio-8088-exec-9 p6spy 2022-03-23 20:43:36 | 耗时 2 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-23 20:43:36 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 20:43:36 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2022-03-23T20:43:36.950+0800' WHERE (USERNAME = 'admin');
2022-03-23 20:43:36 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 20:43:36 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2022-03-23 20:43:36 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 20:43:36 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-03-23 20:43:36 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 20:43:36 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-03-23 20:43:37 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 20:43:37 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2022-03-23 20:43:37 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 20:43:37 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2022-03-23 20:43:37 INFO  http-nio-8088-exec-7 p6spy 2022-03-23 20:43:37 | 耗时 3 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2022-03-23 20:43:37 INFO  http-nio-8088-exec-9 p6spy 2022-03-23 20:43:37 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2022-03-23 20:43:37 INFO  http-nio-8088-exec-10 p6spy 2022-03-23 20:43:37 | 耗时 0 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2022-03-23 20:43:41 INFO  http-nio-8088-exec-4 p6spy 2022-03-23 20:43:41 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-23 20:43:41 INFO  http-nio-8088-exec-3 p6spy 2022-03-23 20:43:41 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-23T00:00:00.000+0800' AND create_time <= '2022-03-23T23:59:59.000+0800');
2022-03-23 20:43:46 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 20:43:46 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2018-03-23T00:00:00.000+0800' AND create_time <= '2022-03-23T23:59:59.000+0800');
2022-03-23 20:43:46 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 20:43:46 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2018-03-23T00:00:00.000+0800' AND create_time <= '2022-03-23T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-23 20:43:54 INFO  http-nio-8088-exec-10 p6spy 2022-03-23 20:43:54 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-23 20:43:54 INFO  http-nio-8088-exec-7 p6spy 2022-03-23 20:43:54 | 耗时 90 ms | SQL 语句：
SELECT COUNT(1) FROM t_return_record WHERE (req_create_time >= '2022-03-23T00:00:00.000+0800' AND req_create_time <= '2022-03-23T23:59:59.000+0800' AND create_time >= '2022-03-23T00:00:00.000+0800' AND create_time <= '2022-03-23T23:59:59.000+0800');
2022-03-23 20:43:57 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 20:43:57 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id;
2022-03-23 20:43:57 INFO  http-nio-8088-exec-1 p6spy 2022-03-23 20:43:57 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.sms_channel_id, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.sms_channel_id) channelCost ON channelCost.sms_channel_id = cnl.id LEFT JOIN (SELECT sms_channel_id AS property_channel_id, `name` AS property_name, `value` AS property_value FROM t_sms_channel_property WHERE `name` = 'reqUrl' OR `name` = 'host') channelProperty ON channelProperty.property_channel_id = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-23 20:44:18 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 20:44:18 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2018-03-23T00:00:00.000+0800' AND create_time <= '2022-03-23T23:59:59.000+0800');
2022-03-23 20:44:18 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 20:44:18 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2018-03-23T00:00:00.000+0800' AND create_time <= '2022-03-23T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-23 20:44:20 INFO  http-nio-8088-exec-4 p6spy 2022-03-23 20:44:20 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2018-03-23T00:00:00.000+0800' AND create_time <= '2022-03-23T23:59:59.000+0800');
2022-03-23 20:44:20 INFO  Febs-Async-Thread1 p6spy 2022-03-23 20:44:20 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-23T20:44:20.157+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 26, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 23 00:00:00 CST 2018, createEndTime=Wed Mar 23 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-23 20:44:25 INFO  http-nio-8088-exec-3 p6spy 2022-03-23 20:44:25 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2018-03-23T00:00:00.000+0800' AND create_time <= '2022-03-23T23:59:59.000+0800' AND sms_number_area = '+852');
2022-03-23 20:44:25 INFO  Febs-Async-Thread2 p6spy 2022-03-23 20:44:25 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-23T20:44:25.756+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 22, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 23 00:00:00 CST 2018, createEndTime=Wed Mar 23 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-23 20:44:28 INFO  http-nio-8088-exec-6 p6spy 2022-03-23 20:44:28 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2018-03-23T00:00:00.000+0800' AND create_time <= '2022-03-23T23:59:59.000+0800' AND sms_number_area = '+1US');
2022-03-23 20:44:28 INFO  Febs-Async-Thread3 p6spy 2022-03-23 20:44:28 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-23T20:44:28.643+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 13, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 23 00:00:00 CST 2018, createEndTime=Wed Mar 23 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-23 20:44:31 INFO  http-nio-8088-exec-5 p6spy 2022-03-23 20:44:31 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2018-03-23T00:00:00.000+0800' AND create_time <= '2022-03-23T23:59:59.000+0800' AND sms_number_area = '+853');
2022-03-23 20:44:32 INFO  Febs-Async-Thread4 p6spy 2022-03-23 20:44:32 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-23T20:44:31.996+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 9, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 23 00:00:00 CST 2018, createEndTime=Wed Mar 23 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-23 20:44:35 INFO  http-nio-8088-exec-10 p6spy 2022-03-23 20:44:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2018-03-23T00:00:00.000+0800' AND create_time <= '2022-03-23T23:59:59.000+0800');
2022-03-23 20:44:35 INFO  Febs-Async-Thread5 p6spy 2022-03-23 20:44:35 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-23T20:44:35.697+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 10, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 23 00:00:00 CST 2018, createEndTime=Wed Mar 23 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-23 20:44:36 INFO  http-nio-8088-exec-7 p6spy 2022-03-23 20:44:36 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2018-03-23T00:00:00.000+0800' AND create_time <= '2022-03-23T23:59:59.000+0800');
2022-03-23 20:44:36 INFO  http-nio-8088-exec-7 p6spy 2022-03-23 20:44:36 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2018-03-23T00:00:00.000+0800' AND create_time <= '2022-03-23T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-23 21:16:43 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-03-23 21:16:43 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-03-23 21:44:36 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 21:44:36 | 耗时 3 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-23 21:44:36 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 21:44:36 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-23 21:44:36 INFO  http-nio-8088-exec-2 p6spy 2022-03-23 21:44:36 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-23 22:16:43 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-03-23 22:16:43 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-03-23 23:16:43 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-03-23 23:16:43 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-03-23 23:51:05 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2022-03-23 23:51:05 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648037785134 paused.
2022-03-23 23:51:05 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2022-03-23 23:51:06 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2022-03-23 23:51:06 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648037785134 shutting down.
2022-03-23 23:51:06 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648037785134 paused.
2022-03-23 23:51:06 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648037785134 shutdown complete.
2022-03-23 23:51:06 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2022-03-23 23:51:06 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2022-03-23 23:51:06 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2022-03-23 23:51:06 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2022-03-23 23:51:06 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2022-03-23 23:51:06 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
