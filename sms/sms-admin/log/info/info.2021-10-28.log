2021-10-28 21:23:07 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 5924 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-10-28 21:23:07 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-10-28 21:23:10 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-10-28 21:23:10 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-10-28 21:23:11 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 729ms. Found 0 repository interfaces.
2021-10-28 21:23:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$fcb5080d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$b776d058] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$7640b345] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$88ca27c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$d0ef03d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:12 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-10-28 21:23:12 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-10-28 21:23:12 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-10-28 21:23:12 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-10-28 21:23:12 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-10-28 21:23:12 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-10-28 21:23:12 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-10-28 21:23:12 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-10-28 21:23:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:23:18 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-10-28 21:23:18 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-10-28 21:23:18 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-10-28 21:23:18 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-10-28 21:23:19 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-10-28 21:23:19 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 12104 ms
2021-10-28 21:23:20 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-10-28 21:23:23 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-10-28 21:23:23 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-10-28 21:23:23 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-10-28 21:23:23 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-10-28 21:23:23 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-10-28 21:23:23 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1635427403440'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-10-28 21:23:23 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-10-28 21:23:23 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-10-28 21:23:23 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@29ce33e9
2021-10-28 21:23:23 INFO  main p6spy 2021-10-28 21:23:23 | 耗时 7 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-10-28 21:23:25 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-10-28 21:23:25 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-10-28 21:23:25 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-10-28 21:23:25 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-10-28 21:23:25 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-10-28 21:23:26 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-10-28 21:23:26 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-10-28 21:23:26 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-10-28 21:23:26 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-10-28 21:23:26 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-10-28 21:23:26 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-10-28 21:23:26 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 20.724 seconds (JVM running for 23.827)
2021-10-28 21:23:26 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-10-28 21:23:27 INFO  main p6spy 2021-10-28 21:23:27 | 耗时 13 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-10-28 21:23:27 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-10-28 21:23:27 INFO  main p6spy 2021-10-28 21:23:27 | 耗时 10 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-10-28 21:23:27 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-10-28 21:23:27 INFO  main p6spy 2021-10-28 21:23:27 | 耗时 11 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-10-28 21:23:27 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-10-28 21:23:27 INFO  main p6spy 2021-10-28 21:23:27 | 耗时 7 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-10-28 21:23:27 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-10-28 21:23:27 INFO  main p6spy 2021-10-28 21:23:27 | 耗时 8 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-10-28 21:23:27 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-10-28 21:23:27 INFO  main p6spy 2021-10-28 21:23:27 | 耗时 7 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-10-28 21:23:27 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-10-28 21:23:27 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-10-28 21:23:27 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-10-28 21:23:27 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1635170681184"'s failed in-progress jobs.
2021-10-28 21:23:27 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1635427403440 started.
2021-10-28 21:23:28 INFO  main p6spy 2021-10-28 21:23:28 | 耗时 1026 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-10-28 21:23:32 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-10-28 21:23:32 INFO  main p6spy 2021-10-28 21:23:32 | 耗时 13 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-10-28 21:23:32 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-10-28 21:23:32 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-10-28 21:23:32 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-10-28 21:23:32 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-10-28 21:23:50 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-10-28 21:23:50 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-10-28 21:23:50 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-10-28 21:23:50 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-10-28 21:23:50 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-10-28 21:24:34 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-10-28 21:24:34 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-10-28 21:24:34 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 30 ms
2021-10-28 21:24:34 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-10-28 21:25:00 INFO  http-nio-8088-exec-3 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-10-28 21:25:00 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:25:00 | 耗时 19 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-10-28 21:25:09 INFO  http-nio-8088-exec-6 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 2 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-10-28 21:25:09 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 21:25:09 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-10-28 21:25:09 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 21:25:09 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-10-28 21:25:09 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 21:25:09 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2021-10-25T21:44:07.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2021-10-28 21:25:09 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 21:25:09 | 耗时 6 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2021-10-28T21:25:09.125+0800', 'Chrome 93', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 'admin');
2021-10-28 21:25:09 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 21:25:09 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-10-28 21:25:09 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 21:25:09 | 耗时 12 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-10-28 21:25:09 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 21:25:09 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-10-28 21:25:10 INFO  http-nio-8088-exec-8 p6spy 2021-10-28 21:25:10 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-10-28 21:25:10 INFO  http-nio-8088-exec-8 p6spy 2021-10-28 21:25:10 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-10-28 21:25:10 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:25:10 | 耗时 4 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-10-28 21:25:10 INFO  http-nio-8088-exec-9 p6spy 2021-10-28 21:25:10 | 耗时 10 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-10-28 21:25:10 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:25:10 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2021-10-28T21:25:10.365+0800' WHERE (USERNAME = 'admin');
2021-10-28 21:25:10 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:25:10 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2021-10-28 21:25:10 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:25:10 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-10-28 21:25:10 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:25:10 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-10-28 21:25:10 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:25:10 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2021-10-28 21:25:10 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:25:10 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2021-10-28 21:25:10 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 21:25:10 | 耗时 12 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2021-10-28 21:25:10 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:25:10 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2021-10-28 21:25:10 INFO  http-nio-8088-exec-9 p6spy 2021-10-28 21:25:10 | 耗时 11 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2021-10-28 21:25:16 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:25:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2021-10-28 21:25:16 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:25:16 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,10;
2021-10-28 21:25:20 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:25:20 | 耗时 7 ms | SQL 语句：
SELECT ID, DESCREPTION, CODE, CREATE_TIME, PARENT_CODE, NAME, REMARK FROM code_sort;
2021-10-28 21:26:05 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 21:26:05 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code WHERE (SORT_CODE = 'System' AND CODE = 'queryChannelSendRecordSwitch' AND IS_DELETE = '0');
2021-10-28 21:26:05 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 21:26:05 | 耗时 1 ms | SQL 语句：
INSERT INTO code (CODE, CREATE_TIME, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE) VALUES ('queryChannelSendRecordSwitch', '2021-10-28T21:26:05.193+0800', '', '0', 'ON', '', '', 'System');
2021-10-28 21:26:05 INFO  Febs-Async-Thread1 p6spy 2021-10-28 21:26:05 | 耗时 10 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.CodeController.addCode()', '2021-10-28T21:26:05.217+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 34, ' code: Code(id=995, sortCode=System, code=queryChannelSendRecordSwitch, name=ON, parentCode=, orderLevel=null, isDelete=0, description=, remark=, createTime=Thu Oct 28 21:26:05 CST 2021)', '新增Code', 'admin');
2021-10-28 21:26:05 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:26:05 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2021-10-28 21:26:05 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:26:05 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,10;
2021-10-28 21:26:10 INFO  http-nio-8088-exec-9 p6spy 2021-10-28 21:26:10 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2021-10-28 21:26:10 INFO  http-nio-8088-exec-9 p6spy 2021-10-28 21:26:10 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,50;
2021-10-28 21:26:16 INFO  http-nio-8088-exec-5 p6spy 2021-10-28 21:26:16 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE ID = '995';
2021-10-28 21:26:16 INFO  http-nio-8088-exec-4 p6spy 2021-10-28 21:26:16 | 耗时 0 ms | SQL 语句：
SELECT ID, DESCREPTION, CODE, CREATE_TIME, PARENT_CODE, NAME, REMARK FROM code_sort;
2021-10-28 21:26:45 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 21:26:45 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE ID = 995;
2021-10-28 21:26:45 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 21:26:45 | 耗时 1 ms | SQL 语句：
UPDATE code SET CODE = 'queryChannelSendRecordSwitch', PARENT_CODE = '', NAME = 'ON', DESCRIPTION = '', REMARK = '主动查询通道记录状态开关', SORT_CODE = 'System' WHERE ID = 995;
2021-10-28 21:26:45 INFO  Febs-Async-Thread2 p6spy 2021-10-28 21:26:45 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.CodeController.updateCode()', '2021-10-28T21:26:45.967+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 19, ' code: Code(id=995, sortCode=System, code=queryChannelSendRecordSwitch, name=ON, parentCode=, orderLevel=null, isDelete=null, description=, remark=主动查询通道记录状态开关, createTime=null)', '修改Code', 'admin');
2021-10-28 21:26:46 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:26:46 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2021-10-28 21:26:46 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:26:46 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,50;
2021-10-28 21:26:49 INFO  http-nio-8088-exec-10 p6spy 2021-10-28 21:26:49 | 耗时 0 ms | SQL 语句：
SELECT ID, DESCREPTION, CODE, CREATE_TIME, PARENT_CODE, NAME, REMARK FROM code_sort;
2021-10-28 21:27:04 INFO  http-nio-8088-exec-4 p6spy 2021-10-28 21:27:04 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id;
2021-10-28 21:27:04 INFO  http-nio-8088-exec-4 p6spy 2021-10-28 21:27:04 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2021-10-28 21:28:32 INFO  http-nio-8088-exec-9 p6spy 2021-10-28 21:28:32 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel WHERE (code = 'FSGJHTTP');
2021-10-28 21:28:32 INFO  http-nio-8088-exec-9 p6spy 2021-10-28 21:28:32 | 耗时 1 ms | SQL 语句：
INSERT INTO t_sms_channel (support_area, code, weight, description, create_user_name, protocol_type, impl_full_class, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex) VALUES ('+86', 'FSGJHTTP', 0, '', 'admin', 'http', 'com.hero.sms.service.impl.channel.push.QiXinTong', '2021-10-28T21:28:32.079+0800', '', '丰收', 4, 0, '', '');
2021-10-28 21:28:32 INFO  Febs-Async-Thread3 p6spy 2021-10-28 21:28:32 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelController.addSmsChannel()', '2021-10-28T21:28:32.095+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 27, ' smsChannel: SmsChannel(id=13, code=FSGJHTTP, name=丰收, state=4, supportArea=+86, protocolType=http, implFullClass=com.hero.sms.service.impl.channel.push.QiXinTong, areaRegex=, operatorRegex=, areaOperatorRegex=, description=, weight=0, remark=null, isDel=0, createUserName=admin, dayLimit=null, createTime=Thu Oct 28 21:28:32 CST 2021, stateWith=null)', '新增SmsChannel', 'admin');
2021-10-28 21:28:32 INFO  http-nio-8088-exec-10 p6spy 2021-10-28 21:28:32 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id;
2021-10-28 21:28:32 INFO  http-nio-8088-exec-10 p6spy 2021-10-28 21:28:32 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2021-10-28 21:28:42 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:28:42 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_channel_id = 13);
2021-10-28 21:28:42 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:28:42 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value FROM t_sms_channel_cost WHERE (sms_channel_id = 13) LIMIT 0,10;
2021-10-28 21:28:45 INFO  http-nio-8088-exec-5 p6spy 2021-10-28 21:28:45 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value FROM t_sms_channel_cost WHERE Id = 15;
2021-10-28 21:28:50 INFO  http-nio-8088-exec-8 p6spy 2021-10-28 21:28:50 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value FROM t_sms_channel_cost WHERE Id = 15;
2021-10-28 21:28:50 INFO  http-nio-8088-exec-8 p6spy 2021-10-28 21:28:50 | 耗时 1 ms | SQL 语句：
UPDATE t_sms_channel_cost SET name = '+86', sms_channel_id = 13, description = '', sms_type = 1, value = '30' WHERE Id = 15;
2021-10-28 21:28:50 INFO  Febs-Async-Thread4 p6spy 2021-10-28 21:28:50 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelCostController.updateSmsChannelCost()', '2021-10-28T21:28:50.673+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 20, ' smsChannelCost: SmsChannelCost(id=15, smsChannelId=13, smsType=1, name=+86, value=30, description=, remark=null, createTime=null)', '修改SmsChannelCost', 'admin');
2021-10-28 21:28:50 INFO  http-nio-8088-exec-4 p6spy 2021-10-28 21:28:50 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_channel_id = 13);
2021-10-28 21:28:50 INFO  http-nio-8088-exec-4 p6spy 2021-10-28 21:28:50 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value FROM t_sms_channel_cost WHERE (sms_channel_id = 13) LIMIT 0,10;
2021-10-28 21:28:56 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:28:56 | 耗时 9 ms | SQL 语句：
SELECT id, create_time, property_type, name, sms_channel_id, description, remark, value FROM t_sms_channel_property WHERE (sms_channel_id = 13);
2021-10-28 21:33:43 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:33:43 | 耗时 2 ms | SQL 语句：
DELETE FROM t_sms_channel_property WHERE (sms_channel_id = 13);
2021-10-28 21:33:43 INFO  Febs-Async-Thread5 p6spy 2021-10-28 21:33:43 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelPropertyController.updateSmsChannelProperties()', '2021-10-28T21:33:43.370+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 57, ' smsChannelProperties: "[SmsChannelProperty(id=708, smsChannelId=13, propertyType=null, name=reqUrl, value=http://107.148.149.134:8888/sms.aspx, description=, remark=admin添加, createTime=Thu Oct 28 21:33:43 CST 2021), SmsChannelProperty(id=709, smsChannelId=13, propertyType=null, name=account, value=189889, description=, remark=admin添加, createTime=Thu Oct 28 21:33:43 CST 2021), SmsChannelProperty(id=710, smsChannelId=13, propertyType=null, name=orgNo, value=198, description=, remark=admin添加, createTime=Thu Oct 28 21:33:43 CST 2021), SmsChannelProperty(id=711, smsChannelId=13, propertyType=null, name=signKey, value=189889, description=, remark=admin添加, createTime=Thu Oct 28 21:33:43 CST 2021), SmsChannelProperty(id=712, smsChannelId=13, propertyType=null, name=connectTimeout, value=10000, description=, remark=admin添加, createTime=Thu Oct 28 21:33:43 CST 2021), SmsChannelProperty(id=713, smsChannelId=13, propertyType=null, name=readTimeout, value=10000, description=, remark=admin添加, createTime=Thu Oct 28 21:33:43 CST 2021), SmsChannelProperty(id=714, smsChannelId=13, propertyType=null, name=paramType, value=XML, description=, remark=admin添加, createTime=Thu Oct 28 21:33:43 CST 2021), SmsChannelProperty(id=715, smsChannelId=13, propertyType=null, name=notifyUrl, value=http://169.254.130.216:8080/return/qxt/FSGJHTTP/receipt, description=, remark=admin添加, createTime=Thu Oct 28 21:33:43 CST 2021), SmsChannelProperty(id=716, smsChannelId=13, propertyType=null, name=maxQueryNum, value=4000, description=, remark=admin添加, createTime=Thu Oct 28 21:33:43 CST 2021), SmsChannelProperty(id=717, smsChannelId=13, propertyType=null, name=needSleep, value=Y, description=, remark=admin添加, createTime=Thu Oct 28 21:33:43 CST 2021), SmsChannelProperty(id=718, smsChannelId=13, propertyType=null, name=needSleepTime, value=10000, description=, remark=admin添加, createTime=Thu Oct 28 21:33:43 CST 2021), SmsChannelProperty(id=null, smsChannelId=13, propertyType=null, name=, value=, description=null, remark=null, createTime=null)]"', '修改SmsChannelProperty', 'admin');
2021-10-28 21:33:45 INFO  http-nio-8088-exec-9 p6spy 2021-10-28 21:33:45 | 耗时 8 ms | SQL 语句：
SELECT id, create_time, property_type, name, sms_channel_id, description, remark, value FROM t_sms_channel_property WHERE (sms_channel_id = 13);
2021-10-28 21:34:10 INFO  http-nio-8088-exec-10 p6spy 2021-10-28 21:34:10 | 耗时 2 ms | SQL 语句：
DELETE FROM t_sms_channel_property WHERE (sms_channel_id = 13);
2021-10-28 21:34:10 INFO  Febs-Async-Thread1 p6spy 2021-10-28 21:34:10 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelPropertyController.updateSmsChannelProperties()', '2021-10-28T21:34:10.218+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 37, ' smsChannelProperties: "[SmsChannelProperty(id=719, smsChannelId=13, propertyType=null, name=reqUrl, value=http://107.148.149.134:8888/sms.aspx, description=, remark=admin添加, createTime=Thu Oct 28 21:34:10 CST 2021), SmsChannelProperty(id=720, smsChannelId=13, propertyType=null, name=account, value=189889, description=, remark=admin添加, createTime=Thu Oct 28 21:34:10 CST 2021), SmsChannelProperty(id=721, smsChannelId=13, propertyType=null, name=orgNo, value=198, description=, remark=admin添加, createTime=Thu Oct 28 21:34:10 CST 2021), SmsChannelProperty(id=722, smsChannelId=13, propertyType=null, name=signKey, value=189889, description=, remark=admin添加, createTime=Thu Oct 28 21:34:10 CST 2021), SmsChannelProperty(id=723, smsChannelId=13, propertyType=null, name=connectTimeout, value=10000, description=, remark=admin添加, createTime=Thu Oct 28 21:34:10 CST 2021), SmsChannelProperty(id=724, smsChannelId=13, propertyType=null, name=readTimeout, value=10000, description=, remark=admin添加, createTime=Thu Oct 28 21:34:10 CST 2021), SmsChannelProperty(id=725, smsChannelId=13, propertyType=null, name=paramType, value=XML, description=, remark=admin添加, createTime=Thu Oct 28 21:34:10 CST 2021), SmsChannelProperty(id=726, smsChannelId=13, propertyType=null, name=notifyUrl, value=http://169.254.130.216:8080/return/qxt/FSGJHTTP/receipt,http://169.254.130.216:8080/return/qxt/FSGJHTTP/receipt, description=, remark=admin添加, createTime=Thu Oct 28 21:34:10 CST 2021), SmsChannelProperty(id=727, smsChannelId=13, propertyType=null, name=maxQueryNum, value=4000, description=, remark=admin添加, createTime=Thu Oct 28 21:34:10 CST 2021), SmsChannelProperty(id=728, smsChannelId=13, propertyType=null, name=needSleep, value=Y, description=, remark=admin添加, createTime=Thu Oct 28 21:34:10 CST 2021), SmsChannelProperty(id=729, smsChannelId=13, propertyType=null, name=needSleepTime, value=10000, description=, remark=admin添加, createTime=Thu Oct 28 21:34:10 CST 2021), SmsChannelProperty(id=null, smsChannelId=13, propertyType=null, name=, value=, description=null, remark=null, createTime=null)]"', '修改SmsChannelProperty', 'admin');
2021-10-28 21:34:26 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:34:26 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_job_log;
2021-10-28 21:34:26 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:34:26 | 耗时 0 ms | SQL 语句：
SELECT LOG_ID, method_name, error, params, job_id, times, create_time, bean_name, status FROM t_job_log ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 21:34:36 INFO  http-nio-8088-exec-4 p6spy 2021-10-28 21:34:36 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2021-10-28 21:34:36 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:34:36 | 耗时 12 ms | SQL 语句：
SELECT MENU_ID, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, MODIFY_TIME, CREATE_TIME, PERMS FROM t_menu ORDER BY ORDER_NUM ASC;
2021-10-28 21:34:36 INFO  http-nio-8088-exec-4 p6spy 2021-10-28 21:34:36 | 耗时 2 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2021-10-28 21:34:44 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 21:34:44 | 耗时 1 ms | SQL 语句：
UPDATE t_role SET MODIFY_TIME = '2021-10-28T21:34:44.905+0800', ROLE_NAME = '系统管理员', REMARK = '系统管理员，拥有所有操作权限 ^_^' WHERE ROLE_ID = 1;
2021-10-28 21:34:44 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 21:34:44 | 耗时 12 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('1'));
2021-10-28 21:34:45 INFO  Febs-Async-Thread2 p6spy 2021-10-28 21:34:45 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.RoleController.updateRole()', '2021-10-28T21:34:45.070+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 166, ' role: "Role(roleId=1, roleName=系统管理员, remark=系统管理员，拥有所有操作权限 ^_^, createTime=null, modifyTime=Thu Oct 28 21:34:44 CST 2021, menuIds=1,3,11,12,13,286,160,161,4,14,15,16,162,5,17,18,19,163,6,20,21,22,164,176,177,178,179,180,181,288,289,182,183,184,365,366,367,368,370,371,374,186,195,257,287,320,380,381,187,188,189,190,191,205,219,197,198,199,295,306,372,192,193,258,263,303,316,318,329,338,340,341,359,200,201,202,203,211,206,305,360,361,362,207,208,209,210,220,221,222,231,194,262,227,228,229,373,375,376,377,378,379,259,260,347,382,383,261,346,384,385,387,388,300,301,302,314,325,345,213,246,279,315,354,247,280,285,298,304,317,363,364,248,281,254,256,255,242,243,244,245,274,275,276,277,290,291,292,355,356,357,348,349,350,351,212,214,297,339,352,353,386,223,224,225,226,215,216,217,218,249,250,251,252,253,307,308,309,310,311,312,313,337,344,264,278,265,266,293,330,326,331,327,335,328,336,299,332,319,333,321,334,267,268,271,282,269,272,283,270,273,284,322,323,324,2,8,23,10,24,170,136,171,172,127,128,129,131,175,101,102,103,104,105,106,107,108,173,109,110,174,137,138,165,139,166,115,132,133,135,134,126,159,116,117,119,121,122,123,118,125,167,168,169)"', '修改角色', 'admin');
2021-10-28 21:34:45 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:34:45 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-10-28 21:34:45 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:34:45 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-10-28 21:34:45 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:34:45 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2021-10-28 21:34:45 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:34:45 | 耗时 4 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2021-10-28 21:35:04 INFO  http-nio-8088-exec-1 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-10-28 21:35:04 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:35:04 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-10-28 21:35:14 INFO  http-nio-8088-exec-5 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 2 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-10-28 21:35:14 INFO  http-nio-8088-exec-5 p6spy 2021-10-28 21:35:14 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-10-28 21:35:14 INFO  http-nio-8088-exec-5 p6spy 2021-10-28 21:35:14 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-10-28 21:35:14 INFO  http-nio-8088-exec-5 p6spy 2021-10-28 21:35:14 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2021-10-28T21:25:10.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2021-10-28 21:35:14 INFO  http-nio-8088-exec-5 p6spy 2021-10-28 21:35:14 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2021-10-28T21:35:14.778+0800', 'Chrome 93', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 'admin');
2021-10-28 21:35:14 INFO  http-nio-8088-exec-8 p6spy 2021-10-28 21:35:14 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-10-28 21:35:14 INFO  http-nio-8088-exec-8 p6spy 2021-10-28 21:35:14 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-10-28 21:35:14 INFO  http-nio-8088-exec-8 p6spy 2021-10-28 21:35:14 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-10-28 21:35:15 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 21:35:15 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-10-28 21:35:15 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 21:35:15 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-10-28 21:35:15 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:35:15 | 耗时 12 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-10-28 21:35:15 INFO  http-nio-8088-exec-5 p6spy 2021-10-28 21:35:15 | 耗时 45 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-10-28 21:35:15 INFO  http-nio-8088-exec-9 p6spy 2021-10-28 21:35:15 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2021-10-28T21:35:15.974+0800' WHERE (USERNAME = 'admin');
2021-10-28 21:35:15 INFO  http-nio-8088-exec-9 p6spy 2021-10-28 21:35:15 | 耗时 9 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2021-10-28 21:35:16 INFO  http-nio-8088-exec-9 p6spy 2021-10-28 21:35:16 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-10-28 21:35:16 INFO  http-nio-8088-exec-9 p6spy 2021-10-28 21:35:16 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2021-10-28 21:35:16 INFO  http-nio-8088-exec-9 p6spy 2021-10-28 21:35:16 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2021-10-28 21:35:16 INFO  http-nio-8088-exec-9 p6spy 2021-10-28 21:35:16 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2021-10-28 21:35:16 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 21:35:16 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2021-10-28 21:35:16 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:35:16 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2021-10-28 21:35:16 INFO  http-nio-8088-exec-8 p6spy 2021-10-28 21:35:16 | 耗时 0 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2021-10-28 21:35:19 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:35:19 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM t_job;
2021-10-28 21:35:19 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:35:19 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 21:35:27 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:35:27 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job WHERE JOB_ID = 2;
2021-10-28 21:36:33 INFO  http-nio-8088-exec-4 p6spy 2021-10-28 21:36:33 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job (cron_expression, create_time, method_name, remark, bean_name, params, status) VALUES ('0 0/5 * * * ? ', '2021-10-28T21:36:33.899+0800', 'run', '丰收主动查询记录状态任务', 'QueryChannelSendReco', '', '1');
2021-10-28 21:36:33 INFO  Febs-Async-Thread3 p6spy 2021-10-28 21:36:33 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.job.controller.JobController.addJob()', '2021-10-28T21:36:33.938+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 40, ' job: "Job(jobId=6, beanName=QueryChannelSendReco, methodName=run, params=, cronExpression=0 0/5 * * * ? , status=1, remark=丰收主动查询记录状态任务, createTime=Thu Oct 28 21:36:33 CST 2021, createTimeFrom=null, createTimeTo=null)"', '新增定时任务', 'admin');
2021-10-28 21:36:33 INFO  http-nio-8088-exec-5 p6spy 2021-10-28 21:36:33 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_job;
2021-10-28 21:36:33 INFO  http-nio-8088-exec-5 p6spy 2021-10-28 21:36:33 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 21:37:03 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 21:37:03 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job WHERE JOB_ID = 6;
2021-10-28 21:37:03 INFO  Febs-Async-Thread4 p6spy 2021-10-28 21:37:03 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.job.controller.JobController.runJob()', '2021-10-28T21:37:03.324+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 30, ' jobIds: "6"', '执行定时任务', 'admin');
2021-10-28 21:37:03 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:37:03 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_job;
2021-10-28 21:37:03 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:37:03 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 21:37:03 INFO  FEBS_Scheduler_Worker-1 com.hero.sms.job.util.ScheduleJob 任务准备执行，任务ID：6
2021-10-28 21:37:03 INFO  FEBS_Scheduler_Worker-1 p6spy 2021-10-28 21:37:03 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (method_name, error, params, job_id, times, create_time, bean_name, status) VALUES ('run', 'org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named ''QueryChannelSendReco'' available', '', 6, 9, '2021-10-28T21:37:03.411+0800', 'QueryChannelSendReco', '1');
2021-10-28 21:37:21 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:37:21 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job WHERE JOB_ID = 6;
2021-10-28 21:38:59 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 21:38:59 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET cron_expression = '0 0/5 * * * ? ', method_name = 'run', remark = '丰收主动查询记录状态任务', bean_name = 'getChannelRecordTask', params = '', status = '1' WHERE JOB_ID = 6;
2021-10-28 21:38:59 INFO  Febs-Async-Thread5 p6spy 2021-10-28 21:38:59 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.job.controller.JobController.updateJob()', '2021-10-28T21:38:59.625+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 57, ' job: "Job(jobId=6, beanName=getChannelRecordTask, methodName=run, params=, cronExpression=0 0/5 * * * ? , status=1, remark=丰收主动查询记录状态任务, createTime=null, createTimeFrom=null, createTimeTo=null)"', '修改定时任务', 'admin');
2021-10-28 21:38:59 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:38:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_job;
2021-10-28 21:38:59 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:38:59 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 21:39:48 INFO  http-nio-8088-exec-8 p6spy 2021-10-28 21:39:48 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job WHERE JOB_ID = 6;
2021-10-28 21:39:48 INFO  Febs-Async-Thread1 p6spy 2021-10-28 21:39:48 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.job.controller.JobController.runJob()', '2021-10-28T21:39:48.178+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 23, ' jobIds: "6"', '执行定时任务', 'admin');
2021-10-28 21:39:48 INFO  FEBS_Scheduler_Worker-2 com.hero.sms.job.util.ScheduleJob 任务准备执行，任务ID：6
2021-10-28 21:39:48 INFO  FEBS_Scheduler_Worker-2 p6spy 2021-10-28 21:39:48 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (method_name, error, params, job_id, times, create_time, bean_name, status) VALUES ('run', 'org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named ''getChannelRecordTask'' available', '', 6, 0, '2021-10-28T21:39:48.196+0800', 'getChannelRecordTask', '1');
2021-10-28 21:39:48 INFO  http-nio-8088-exec-4 p6spy 2021-10-28 21:39:48 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_job;
2021-10-28 21:39:48 INFO  http-nio-8088-exec-4 p6spy 2021-10-28 21:39:48 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 21:40:02 INFO  http-nio-8088-exec-5 p6spy 2021-10-28 21:40:02 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job WHERE JOB_ID = 6;
2021-10-28 21:40:14 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:40:14 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET cron_expression = '0 0/5 * * * ? ', method_name = 'run', remark = '丰收主动查询记录状态任务', bean_name = 'GetChannelRecordTask', params = '', status = '1' WHERE JOB_ID = 6;
2021-10-28 21:40:14 INFO  Febs-Async-Thread2 p6spy 2021-10-28 21:40:14 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.job.controller.JobController.updateJob()', '2021-10-28T21:40:14.576+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 36, ' job: "Job(jobId=6, beanName=GetChannelRecordTask, methodName=run, params=, cronExpression=0 0/5 * * * ? , status=1, remark=丰收主动查询记录状态任务, createTime=null, createTimeFrom=null, createTimeTo=null)"', '修改定时任务', 'admin');
2021-10-28 21:40:14 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:40:14 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_job;
2021-10-28 21:40:14 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:40:14 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 21:40:38 INFO  http-nio-8088-exec-9 p6spy 2021-10-28 21:40:38 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job WHERE JOB_ID = 5;
2021-10-28 21:40:47 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-10-28 21:40:47 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1635427403440 paused.
2021-10-28 21:40:47 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-10-28 21:40:47 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-10-28 21:40:47 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1635427403440 shutting down.
2021-10-28 21:40:47 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1635427403440 paused.
2021-10-28 21:40:47 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1635427403440 shutdown complete.
2021-10-28 21:40:48 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-10-28 21:40:48 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-10-28 21:40:48 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-10-28 21:40:48 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-10-28 21:40:48 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-10-28 21:40:48 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2021-10-28 21:41:11 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 35940 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-10-28 21:41:11 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-10-28 21:41:16 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-10-28 21:41:16 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-10-28 21:41:17 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 1063ms. Found 0 repository interfaces.
2021-10-28 21:41:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$93370f9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$4df8d7e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:18 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$cc2bad2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$1f4c2f56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$67710b63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:19 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-10-28 21:41:19 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-10-28 21:41:19 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-10-28 21:41:19 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-10-28 21:41:19 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-10-28 21:41:19 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-10-28 21:41:19 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-10-28 21:41:19 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-10-28 21:41:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 21:41:24 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-10-28 21:41:24 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-10-28 21:41:24 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-10-28 21:41:24 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-10-28 21:41:25 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-10-28 21:41:25 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 13378 ms
2021-10-28 21:41:26 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-10-28 21:41:29 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-10-28 21:41:29 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-10-28 21:41:29 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-10-28 21:41:29 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-10-28 21:41:29 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-10-28 21:41:29 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1635428489224'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-10-28 21:41:29 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-10-28 21:41:29 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-10-28 21:41:29 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2a317af7
2021-10-28 21:41:29 INFO  main p6spy 2021-10-28 21:41:29 | 耗时 7 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-10-28 21:41:30 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-10-28 21:41:31 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-10-28 21:41:31 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-10-28 21:41:31 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-10-28 21:41:31 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-10-28 21:41:32 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-10-28 21:41:32 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-10-28 21:41:32 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-10-28 21:41:32 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-10-28 21:41:32 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-10-28 21:41:32 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-10-28 21:41:32 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 21.748 seconds (JVM running for 26.241)
2021-10-28 21:41:32 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-10-28 21:41:32 INFO  main p6spy 2021-10-28 21:41:32 | 耗时 8 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-10-28 21:41:32 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-10-28 21:41:32 INFO  main p6spy 2021-10-28 21:41:32 | 耗时 6 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-10-28 21:41:32 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-10-28 21:41:32 INFO  main p6spy 2021-10-28 21:41:32 | 耗时 9 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-10-28 21:41:32 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-10-28 21:41:32 INFO  main p6spy 2021-10-28 21:41:32 | 耗时 6 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-10-28 21:41:32 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-10-28 21:41:32 INFO  main p6spy 2021-10-28 21:41:32 | 耗时 6 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-10-28 21:41:32 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-10-28 21:41:32 INFO  main p6spy 2021-10-28 21:41:32 | 耗时 7 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-10-28 21:41:32 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-10-28 21:41:33 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-10-28 21:41:33 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-10-28 21:41:33 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1635427403440"'s failed in-progress jobs.
2021-10-28 21:41:33 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1635428489224 started.
2021-10-28 21:41:33 INFO  main p6spy 2021-10-28 21:41:33 | 耗时 828 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-10-28 21:41:38 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-10-28 21:41:38 INFO  main p6spy 2021-10-28 21:41:38 | 耗时 8 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-10-28 21:41:38 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-10-28 21:41:38 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-10-28 21:41:38 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-10-28 21:41:38 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-10-28 21:41:57 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-10-28 21:41:57 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-10-28 21:41:57 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-10-28 21:41:57 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-10-28 21:41:57 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-10-28 21:42:04 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-10-28 21:42:04 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-10-28 21:42:04 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 21 ms
2021-10-28 21:42:04 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-10-28 21:42:04 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:42:04 | 耗时 11 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-10-28 21:42:04 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:42:04 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-10-28 21:42:04 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:42:04 | 耗时 10 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2021-10-28 21:42:07 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:42:07 | 耗时 7 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2021-10-28 21:42:07 INFO  http-nio-8088-exec-10 p6spy 2021-10-28 21:42:07 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2021-10-28 21:42:07 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 21:42:07 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_job;
2021-10-28 21:42:07 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 21:42:07 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 21:42:12 INFO  http-nio-8088-exec-5 p6spy 2021-10-28 21:42:12 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job WHERE JOB_ID = 6;
2021-10-28 21:42:20 INFO  http-nio-8088-exec-9 p6spy 2021-10-28 21:42:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET cron_expression = '0 0/5 * * * ? ', method_name = 'run', remark = '丰收主动查询记录状态任务', bean_name = 'getChannelRecordTask', params = '', status = '1' WHERE JOB_ID = 6;
2021-10-28 21:42:20 INFO  http-nio-8088-exec-4 p6spy 2021-10-28 21:42:20 | 耗时 10 ms | SQL 语句：
SELECT COUNT(1) FROM t_job;
2021-10-28 21:42:20 INFO  http-nio-8088-exec-4 p6spy 2021-10-28 21:42:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 21:42:20 INFO  Febs-Async-Thread1 p6spy 2021-10-28 21:42:20 | 耗时 13 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.job.controller.JobController.updateJob()', '2021-10-28T21:42:20.894+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 81, ' job: "Job(jobId=6, beanName=getChannelRecordTask, methodName=run, params=, cronExpression=0 0/5 * * * ? , status=1, remark=丰收主动查询记录状态任务, createTime=null, createTimeFrom=null, createTimeTo=null)"', '修改定时任务', 'admin');
2021-10-28 21:42:27 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:42:27 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job WHERE JOB_ID = 6;
2021-10-28 21:42:27 INFO  Febs-Async-Thread2 p6spy 2021-10-28 21:42:27 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.job.controller.JobController.runJob()', '2021-10-28T21:42:27.049+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 30, ' jobIds: "6"', '执行定时任务', 'admin');
2021-10-28 21:42:27 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:42:27 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_job;
2021-10-28 21:42:27 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:42:27 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 21:42:27 INFO  FEBS_Scheduler_Worker-1 com.hero.sms.job.util.ScheduleJob 任务准备执行，任务ID：6
2021-10-28 21:42:27 INFO  FEBS_Scheduler_Worker-1 com.hero.sms.job.util.ScheduleJob 任务执行完毕，任务ID：6 总共耗时：4 毫秒
2021-10-28 21:42:27 INFO  FEBS_Scheduler_Worker-1 p6spy 2021-10-28 21:42:27 | 耗时 10 ms | SQL 语句：
INSERT INTO t_job_log (method_name, params, job_id, times, create_time, bean_name, status) VALUES ('run', '', 6, 4, '2021-10-28T21:42:27.174+0800', 'getChannelRecordTask', '0');
2021-10-28 21:42:47 INFO  http-nio-8088-exec-10 p6spy 2021-10-28 21:42:47 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job WHERE JOB_ID = 6;
2021-10-28 21:42:47 INFO  Febs-Async-Thread3 p6spy 2021-10-28 21:42:47 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.job.controller.JobController.runJob()', '2021-10-28T21:42:47.247+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 18, ' jobIds: "6"', '执行定时任务', 'admin');
2021-10-28 21:42:47 INFO  FEBS_Scheduler_Worker-2 com.hero.sms.job.util.ScheduleJob 任务准备执行，任务ID：6
2021-10-28 21:42:47 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 21:42:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_job;
2021-10-28 21:42:47 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 21:42:47 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 21:42:58 INFO  FEBS_Scheduler_Worker-2 com.hero.sms.job.util.ScheduleJob 任务执行完毕，任务ID：6 总共耗时：11154 毫秒
2021-10-28 21:42:58 INFO  FEBS_Scheduler_Worker-2 p6spy 2021-10-28 21:42:58 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (method_name, params, job_id, times, create_time, bean_name, status) VALUES ('run', '', 6, 11154, '2021-10-28T21:42:47.261+0800', 'getChannelRecordTask', '0');
2021-10-28 21:43:07 INFO  http-nio-8088-exec-8 p6spy 2021-10-28 21:43:07 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2021-10-28 21:43:07 INFO  http-nio-8088-exec-8 p6spy 2021-10-28 21:43:07 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,10;
2021-10-28 21:43:10 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:43:10 | 耗时 11 ms | SQL 语句：
SELECT ID, DESCREPTION, CODE, CREATE_TIME, PARENT_CODE, NAME, REMARK FROM code_sort;
2021-10-28 21:44:05 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:44:05 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code WHERE (SORT_CODE = 'System' AND CODE = 'queryChannelCode' AND IS_DELETE = '0');
2021-10-28 21:44:05 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:44:05 | 耗时 1 ms | SQL 语句：
INSERT INTO code (CODE, CREATE_TIME, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE) VALUES ('queryChannelCode', '2021-10-28T21:44:05.237+0800', '', '0', 'FSGJHTTP', '', '需要主动查询记录的通道编码，多个用英文逗号分隔', 'System');
2021-10-28 21:44:05 INFO  Febs-Async-Thread4 p6spy 2021-10-28 21:44:05 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.CodeController.addCode()', '2021-10-28T21:44:05.253+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 27, ' code: Code(id=996, sortCode=System, code=queryChannelCode, name=FSGJHTTP, parentCode=, orderLevel=null, isDelete=0, description=, remark=需要主动查询记录的通道编码，多个用英文逗号分隔, createTime=Thu Oct 28 21:44:05 CST 2021)', '新增Code', 'admin');
2021-10-28 21:44:05 INFO  http-nio-8088-exec-10 p6spy 2021-10-28 21:44:05 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2021-10-28 21:44:05 INFO  http-nio-8088-exec-10 p6spy 2021-10-28 21:44:05 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,10;
2021-10-28 21:44:08 INFO  http-nio-8088-exec-2 com.hero.sms.common.DatabaseCache Begin-缓存字典
2021-10-28 21:44:08 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 21:44:08 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-10-28 21:44:08 INFO  http-nio-8088-exec-2 com.hero.sms.common.DatabaseCache End-字典缓存完成
2021-10-28 21:44:29 INFO  Febs-Async-Thread5 p6spy 2021-10-28 21:44:29 | 耗时 11 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.CodeController.loadReladCodeCache()', '2021-10-28T21:44:29.840+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 21031, '', '刷新字典模块缓存', 'admin');
2021-10-28 21:44:44 INFO  http-nio-8088-exec-5 p6spy 2021-10-28 21:44:44 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job WHERE JOB_ID = 6;
2021-10-28 21:44:44 INFO  Febs-Async-Thread1 p6spy 2021-10-28 21:44:44 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.job.controller.JobController.runJob()', '2021-10-28T21:44:44.439+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 27, ' jobIds: "6"', '执行定时任务', 'admin');
2021-10-28 21:44:44 INFO  FEBS_Scheduler_Worker-3 com.hero.sms.job.util.ScheduleJob 任务准备执行，任务ID：6
2021-10-28 21:44:44 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 21:44:44 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_job;
2021-10-28 21:44:44 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 21:44:44 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 21:44:58 INFO  pool-5-thread-1 p6spy 2021-10-28 21:44:58 | 耗时 35 ms | SQL 语句：
SELECT * FROM t_sms_channel WHERE code = 'FSGJHTTP';
2021-10-28 21:44:58 INFO  pool-5-thread-1 p6spy 2021-10-28 21:44:58 | 耗时 22 ms | SQL 语句：
SELECT * FROM t_sms_channel_property WHERE sms_channel_id = 13;
2021-10-28 21:44:58 INFO  pool-5-thread-1 p6spy 2021-10-28 21:44:58 | 耗时 24 ms | SQL 语句：
SELECT * FROM t_sms_channel_cost WHERE sms_channel_id = 13;
2021-10-28 21:45:08 INFO  pool-5-thread-1 com.hero.sms.service.impl.channel.push.QiXinTong 通道【13】【QXT】查询状态【提交参数】:{"password":"189889","action":"query","userid":"198","account":"189889"}
2021-10-28 21:45:23 INFO  FEBS_Scheduler_Worker-3 com.hero.sms.job.util.ScheduleJob 任务执行完毕，任务ID：6 总共耗时：39212 毫秒
2021-10-28 21:45:23 INFO  FEBS_Scheduler_Worker-3 p6spy 2021-10-28 21:45:23 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (method_name, params, job_id, times, create_time, bean_name, status) VALUES ('run', '', 6, 39212, '2021-10-28T21:44:44.459+0800', 'getChannelRecordTask', '0');
2021-10-28 21:45:52 INFO  http-nio-8088-exec-4 p6spy 2021-10-28 21:45:52 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id;
2021-10-28 21:45:52 INFO  http-nio-8088-exec-4 p6spy 2021-10-28 21:45:52 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2021-10-28 21:46:00 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:46:00 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE id = 13;
2021-10-28 21:46:07 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:46:07 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel WHERE (code = 'FSGJHTTP' AND id <> 13);
2021-10-28 21:46:07 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:46:07 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE id = 13;
2021-10-28 21:46:07 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:46:07 | 耗时 1 ms | SQL 语句：
UPDATE t_sms_channel SET support_area = '+86', code = 'FSGJHTTP', weight = 0, description = '', protocol_type = 'http', impl_full_class = 'com.hero.sms.service.impl.channel.push.QiXinTong', area_regex = '', name = '丰收HTTP', state = 4, area_operator_regex = '', operator_regex = '' WHERE id = 13;
2021-10-28 21:46:07 INFO  Febs-Async-Thread2 p6spy 2021-10-28 21:46:07 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelController.updateSmsChannel()', '2021-10-28T21:46:07.297+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 33, ' smsChannel: SmsChannel(id=13, code=FSGJHTTP, name=丰收HTTP, state=4, supportArea=+86, protocolType=http, implFullClass=com.hero.sms.service.impl.channel.push.QiXinTong, areaRegex=, operatorRegex=, areaOperatorRegex=, description=, weight=0, remark=null, isDel=null, createUserName=null, dayLimit=null, createTime=null, stateWith=null)', '修改SmsChannel', 'admin');
2021-10-28 21:46:07 INFO  http-nio-8088-exec-10 p6spy 2021-10-28 21:46:07 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id;
2021-10-28 21:46:07 INFO  http-nio-8088-exec-10 p6spy 2021-10-28 21:46:07 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2021-10-28 21:46:09 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 21:46:09 | 耗时 0 ms | SQL 语句：
SELECT id, create_time, property_type, name, sms_channel_id, description, remark, value FROM t_sms_channel_property WHERE (sms_channel_id = 13);
2021-10-28 21:46:26 INFO  http-nio-8088-exec-5 p6spy 2021-10-28 21:46:26 | 耗时 5 ms | SQL 语句：
DELETE FROM t_sms_channel_property WHERE (sms_channel_id = 13);
2021-10-28 21:46:26 INFO  Febs-Async-Thread3 p6spy 2021-10-28 21:46:26 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelPropertyController.updateSmsChannelProperties()', '2021-10-28T21:46:26.900+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 64, ' smsChannelProperties: "[SmsChannelProperty(id=730, smsChannelId=13, propertyType=null, name=reqUrl, value=http://107.148.149.134:8888/sms.aspx, description=, remark=admin添加, createTime=Thu Oct 28 21:46:26 CST 2021), SmsChannelProperty(id=731, smsChannelId=13, propertyType=null, name=account, value=189889, description=, remark=admin添加, createTime=Thu Oct 28 21:46:26 CST 2021), SmsChannelProperty(id=732, smsChannelId=13, propertyType=null, name=orgNo, value=198, description=, remark=admin添加, createTime=Thu Oct 28 21:46:26 CST 2021), SmsChannelProperty(id=733, smsChannelId=13, propertyType=null, name=signKey, value=189889, description=, remark=admin添加, createTime=Thu Oct 28 21:46:26 CST 2021), SmsChannelProperty(id=734, smsChannelId=13, propertyType=null, name=connectTimeout, value=10000, description=, remark=admin添加, createTime=Thu Oct 28 21:46:26 CST 2021), SmsChannelProperty(id=735, smsChannelId=13, propertyType=null, name=readTimeout, value=10000, description=, remark=admin添加, createTime=Thu Oct 28 21:46:26 CST 2021), SmsChannelProperty(id=736, smsChannelId=13, propertyType=null, name=paramType, value=XML, description=, remark=admin添加, createTime=Thu Oct 28 21:46:26 CST 2021), SmsChannelProperty(id=737, smsChannelId=13, propertyType=null, name=notifyUrl, value=http://169.254.130.216:8080/return/qxt/FSGJHTTP/receipt,http://169.254.130.216:8080/return/qxt/FSGJHTTP/receipt, description=, remark=admin添加, createTime=Thu Oct 28 21:46:26 CST 2021), SmsChannelProperty(id=738, smsChannelId=13, propertyType=null, name=maxQueryNum, value=4000, description=, remark=admin添加, createTime=Thu Oct 28 21:46:26 CST 2021), SmsChannelProperty(id=739, smsChannelId=13, propertyType=null, name=needSleep, value=Y, description=, remark=admin添加, createTime=Thu Oct 28 21:46:26 CST 2021), SmsChannelProperty(id=740, smsChannelId=13, propertyType=null, name=needSleepTime, value=10000, description=, remark=admin添加, createTime=Thu Oct 28 21:46:26 CST 2021), SmsChannelProperty(id=741, smsChannelId=13, propertyType=null, name=queryUrl, value=http://107.148.149.134:8888/statusApi.aspx, description=, remark=admin添加, createTime=Thu Oct 28 21:46:26 CST 2021), SmsChannelProperty(id=null, smsChannelId=13, propertyType=null, name=, value=, description=null, remark=null, createTime=null)]"', '修改SmsChannelProperty', 'admin');
2021-10-28 21:46:35 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 21:46:35 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job WHERE JOB_ID = 6;
2021-10-28 21:46:36 INFO  Febs-Async-Thread4 p6spy 2021-10-28 21:46:36 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.job.controller.JobController.runJob()', '2021-10-28T21:46:36.009+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 14, ' jobIds: "6"', '执行定时任务', 'admin');
2021-10-28 21:46:36 INFO  FEBS_Scheduler_Worker-4 com.hero.sms.job.util.ScheduleJob 任务准备执行，任务ID：6
2021-10-28 21:46:36 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:46:36 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_job;
2021-10-28 21:46:36 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:46:36 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 21:46:52 INFO  pool-6-thread-1 p6spy 2021-10-28 21:46:52 | 耗时 0 ms | SQL 语句：
SELECT * FROM t_sms_channel WHERE code = 'FSGJHTTP';
2021-10-28 21:46:52 INFO  pool-6-thread-1 p6spy 2021-10-28 21:46:52 | 耗时 0 ms | SQL 语句：
SELECT * FROM t_sms_channel_property WHERE sms_channel_id = 13;
2021-10-28 21:46:52 INFO  pool-6-thread-1 p6spy 2021-10-28 21:46:52 | 耗时 0 ms | SQL 语句：
SELECT * FROM t_sms_channel_cost WHERE sms_channel_id = 13;
2021-10-28 21:46:58 INFO  pool-6-thread-1 com.hero.sms.service.impl.channel.push.QiXinTong 通道【13】【QXT】查询状态【提交参数】:{"password":"189889","action":"query","userid":"198","account":"189889"}
2021-10-28 21:46:59 INFO  pool-6-thread-1 com.hero.sms.service.impl.channel.push.QiXinTong 通道【13】【QXT】查询状态【返回参数】:<?xml version="1.0" encoding="utf-8" ?><returnsms>
 <errorstatus>
 <error>4</error>
 <remark>参数不正确</remark>
 </errorstatus>
 </returnsms>
 
2021-10-28 21:48:12 INFO  FEBS_Scheduler_Worker-4 com.hero.sms.job.util.ScheduleJob 任务执行完毕，任务ID：6 总共耗时：96035 毫秒
2021-10-28 21:48:12 INFO  FEBS_Scheduler_Worker-4 p6spy 2021-10-28 21:48:12 | 耗时 18 ms | SQL 语句：
INSERT INTO t_job_log (method_name, params, job_id, times, create_time, bean_name, status) VALUES ('run', '', 6, 96035, '2021-10-28T21:46:36.027+0800', 'getChannelRecordTask', '0');
2021-10-28 21:51:47 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:51:47 | 耗时 15 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-10-28 21:51:47 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:51:47 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2021-10-28 21:51:47 INFO  Febs-Async-Thread5 p6spy 2021-10-28 21:51:47 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-10-28T21:51:47.652+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 80, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-10-28 21:51:50 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:51:50 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2021-10-28 21:51:50 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:51:50 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2021-10-28 21:51:50 INFO  Febs-Async-Thread1 p6spy 2021-10-28 21:51:50 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-10-28T21:51:50.235+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 26, ' request: "QueryRequest(pageSize=10, pageNum=2, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2021-10-28 21:51:53 INFO  http-nio-8088-exec-10 p6spy 2021-10-28 21:51:53 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2021-10-28 21:51:53 INFO  http-nio-8088-exec-10 p6spy 2021-10-28 21:51:53 | 耗时 9 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-10-28 21:52:06 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 21:52:06 | 耗时 1 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2021-10-28 21:52:06 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 21:52:06 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2021-10-28 21:52:06 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 21:52:06 | 耗时 6 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-10-28 21:52:06 INFO  Febs-Async-Thread2 p6spy 2021-10-28 21:52:06 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-10-28T21:52:06.384+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 51, ' organizationCosts: "[OrganizationCost(id=94, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=46, state=1, channelId=13, description=, remark=admin添加, createDate=Thu Oct 28 21:52:06 CST 2021), OrganizationCost(id=95, organizationCode=20200331160443FKDW, smsType=1, costName=+853, costValue=55, state=1, channelId=, description=, remark=admin添加, createDate=Thu Oct 28 21:52:06 CST 2021)]"', '商户用户资费更新', 'admin');
2021-10-28 21:55:44 INFO  http-nio-8088-exec-8 p6spy 2021-10-28 21:55:44 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2021-10-28T00:00:00.000+0800' AND create_time <= '2021-10-28T23:59:59.000+0800' AND audit_state <> 1);
2021-10-28 21:55:44 INFO  http-nio-8088-exec-8 p6spy 2021-10-28 21:55:44 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2021-10-28T00:00:00.000+0800' AND create_time <= '2021-10-28T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 21:55:46 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 21:55:46 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2021-10-28 21:55:46 INFO  http-nio-8088-exec-4 p6spy 2021-10-28 21:55:46 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2021-10-28T00:00:00.000+0800' AND create_time <= '2021-10-28T23:59:59.000+0800');
2021-10-28 21:55:48 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 21:55:48 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2021-10-28T00:00:00.000+0800' AND create_time <= '2021-10-28T23:59:59.000+0800');
2021-10-28 21:56:01 INFO  http-nio-8088-exec-10 p6spy 2021-10-28 21:56:01 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE id = 13;
2021-10-28 21:56:01 INFO  http-nio-8088-exec-10 p6spy 2021-10-28 21:56:01 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE id = 13;
2021-10-28 21:56:01 INFO  http-nio-8088-exec-10 p6spy 2021-10-28 21:56:01 | 耗时 3 ms | SQL 语句：
UPDATE t_sms_channel SET state = 1 WHERE (id = 13);
2021-10-28 21:56:01 INFO  Febs-Async-Thread3 p6spy 2021-10-28 21:56:01 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelController.smsChannelSwitch()', '2021-10-28T21:56:01.682+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 28, ' channelIds: "13" state: "1"', '网关开/关', 'admin');
2021-10-28 21:56:01 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 21:56:01 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id;
2021-10-28 21:56:01 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 21:56:01 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2021-10-28 21:57:11 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:57:11 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2021-10-28T00:00:00.000+0800' AND create_time <= '2021-10-28T23:59:59.000+0800');
2021-10-28 21:57:11 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 21:57:11 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2021-10-28T00:00:00.000+0800' AND create_time <= '2021-10-28T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 22:11:40 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-10-28 22:11:40 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1635428489224 paused.
2021-10-28 22:11:40 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-10-28 22:11:40 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-10-28 22:11:40 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1635428489224 shutting down.
2021-10-28 22:11:40 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1635428489224 paused.
2021-10-28 22:11:40 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1635428489224 shutdown complete.
2021-10-28 22:11:40 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-10-28 22:11:40 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-10-28 22:11:40 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-10-28 22:11:40 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-10-28 22:11:40 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-10-28 22:11:40 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2021-10-28 22:24:14 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 37756 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2021-10-28 22:24:14 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2021-10-28 22:24:18 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-10-28 22:24:18 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-10-28 22:24:19 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 788ms. Found 0 repository interfaces.
2021-10-28 22:24:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c2a19941] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$7d63618c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$3c2d4479] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$4eb6b8fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$96db950a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:20 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-10-28 22:24:20 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-10-28 22:24:20 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-10-28 22:24:20 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-10-28 22:24:20 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-10-28 22:24:20 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-10-28 22:24:20 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-10-28 22:24:20 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-10-28 22:24:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-28 22:24:27 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2021-10-28 22:24:27 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2021-10-28 22:24:27 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-10-28 22:24:27 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-10-28 22:24:27 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-10-28 22:24:27 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 12735 ms
2021-10-28 22:24:28 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-10-28 22:24:32 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-10-28 22:24:32 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-10-28 22:24:32 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-10-28 22:24:32 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2021-10-28 22:24:32 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2021-10-28 22:24:32 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1635431072653'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2021-10-28 22:24:32 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2021-10-28 22:24:32 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-10-28 22:24:32 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@22f7bf36
2021-10-28 22:24:32 INFO  main p6spy 2021-10-28 22:24:32 | 耗时 3 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2021-10-28 22:24:34 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-10-28 22:24:35 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-10-28 22:24:35 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-10-28 22:24:35 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-10-28 22:24:35 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-10-28 22:24:36 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-10-28 22:24:36 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-10-28 22:24:36 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-10-28 22:24:36 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2021-10-28 22:24:36 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2021-10-28 22:24:36 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2021-10-28 22:24:36 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 22.853 seconds (JVM running for 26.217)
2021-10-28 22:24:36 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-10-28 22:24:37 INFO  main p6spy 2021-10-28 22:24:37 | 耗时 11 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-10-28 22:24:37 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-10-28 22:24:37 INFO  main p6spy 2021-10-28 22:24:37 | 耗时 15 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-10-28 22:24:37 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-10-28 22:24:37 INFO  main p6spy 2021-10-28 22:24:37 | 耗时 2 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-10-28 22:24:37 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-10-28 22:24:37 INFO  main p6spy 2021-10-28 22:24:37 | 耗时 20 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-10-28 22:24:37 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-10-28 22:24:37 INFO  main p6spy 2021-10-28 22:24:37 | 耗时 15 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-10-28 22:24:37 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-10-28 22:24:37 INFO  main p6spy 2021-10-28 22:24:37 | 耗时 15 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-10-28 22:24:37 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-10-28 22:24:37 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2021-10-28 22:24:37 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2021-10-28 22:24:37 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1635428489224"'s failed in-progress jobs.
2021-10-28 22:24:37 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1635431072653 started.
2021-10-28 22:24:38 INFO  main p6spy 2021-10-28 22:24:38 | 耗时 1236 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-10-28 22:24:43 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-10-28 22:24:43 INFO  main p6spy 2021-10-28 22:24:43 | 耗时 8 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-10-28 22:24:43 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-10-28 22:24:43 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-10-28 22:24:43 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-10-28 22:24:43 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-10-28 22:25:01 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-10-28 22:25:01 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-10-28 22:25:01 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-10-28 22:25:01 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-10-28 22:25:01 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8088/login
2021-10-28 22:25:15 INFO  http-nio-8088-exec-2 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-10-28 22:25:15 INFO  http-nio-8088-exec-2 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-10-28 22:25:15 INFO  http-nio-8088-exec-2 org.springframework.web.servlet.DispatcherServlet Completed initialization in 20 ms
2021-10-28 22:25:15 INFO  http-nio-8088-exec-2 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-10-28 22:25:15 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 22:25:15 | 耗时 20 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2021-10-28 22:25:15 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 22:25:15 | 耗时 13 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2021-10-28 22:25:15 INFO  http-nio-8088-exec-2 p6spy 2021-10-28 22:25:15 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job WHERE JOB_ID = 6;
2021-10-28 22:25:15 INFO  FEBS_Scheduler_Worker-1 com.hero.sms.job.util.ScheduleJob 任务准备执行，任务ID：6
2021-10-28 22:25:15 INFO  Febs-Async-Thread1 p6spy 2021-10-28 22:25:15 | 耗时 11 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.job.controller.JobController.runJob()', '2021-10-28T22:25:15.577+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 201, ' jobIds: "6"', '执行定时任务', 'admin');
2021-10-28 22:25:15 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 22:25:15 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_job;
2021-10-28 22:25:15 INFO  http-nio-8088-exec-3 p6spy 2021-10-28 22:25:15 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 22:25:19 INFO  pool-3-thread-1 p6spy 2021-10-28 22:25:19 | 耗时 9 ms | SQL 语句：
SELECT * FROM t_sms_channel WHERE code = 'FSGJHTTP';
2021-10-28 22:25:19 INFO  pool-3-thread-1 p6spy 2021-10-28 22:25:19 | 耗时 11 ms | SQL 语句：
SELECT * FROM t_sms_channel_property WHERE sms_channel_id = 13;
2021-10-28 22:25:19 INFO  pool-3-thread-1 p6spy 2021-10-28 22:25:19 | 耗时 9 ms | SQL 语句：
SELECT * FROM t_sms_channel_cost WHERE sms_channel_id = 13;
2021-10-28 22:25:21 INFO  pool-3-thread-1 com.hero.sms.service.impl.channel.push.QiXinTong 通道【13】【QXT】查询状态【提交参数】:password=189889&action=query&userid=198&account=189889
2021-10-28 22:25:21 INFO  pool-3-thread-1 com.hero.sms.common.utils.HttpUtil 请求报文:password=189889&action=query&userid=198&account=189889
2021-10-28 22:25:21 INFO  pool-3-thread-1 com.hero.sms.service.impl.channel.push.QiXinTong 通道【13】【QXT】查询状态【返回参数】:null
2021-10-28 22:25:46 INFO  FEBS_Scheduler_Worker-1 com.hero.sms.job.util.ScheduleJob 任务执行完毕，任务ID：6 总共耗时：30966 毫秒
2021-10-28 22:25:46 INFO  FEBS_Scheduler_Worker-1 p6spy 2021-10-28 22:25:46 | 耗时 13 ms | SQL 语句：
INSERT INTO t_job_log (method_name, params, job_id, times, create_time, bean_name, status) VALUES ('run', '', 6, 30966, '2021-10-28T22:25:15.566+0800', 'getChannelRecordTask', '0');
2021-10-28 22:25:57 INFO  http-nio-8088-exec-6 p6spy 2021-10-28 22:25:57 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job WHERE JOB_ID = 6;
2021-10-28 22:25:57 INFO  FEBS_Scheduler_Worker-2 com.hero.sms.job.util.ScheduleJob 任务准备执行，任务ID：6
2021-10-28 22:25:57 INFO  Febs-Async-Thread2 p6spy 2021-10-28 22:25:57 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.job.controller.JobController.runJob()', '2021-10-28T22:25:57.639+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 38, ' jobIds: "6"', '执行定时任务', 'admin');
2021-10-28 22:25:57 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 22:25:57 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_job;
2021-10-28 22:25:57 INFO  http-nio-8088-exec-7 p6spy 2021-10-28 22:25:57 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 22:26:09 INFO  pool-4-thread-1 p6spy 2021-10-28 22:26:09 | 耗时 0 ms | SQL 语句：
SELECT * FROM t_sms_channel WHERE code = 'FSGJHTTP';
2021-10-28 22:26:09 INFO  pool-4-thread-1 p6spy 2021-10-28 22:26:09 | 耗时 0 ms | SQL 语句：
SELECT * FROM t_sms_channel_property WHERE sms_channel_id = 13;
2021-10-28 22:26:09 INFO  pool-4-thread-1 p6spy 2021-10-28 22:26:09 | 耗时 0 ms | SQL 语句：
SELECT * FROM t_sms_channel_cost WHERE sms_channel_id = 13;
2021-10-28 22:26:22 INFO  pool-4-thread-1 com.hero.sms.service.impl.channel.push.QiXinTong 通道【13】【QXT】查询状态【提交参数】:password=189889&action=query&userid=198&account=189889
2021-10-28 22:26:49 INFO  pool-4-thread-1 com.hero.sms.common.utils.HttpUtil 请求报文:password=189889&action=query&userid=198&account=189889
2021-10-28 22:26:50 INFO  pool-4-thread-1 com.hero.sms.service.impl.channel.push.QiXinTong 通道【13】【QXT】查询状态【返回参数】:null
2021-10-28 22:26:50 INFO  FEBS_Scheduler_Worker-2 com.hero.sms.job.util.ScheduleJob 任务执行完毕，任务ID：6 总共耗时：52358 毫秒
2021-10-28 22:26:50 INFO  FEBS_Scheduler_Worker-2 p6spy 2021-10-28 22:26:50 | 耗时 3 ms | SQL 语句：
INSERT INTO t_job_log (method_name, params, job_id, times, create_time, bean_name, status) VALUES ('run', '', 6, 52358, '2021-10-28T22:25:57.647+0800', 'getChannelRecordTask', '0');
2021-10-28 22:27:22 INFO  http-nio-8088-exec-4 p6spy 2021-10-28 22:27:22 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job WHERE JOB_ID = 6;
2021-10-28 22:27:22 INFO  Febs-Async-Thread3 p6spy 2021-10-28 22:27:22 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.job.controller.JobController.runJob()', '2021-10-28T22:27:22.637+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 37, ' jobIds: "6"', '执行定时任务', 'admin');
2021-10-28 22:27:22 INFO  FEBS_Scheduler_Worker-3 com.hero.sms.job.util.ScheduleJob 任务准备执行，任务ID：6
2021-10-28 22:27:22 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 22:27:22 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_job;
2021-10-28 22:27:22 INFO  http-nio-8088-exec-1 p6spy 2021-10-28 22:27:22 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, cron_expression, create_time, method_name, remark, bean_name, params, status FROM t_job ORDER BY create_time DESC LIMIT 0,10;
2021-10-28 22:27:25 INFO  pool-5-thread-1 p6spy 2021-10-28 22:27:25 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_sms_channel WHERE code = 'FSGJHTTP';
2021-10-28 22:27:25 INFO  pool-5-thread-1 p6spy 2021-10-28 22:27:25 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel_property WHERE sms_channel_id = 13;
2021-10-28 22:27:25 INFO  pool-5-thread-1 p6spy 2021-10-28 22:27:25 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_sms_channel_cost WHERE sms_channel_id = 13;
2021-10-28 22:27:33 INFO  pool-5-thread-1 com.hero.sms.service.impl.channel.push.QiXinTong 通道【13】【QXT】查询状态【提交参数】:password=189889&action=query&userid=198&account=189889
2021-10-28 22:27:40 INFO  pool-5-thread-1 com.hero.sms.common.utils.HttpUtil 请求报文:password=189889&action=query&userid=198&account=189889
2021-10-28 22:27:45 INFO  pool-5-thread-1 com.hero.sms.service.impl.channel.push.QiXinTong 通道【13】【QXT】查询状态【返回参数】:<?xml version="1.0" encoding="utf-8" ?><returnsms>
 <errorstatus>
 <error>2</error>
 <remark>用户名或密码错误</remark>
 </errorstatus>
 </returnsms>
 
2021-10-28 22:35:18 INFO  FEBS_Scheduler_Worker-3 com.hero.sms.job.util.ScheduleJob 任务执行完毕，任务ID：6 总共耗时：475833 毫秒
2021-10-28 22:35:18 INFO  FEBS_Scheduler_Worker-3 p6spy 2021-10-28 22:35:18 | 耗时 9 ms | SQL 语句：
INSERT INTO t_job_log (method_name, params, job_id, times, create_time, bean_name, status) VALUES ('run', '', 6, 475833, '2021-10-28T22:27:22.664+0800', 'getChannelRecordTask', '0');
2021-10-28 22:41:48 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-10-28 22:41:48 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1635431072653 paused.
2021-10-28 22:41:48 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-10-28 22:41:48 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-10-28 22:41:48 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1635431072653 shutting down.
2021-10-28 22:41:48 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1635431072653 paused.
2021-10-28 22:41:48 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1635431072653 shutdown complete.
2021-10-28 22:41:48 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-10-28 22:41:48 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-10-28 22:41:48 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-10-28 22:41:48 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-10-28 22:41:48 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-10-28 22:41:48 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
