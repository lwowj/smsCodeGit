2022-03-25 15:46:54 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 218808 (C:\work\workspaceSmsBfSvn\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBfSvn\sms\sms-admin)
2022-03-25 15:46:54 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2022-03-25 15:46:58 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-25 15:46:58 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-25 15:46:59 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 953ms. Found 0 repository interfaces.
2022-03-25 15:47:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$797b1498] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$343cdce3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$f306bfd0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$5903454] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$4db51061] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:00 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-03-25 15:47:00 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-03-25 15:47:01 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2022-03-25 15:47:01 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2022-03-25 15:47:01 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2022-03-25 15:47:01 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2022-03-25 15:47:01 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2022-03-25 15:47:01 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2022-03-25 15:47:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-25 15:47:08 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2022-03-25 15:47:08 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2022-03-25 15:47:08 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-03-25 15:47:08 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2022-03-25 15:47:08 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-03-25 15:47:08 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 14172 ms
2022-03-25 15:47:09 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2022-03-25 15:47:15 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2022-03-25 15:47:15 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-25 15:47:15 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2022-03-25 15:47:15 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2022-03-25 15:47:15 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2022-03-25 15:47:15 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1648194435453'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-25 15:47:15 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2022-03-25 15:47:15 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2022-03-25 15:47:15 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7402bfe7
2022-03-25 15:47:15 INFO  main p6spy 2022-03-25 15:47:15 | 耗时 3 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2022-03-25 15:47:17 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-25 15:47:17 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-03-25 15:47:17 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2022-03-25 15:47:17 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2022-03-25 15:47:17 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2022-03-25 15:47:18 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2022-03-25 15:47:18 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2022-03-25 15:47:18 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2022-03-25 15:47:18 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2022-03-25 15:47:18 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2022-03-25 15:47:19 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2022-03-25 15:47:19 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 25.725 seconds (JVM running for 29.044)
2022-03-25 15:47:19 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2022-03-25 15:47:19 INFO  main p6spy 2022-03-25 15:47:19 | 耗时 3 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-03-25 15:47:19 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2022-03-25 15:47:19 INFO  main p6spy 2022-03-25 15:47:19 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2022-03-25 15:47:19 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2022-03-25 15:47:19 INFO  main p6spy 2022-03-25 15:47:19 | 耗时 2 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2022-03-25 15:47:19 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2022-03-25 15:47:19 INFO  main p6spy 2022-03-25 15:47:19 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-03-25 15:47:19 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2022-03-25 15:47:19 INFO  main p6spy 2022-03-25 15:47:19 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2022-03-25 15:47:19 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2022-03-25 15:47:19 INFO  main p6spy 2022-03-25 15:47:19 | 耗时 2 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2022-03-25 15:47:19 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2022-03-25 15:47:19 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-25 15:47:19 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2022-03-25 15:47:19 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1648037785134"'s failed in-progress jobs.
2022-03-25 15:47:19 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648194435453 started.
2022-03-25 15:47:20 INFO  main p6spy 2022-03-25 15:47:20 | 耗时 1261 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2022-03-25 15:47:26 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2022-03-25 15:47:26 INFO  main p6spy 2022-03-25 15:47:26 | 耗时 1 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2022-03-25 15:47:26 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2022-03-25 15:47:26 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-03-25 15:47:26 INFO  main p6spy 2022-03-25 15:47:26 | 耗时 1 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-03-25 15:47:26 INFO  main com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-03-25 15:47:26 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2022-03-25 15:47:26 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2022-03-25 15:47:26 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-03-25 15:47:31 INFO  http-nio-8088-exec-3 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-25 15:47:31 INFO  http-nio-8088-exec-3 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-03-25 15:47:31 INFO  http-nio-8088-exec-3 org.springframework.web.servlet.DispatcherServlet Completed initialization in 17 ms
2022-03-25 15:47:31 INFO  http-nio-8088-exec-3 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2022-03-25 15:47:40 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2022-03-25 15:47:40 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-25 15:47:40 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-25 15:47:40 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2022-03-25 15:47:40 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://192.168.189.1:8088/login
2022-03-25 15:47:55 INFO  http-nio-8088-exec-6 com.hero.sms.common.aspect.LimitAspect IP:192.168.189.1 第 1 次访问key为 [limit_login192.168.189.1]，描述为 [登录接口] 的接口
2022-03-25 15:47:55 INFO  http-nio-8088-exec-6 p6spy 2022-03-25 15:47:55 | 耗时 9 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-25 15:47:55 INFO  http-nio-8088-exec-6 p6spy 2022-03-25 15:47:55 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-25 15:47:55 INFO  http-nio-8088-exec-6 p6spy 2022-03-25 15:47:55 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2022-03-23T20:43:37.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2022-03-25 15:47:55 INFO  http-nio-8088-exec-6 p6spy 2022-03-25 15:47:55 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2022-03-25T15:47:55.518+0800', 'Chrome 98', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 'admin');
2022-03-25 15:47:55 INFO  http-nio-8088-exec-7 p6spy 2022-03-25 15:47:55 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-25 15:47:55 INFO  http-nio-8088-exec-7 p6spy 2022-03-25 15:47:55 | 耗时 8 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-25 15:47:55 INFO  http-nio-8088-exec-7 p6spy 2022-03-25 15:47:55 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-25 15:47:57 INFO  http-nio-8088-exec-5 p6spy 2022-03-25 15:47:57 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-25 15:47:57 INFO  http-nio-8088-exec-5 p6spy 2022-03-25 15:47:57 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-25 15:47:57 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 15:47:57 | 耗时 10 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-03-25 15:47:57 INFO  http-nio-8088-exec-6 p6spy 2022-03-25 15:47:57 | 耗时 3 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-25 15:47:57 INFO  http-nio-8088-exec-3 p6spy 2022-03-25 15:47:57 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2022-03-25T15:47:57.958+0800' WHERE (USERNAME = 'admin');
2022-03-25 15:47:57 INFO  http-nio-8088-exec-3 p6spy 2022-03-25 15:47:57 | 耗时 3 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2022-03-25 15:47:58 INFO  http-nio-8088-exec-3 p6spy 2022-03-25 15:47:58 | 耗时 3 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-03-25 15:47:58 INFO  http-nio-8088-exec-3 p6spy 2022-03-25 15:47:58 | 耗时 2 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-03-25 15:47:58 INFO  http-nio-8088-exec-3 p6spy 2022-03-25 15:47:58 | 耗时 3 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2022-03-25 15:47:58 INFO  http-nio-8088-exec-3 p6spy 2022-03-25 15:47:58 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2022-03-25 15:47:58 INFO  http-nio-8088-exec-5 p6spy 2022-03-25 15:47:58 | 耗时 17 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2022-03-25 15:47:58 INFO  http-nio-8088-exec-7 p6spy 2022-03-25 15:47:58 | 耗时 33 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2022-03-25 15:47:58 INFO  http-nio-8088-exec-6 p6spy 2022-03-25 15:47:58 | 耗时 13 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2022-03-25 15:48:06 INFO  http-nio-8088-exec-4 p6spy 2022-03-25 15:48:06 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM t_sensitive_word;
2022-03-25 15:48:06 INFO  http-nio-8088-exec-4 p6spy 2022-03-25 15:48:06 | 耗时 1 ms | SQL 语句：
SELECT id, new_word, word FROM t_sensitive_word ORDER BY id DESC LIMIT 0,10;
2022-03-25 15:49:37 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 15:49:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2022-03-25 15:49:37 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 15:49:37 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,10;
2022-03-25 15:50:47 INFO  http-nio-8088-exec-9 p6spy 2022-03-25 15:50:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2022-03-25 15:50:47 INFO  http-nio-8088-exec-9 p6spy 2022-03-25 15:50:47 | 耗时 2 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,150;
2022-03-25 15:51:00 INFO  http-nio-8088-exec-2 p6spy 2022-03-25 15:51:00 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE ID = '894';
2022-03-25 15:51:00 INFO  http-nio-8088-exec-7 p6spy 2022-03-25 15:51:00 | 耗时 6 ms | SQL 语句：
SELECT ID, DESCREPTION, CODE, CREATE_TIME, PARENT_CODE, NAME, REMARK FROM code_sort;
2022-03-25 15:51:18 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 15:51:18 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE ID = 894;
2022-03-25 15:51:18 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 15:51:18 | 耗时 2 ms | SQL 语句：
UPDATE code SET CODE = 'sendBoxExcelPath', PARENT_CODE = '', NAME = 'C:\work\febs\upload\', DESCRIPTION = '', REMARK = '配置发件箱提交的excel文件的路径', SORT_CODE = 'System' WHERE ID = 894;
2022-03-25 15:51:18 INFO  Febs-Async-Thread1 p6spy 2022-03-25 15:51:18 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.system.controller.CodeController.updateCode()', '2022-03-25T15:51:18.473+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 38, ' code: Code(id=894, sortCode=System, code=sendBoxExcelPath, name=C:\work\febs\upload\, parentCode=, orderLevel=null, isDelete=null, description=, remark=配置发件箱提交的excel文件的路径, createTime=null)', '修改Code', 'admin');
2022-03-25 15:51:18 INFO  http-nio-8088-exec-1 p6spy 2022-03-25 15:51:18 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2022-03-25 15:51:18 INFO  http-nio-8088-exec-1 p6spy 2022-03-25 15:51:18 | 耗时 2 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,150;
2022-03-25 16:13:56 INFO  http-nio-8088-exec-2 p6spy 2022-03-25 16:13:56 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM code;
2022-03-25 16:13:56 INFO  http-nio-8088-exec-2 p6spy 2022-03-25 16:13:56 | 耗时 0 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code ORDER BY CREATE_TIME DESC LIMIT 0,10;
2022-03-25 16:14:40 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 16:14:40 | 耗时 12 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2022-03-25 16:14:40 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 16:14:40 | 耗时 7 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2022-03-25 16:14:41 INFO  Febs-Async-Thread2 p6spy 2022-03-25 16:14:41 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2022-03-25T16:14:41.029+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 122, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2022-03-25 16:14:44 INFO  http-nio-8088-exec-1 p6spy 2022-03-25 16:14:44 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2022-03-25 16:14:44 INFO  http-nio-8088-exec-1 p6spy 2022-03-25 16:14:44 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2022-03-25 16:14:44 INFO  Febs-Async-Thread3 p6spy 2022-03-25 16:14:44 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2022-03-25T16:14:44.629+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 14, ' request: "QueryRequest(pageSize=10, pageNum=2, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2022-03-25 16:15:21 INFO  http-nio-8088-exec-2 p6spy 2022-03-25 16:15:21 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 16:15:21 INFO  http-nio-8088-exec-2 p6spy 2022-03-25 16:15:21 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:15:24 INFO  http-nio-8088-exec-5 p6spy 2022-03-25 16:15:24 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-25 16:15:24 INFO  http-nio-8088-exec-4 p6spy 2022-03-25 16:15:24 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:15:24 INFO  http-nio-8088-exec-4 p6spy 2022-03-25 16:15:24 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:16:30 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 16:16:30 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:16:30 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 16:16:30 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:16:39 INFO  http-nio-8088-exec-10 p6spy 2022-03-25 16:16:39 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_sensitive_word;
2022-03-25 16:16:39 INFO  http-nio-8088-exec-10 p6spy 2022-03-25 16:16:39 | 耗时 0 ms | SQL 语句：
SELECT id, new_word, word FROM t_sensitive_word ORDER BY id DESC LIMIT 0,10;
2022-03-25 16:18:00 INFO  http-nio-8088-exec-3 p6spy 2022-03-25 16:18:00 | 耗时 9 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-25 16:18:00 INFO  http-nio-8088-exec-3 p6spy 2022-03-25 16:18:00 | 耗时 5 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-25 16:18:00 INFO  http-nio-8088-exec-3 p6spy 2022-03-25 16:18:00 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:18:00 INFO  http-nio-8088-exec-3 p6spy 2022-03-25 16:18:00 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:39:54 INFO  http-nio-8088-exec-4 p6spy 2022-03-25 16:39:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:39:54 INFO  http-nio-8088-exec-4 p6spy 2022-03-25 16:39:54 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:40:39 INFO  http-nio-8088-exec-7 p6spy 2022-03-25 16:40:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:40:39 INFO  Febs-Async-Thread4 p6spy 2022-03-25 16:40:39 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:40:39.953+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 27, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 16:46:06 INFO  http-nio-8088-exec-1 p6spy 2022-03-25 16:46:06 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 16:46:06 INFO  http-nio-8088-exec-1 p6spy 2022-03-25 16:46:06 | 耗时 2 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:46:09 INFO  http-nio-8088-exec-10 p6spy 2022-03-25 16:46:09 | 耗时 14 ms | SQL 语句：
SELECT COUNT(DISTINCT org_code) AS orgTotal, COUNT(1) AS total, COALESCE(SUM(number_count), 0) AS numberCount, COALESCE(SUM(sms_count), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 16:46:09 INFO  Febs-Async-Thread5 p6spy 2022-03-25 16:46:09 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxController.statistic()', '2022-03-25T16:46:09.647+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 77, ' sendBox: "SendBoxQuery(isTiming=null, isTimingFlag=null, isSortingFlag=null, leTimingTime=null, isNeedSmsNumber=false, sortingStartTime=null, sortingEndTime=null, createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, moblieFile=null, excludeAuditState=1, ids=null, auditState=null, sessionToken=null, isLongSms=null)"', '统计数据', 'admin');
2022-03-25 16:46:16 INFO  http-nio-8088-exec-2 p6spy 2022-03-25 16:46:16 | 耗时 31 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:46:16 INFO  http-nio-8088-exec-2 p6spy 2022-03-25 16:46:16 | 耗时 154 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:46:20 INFO  http-nio-8088-exec-5 p6spy 2022-03-25 16:46:20 | 耗时 152 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:46:20 INFO  Febs-Async-Thread1 p6spy 2022-03-25 16:46:20 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:46:20.324+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 188, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 16:46:23 INFO  http-nio-8088-exec-4 p6spy 2022-03-25 16:46:23 | 耗时 23 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:46:23 INFO  Febs-Async-Thread2 p6spy 2022-03-25 16:46:23 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:46:23.527+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 31, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 16:46:24 INFO  http-nio-8088-exec-6 p6spy 2022-03-25 16:46:24 | 耗时 35 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:46:24 INFO  Febs-Async-Thread3 p6spy 2022-03-25 16:46:24 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:46:24.677+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 50, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 16:47:31 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-03-25 16:47:31 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-03-25 16:47:34 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 16:47:34 | 耗时 302 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:47:34 INFO  Febs-Async-Thread4 p6spy 2022-03-25 16:47:34 | 耗时 18 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:47:34.635+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 328, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 16:47:36 INFO  http-nio-8088-exec-1 p6spy 2022-03-25 16:47:36 | 耗时 273 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:47:36 INFO  Febs-Async-Thread5 p6spy 2022-03-25 16:47:36 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:47:36.057+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 293, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 16:47:37 INFO  http-nio-8088-exec-9 p6spy 2022-03-25 16:47:37 | 耗时 398 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:47:37 INFO  Febs-Async-Thread1 p6spy 2022-03-25 16:47:37 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:47:37.370+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 417, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 16:47:38 INFO  http-nio-8088-exec-2 p6spy 2022-03-25 16:47:38 | 耗时 222 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:47:38 INFO  Febs-Async-Thread2 p6spy 2022-03-25 16:47:38 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:47:38.338+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 242, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 16:47:39 INFO  http-nio-8088-exec-3 p6spy 2022-03-25 16:47:39 | 耗时 321 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:47:39 INFO  Febs-Async-Thread3 p6spy 2022-03-25 16:47:39 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:47:39.844+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 343, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 16:47:41 INFO  http-nio-8088-exec-5 p6spy 2022-03-25 16:47:41 | 耗时 309 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:47:41 INFO  Febs-Async-Thread4 p6spy 2022-03-25 16:47:41 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:47:41.436+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 330, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 16:47:42 INFO  http-nio-8088-exec-4 p6spy 2022-03-25 16:47:42 | 耗时 360 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:47:42 INFO  Febs-Async-Thread5 p6spy 2022-03-25 16:47:42 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:47:42.940+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 383, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 16:48:40 INFO  http-nio-8088-exec-7 p6spy 2022-03-25 16:48:40 | 耗时 5 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-25 16:48:40 INFO  http-nio-8088-exec-7 p6spy 2022-03-25 16:48:40 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-25 16:48:40 INFO  http-nio-8088-exec-7 p6spy 2022-03-25 16:48:40 | 耗时 128 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:48:40 INFO  Febs-Async-Thread1 p6spy 2022-03-25 16:48:40 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:48:40.546+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 138, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 16:48:41 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 16:48:41 | 耗时 63 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:48:41 INFO  Febs-Async-Thread2 p6spy 2022-03-25 16:48:41 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:48:41.740+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 74, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 16:48:42 INFO  http-nio-8088-exec-1 p6spy 2022-03-25 16:48:42 | 耗时 59 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:48:43 INFO  Febs-Async-Thread3 p6spy 2022-03-25 16:48:43 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:48:42.994+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 66, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 16:48:44 INFO  http-nio-8088-exec-9 p6spy 2022-03-25 16:48:44 | 耗时 70 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:48:44 INFO  Febs-Async-Thread4 p6spy 2022-03-25 16:48:44 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:48:44.179+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 80, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 16:48:45 INFO  http-nio-8088-exec-10 p6spy 2022-03-25 16:48:45 | 耗时 83 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:48:45 INFO  Febs-Async-Thread5 p6spy 2022-03-25 16:48:45 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:48:45.036+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 94, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 16:48:57 INFO  http-nio-8088-exec-3 p6spy 2022-03-25 16:48:57 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-25 16:49:11 INFO  http-nio-8088-exec-4 p6spy 2022-03-25 16:49:11 | 耗时 98 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:49:11 INFO  Febs-Async-Thread1 p6spy 2022-03-25 16:49:11 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:49:11.491+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 114, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 16:49:15 INFO  http-nio-8088-exec-6 p6spy 2022-03-25 16:49:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 16:49:15 INFO  http-nio-8088-exec-6 p6spy 2022-03-25 16:49:15 | 耗时 2 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:49:27 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 16:49:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 16:49:27 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 16:49:27 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:49:28 INFO  http-nio-8088-exec-9 p6spy 2022-03-25 16:49:28 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 16:49:28 INFO  http-nio-8088-exec-9 p6spy 2022-03-25 16:49:28 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:50:06 INFO  http-nio-8088-exec-2 p6spy 2022-03-25 16:50:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (sub_type = 1 AND create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 16:50:06 INFO  http-nio-8088-exec-2 p6spy 2022-03-25 16:50:06 | 耗时 2 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (sub_type = 1 AND create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:50:13 INFO  http-nio-8088-exec-5 p6spy 2022-03-25 16:50:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (sub_type = 4 AND create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 16:50:16 INFO  http-nio-8088-exec-4 p6spy 2022-03-25 16:50:16 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (sub_type = 2 AND create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 16:50:33 INFO  http-nio-8088-exec-7 p6spy 2022-03-25 16:50:33 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 16:50:33 INFO  http-nio-8088-exec-7 p6spy 2022-03-25 16:50:33 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:50:35 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 16:50:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT(DISTINCT org_code) AS orgTotal, COUNT(1) AS total, COALESCE(SUM(number_count), 0) AS numberCount, COALESCE(SUM(sms_count), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 16:50:35 INFO  Febs-Async-Thread2 p6spy 2022-03-25 16:50:35 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxController.statistic()', '2022-03-25T16:50:35.628+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 10, ' sendBox: "SendBoxQuery(isTiming=null, isTimingFlag=null, isSortingFlag=null, leTimingTime=null, isNeedSmsNumber=false, sortingStartTime=null, sortingEndTime=null, createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, moblieFile=null, excludeAuditState=1, ids=null, auditState=null, sessionToken=null, isLongSms=null)"', '统计数据', 'admin');
2022-03-25 16:50:38 INFO  http-nio-8088-exec-9 p6spy 2022-03-25 16:50:38 | 耗时 1 ms | SQL 语句：
SELECT COUNT(DISTINCT org_code) AS orgTotal, COUNT(1) AS total, COALESCE(SUM(number_count), 0) AS numberCount, COALESCE(SUM(sms_count), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_box WHERE (sub_type = 2 AND create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 16:50:38 INFO  Febs-Async-Thread3 p6spy 2022-03-25 16:50:38 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxController.statistic()', '2022-03-25T16:50:38.394+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 10, ' sendBox: "SendBoxQuery(isTiming=null, isTimingFlag=null, isSortingFlag=null, leTimingTime=null, isNeedSmsNumber=false, sortingStartTime=null, sortingEndTime=null, createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, moblieFile=null, excludeAuditState=1, ids=null, auditState=null, sessionToken=null, isLongSms=null)"', '统计数据', 'admin');
2022-03-25 16:50:40 INFO  http-nio-8088-exec-10 p6spy 2022-03-25 16:50:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 16:50:40 INFO  http-nio-8088-exec-10 p6spy 2022-03-25 16:50:40 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:51:03 INFO  http-nio-8088-exec-3 p6spy 2022-03-25 16:51:03 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 16:51:03 INFO  http-nio-8088-exec-3 p6spy 2022-03-25 16:51:03 | 耗时 2 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:51:07 INFO  http-nio-8088-exec-4 p6spy 2022-03-25 16:51:07 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 16:51:07 INFO  http-nio-8088-exec-4 p6spy 2022-03-25 16:51:07 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:53:29 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 16:53:29 | 耗时 13 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box_history WHERE (create_time >= '2022-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:53:40 INFO  http-nio-8088-exec-9 p6spy 2022-03-25 16:53:40 | 耗时 31 ms | SQL 语句：
SELECT COUNT(DISTINCT org_code) AS orgTotal, COUNT(1) AS total, COALESCE(SUM(number_count), 0) AS numberCount, COALESCE(SUM(sms_count), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_box_history WHERE (create_time >= '2016-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:53:40 INFO  Febs-Async-Thread4 p6spy 2022-03-25 16:53:40 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxHistoryController.statistic()', '2022-03-25T16:53:40.042+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 38, ' sendBoxHistory: SendBoxHistoryQuery(isTiming=null, isTimingFlag=null, leTimingTime=null, sortingStartTime=null, sortingEndTime=null, createStartTime=Mon Mar 14 00:00:00 CST 2016, createEndTime=Mon Mar 14 23:59:59 CST 2022, isLongSms=null)', '统计数据', 'admin');
2022-03-25 16:53:42 INFO  http-nio-8088-exec-10 p6spy 2022-03-25 16:53:42 | 耗时 22 ms | SQL 语句：
SELECT COUNT(DISTINCT org_code) AS orgTotal, COUNT(1) AS total, COALESCE(SUM(number_count), 0) AS numberCount, COALESCE(SUM(sms_count), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_box_history WHERE (create_time >= '2016-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:53:42 INFO  Febs-Async-Thread5 p6spy 2022-03-25 16:53:42 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxHistoryController.statistic()', '2022-03-25T16:53:42.963+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 28, ' sendBoxHistory: SendBoxHistoryQuery(isTiming=null, isTimingFlag=null, leTimingTime=null, sortingStartTime=null, sortingEndTime=null, createStartTime=Mon Mar 14 00:00:00 CST 2016, createEndTime=Mon Mar 14 23:59:59 CST 2022, isLongSms=null)', '统计数据', 'admin');
2022-03-25 16:54:03 INFO  http-nio-8088-exec-5 p6spy 2022-03-25 16:54:03 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box_history WHERE (create_time >= '2022-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:54:08 INFO  http-nio-8088-exec-6 p6spy 2022-03-25 16:54:08 | 耗时 18 ms | SQL 语句：
SELECT COUNT(DISTINCT org_code) AS orgTotal, COUNT(1) AS total, COALESCE(SUM(number_count), 0) AS numberCount, COALESCE(SUM(sms_count), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_box_history WHERE (create_time >= '2018-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:54:08 INFO  Febs-Async-Thread1 p6spy 2022-03-25 16:54:08 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxHistoryController.statistic()', '2022-03-25T16:54:08.074+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 25, ' sendBoxHistory: SendBoxHistoryQuery(isTiming=null, isTimingFlag=null, leTimingTime=null, sortingStartTime=null, sortingEndTime=null, createStartTime=Wed Mar 14 00:00:00 CST 2018, createEndTime=Mon Mar 14 23:59:59 CST 2022, isLongSms=null)', '统计数据', 'admin');
2022-03-25 16:54:10 INFO  http-nio-8088-exec-7 p6spy 2022-03-25 16:54:10 | 耗时 9 ms | SQL 语句：
SELECT COUNT(DISTINCT org_code) AS orgTotal, COUNT(1) AS total, COALESCE(SUM(number_count), 0) AS numberCount, COALESCE(SUM(sms_count), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_box_history WHERE (sub_type = 2 AND create_time >= '2018-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:54:10 INFO  Febs-Async-Thread2 p6spy 2022-03-25 16:54:10 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxHistoryController.statistic()', '2022-03-25T16:54:10.324+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 20, ' sendBoxHistory: SendBoxHistoryQuery(isTiming=null, isTimingFlag=null, leTimingTime=null, sortingStartTime=null, sortingEndTime=null, createStartTime=Wed Mar 14 00:00:00 CST 2018, createEndTime=Mon Mar 14 23:59:59 CST 2022, isLongSms=null)', '统计数据', 'admin');
2022-03-25 16:54:13 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 16:54:13 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box_history WHERE (sub_type = 2 AND create_time >= '2018-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:54:13 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 16:54:13 | 耗时 10 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, agent_income_amount, timing_time, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, income_amount, number_count, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box_history WHERE (sub_type = 2 AND create_time >= '2018-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:54:23 INFO  http-nio-8088-exec-9 p6spy 2022-03-25 16:54:23 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box_history WHERE (sub_type = 2 AND create_time >= '2018-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:54:23 INFO  http-nio-8088-exec-9 p6spy 2022-03-25 16:54:23 | 耗时 5 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, agent_income_amount, timing_time, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, income_amount, number_count, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box_history WHERE (sub_type = 2 AND create_time >= '2018-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:54:52 INFO  http-nio-8088-exec-3 p6spy 2022-03-25 16:54:52 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box_history WHERE (create_time >= '2022-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:54:57 INFO  http-nio-8088-exec-5 p6spy 2022-03-25 16:54:57 | 耗时 15 ms | SQL 语句：
SELECT COUNT(DISTINCT org_code) AS orgTotal, COUNT(1) AS total, COALESCE(SUM(number_count), 0) AS numberCount, COALESCE(SUM(sms_count), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_box_history WHERE (create_time >= '2017-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:54:57 INFO  Febs-Async-Thread3 p6spy 2022-03-25 16:54:57 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxHistoryController.statistic()', '2022-03-25T16:54:57.273+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 19, ' sendBoxHistory: SendBoxHistoryQuery(isTiming=null, isTimingFlag=null, leTimingTime=null, sortingStartTime=null, sortingEndTime=null, createStartTime=Tue Mar 14 00:00:00 CST 2017, createEndTime=Mon Mar 14 23:59:59 CST 2022, isLongSms=null)', '统计数据', 'admin');
2022-03-25 16:54:58 INFO  http-nio-8088-exec-6 p6spy 2022-03-25 16:54:58 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box_history WHERE (create_time >= '2017-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:54:58 INFO  http-nio-8088-exec-6 p6spy 2022-03-25 16:54:58 | 耗时 6 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, agent_income_amount, timing_time, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, income_amount, number_count, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box_history WHERE (create_time >= '2017-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:55:04 INFO  http-nio-8088-exec-7 p6spy 2022-03-25 16:55:04 | 耗时 5 ms | SQL 语句：
SELECT COUNT(DISTINCT org_code) AS orgTotal, COUNT(1) AS total, COALESCE(SUM(number_count), 0) AS numberCount, COALESCE(SUM(sms_count), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_box_history WHERE (sub_type = 2 AND create_time >= '2017-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:55:04 INFO  Febs-Async-Thread4 p6spy 2022-03-25 16:55:04 | 耗时 11 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxHistoryController.statistic()', '2022-03-25T16:55:04.555+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 12, ' sendBoxHistory: SendBoxHistoryQuery(isTiming=null, isTimingFlag=null, leTimingTime=null, sortingStartTime=null, sortingEndTime=null, createStartTime=Tue Mar 14 00:00:00 CST 2017, createEndTime=Mon Mar 14 23:59:59 CST 2022, isLongSms=null)', '统计数据', 'admin');
2022-03-25 16:55:06 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 16:55:06 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box_history WHERE (sub_type = 2 AND create_time >= '2017-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:55:06 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 16:55:06 | 耗时 8 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, agent_income_amount, timing_time, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, income_amount, number_count, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box_history WHERE (sub_type = 2 AND create_time >= '2017-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:55:11 INFO  http-nio-8088-exec-9 p6spy 2022-03-25 16:55:11 | 耗时 18 ms | SQL 语句：
SELECT COUNT(DISTINCT org_code) AS orgTotal, COUNT(1) AS total, COALESCE(SUM(number_count), 0) AS numberCount, COALESCE(SUM(sms_count), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_box_history WHERE (sub_type = 4 AND create_time >= '2017-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:55:11 INFO  Febs-Async-Thread5 p6spy 2022-03-25 16:55:11 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxHistoryController.statistic()', '2022-03-25T16:55:11.127+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 25, ' sendBoxHistory: SendBoxHistoryQuery(isTiming=null, isTimingFlag=null, leTimingTime=null, sortingStartTime=null, sortingEndTime=null, createStartTime=Tue Mar 14 00:00:00 CST 2017, createEndTime=Mon Mar 14 23:59:59 CST 2022, isLongSms=null)', '统计数据', 'admin');
2022-03-25 16:55:12 INFO  http-nio-8088-exec-10 p6spy 2022-03-25 16:55:12 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box_history WHERE (sub_type = 4 AND create_time >= '2017-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:55:12 INFO  http-nio-8088-exec-10 p6spy 2022-03-25 16:55:12 | 耗时 7 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, agent_income_amount, timing_time, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, income_amount, number_count, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box_history WHERE (sub_type = 4 AND create_time >= '2017-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:57:02 INFO  http-nio-8088-exec-5 p6spy 2022-03-25 16:57:02 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box_history WHERE (create_time >= '2022-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:57:47 INFO  http-nio-8088-exec-7 p6spy 2022-03-25 16:57:47 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box_history WHERE (create_time >= '2022-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:58:08 INFO  http-nio-8088-exec-9 p6spy 2022-03-25 16:58:08 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box_history WHERE (create_time >= '2022-03-14T00:00:00.000+0800' AND create_time <= '2022-03-14T23:59:59.000+0800');
2022-03-25 16:58:32 INFO  http-nio-8088-exec-2 p6spy 2022-03-25 16:58:32 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 16:58:32 INFO  http-nio-8088-exec-2 p6spy 2022-03-25 16:58:32 | 耗时 2 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:59:41 INFO  http-nio-8088-exec-5 p6spy 2022-03-25 16:59:41 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (send_code = 'BN20220325164559H8U16' AND create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:59:41 INFO  http-nio-8088-exec-5 p6spy 2022-03-25 16:59:41 | 耗时 4 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (send_code = 'BN20220325164559H8U16' AND create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 16:59:44 INFO  http-nio-8088-exec-6 p6spy 2022-03-25 16:59:44 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (send_code = 'BN20220325164559H8U16' AND create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800');
2022-03-25 16:59:44 INFO  Febs-Async-Thread1 p6spy 2022-03-25 16:59:44 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.statistic()', '2022-03-25T16:59:44.599+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 37, ' sendRecord: "SendRecordQuery(createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计数据', 'admin');
2022-03-25 17:00:51 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 17:00:51 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 17:00:51 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 17:00:51 | 耗时 2 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-25 17:00:57 INFO  http-nio-8088-exec-9 p6spy 2022-03-25 17:00:57 | 耗时 3 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, sms_numbers, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (id IN (17012) AND timing_time IS NULL AND audit_state = 2) ORDER BY create_time DESC;
2022-03-25 17:00:57 INFO  Febs-Async-Thread2 p6spy 2022-03-25 17:00:57 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.sortingAgainSendBox()', '2022-03-25T17:00:57.904+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 13, ' stateTag: "pass" sendBoxIds: "17012"', '发件箱重新推送分拣', 'admin');
2022-03-25 17:03:37 INFO  http-nio-8088-exec-2 p6spy 2022-03-25 17:03:37 | 耗时 2 ms | SQL 语句：
SELECT COUNT(DISTINCT org_code) AS orgTotal, COUNT(1) AS total, COALESCE(SUM(number_count), 0) AS numberCount, COALESCE(SUM(sms_count), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_box WHERE (create_time >= '2022-03-25T00:00:00.000+0800' AND create_time <= '2022-03-25T23:59:59.000+0800' AND audit_state <> 1);
2022-03-25 17:03:37 INFO  Febs-Async-Thread3 p6spy 2022-03-25 17:03:37 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxController.statistic()', '2022-03-25T17:03:37.926+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 6, ' sendBox: "SendBoxQuery(isTiming=null, isTimingFlag=null, isSortingFlag=null, leTimingTime=null, isNeedSmsNumber=false, sortingStartTime=null, sortingEndTime=null, createStartTime=Fri Mar 25 00:00:00 CST 2022, createEndTime=Fri Mar 25 23:59:59 CST 2022, moblieFile=null, excludeAuditState=1, ids=null, auditState=null, sessionToken=null, isLongSms=null)"', '统计数据', 'admin');
2022-03-25 17:07:22 INFO  http-nio-8088-exec-4 p6spy 2022-03-25 17:07:22 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_area_code;
2022-03-25 17:07:22 INFO  http-nio-8088-exec-4 p6spy 2022-03-25 17:07:22 | 耗时 1 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC LIMIT 0,10;
2022-03-25 17:07:23 INFO  http-nio-8088-exec-7 p6spy 2022-03-25 17:07:23 | 耗时 3 ms | SQL 语句：
SELECT id, name, description FROM t_number_pool_group;
2022-03-25 17:07:25 INFO  http-nio-8088-exec-9 p6spy 2022-03-25 17:07:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_number_pool_group;
2022-03-25 17:07:25 INFO  http-nio-8088-exec-9 p6spy 2022-03-25 17:07:25 | 耗时 0 ms | SQL 语句：
SELECT id, name, description FROM t_number_pool_group LIMIT 0,10;
2022-03-25 17:07:32 INFO  http-nio-8088-exec-2 p6spy 2022-03-25 17:07:32 | 耗时 0 ms | SQL 语句：
SELECT id, name, description FROM t_number_pool_group;
2022-03-25 17:07:36 INFO  Febs-Async-Thread4 p6spy 2022-03-25 17:07:36 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.NumberPoolController.addNumberPool()', '2022-03-25T17:07:36.488+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 86, ' numberPool: NumberPool(id=null, phoneNumber=1234, groupId=1, state=null)', '新增NumberPool', 'admin');
2022-03-25 17:20:43 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 17:20:43 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-25 17:20:43 INFO  http-nio-8088-exec-8 p6spy 2022-03-25 17:20:43 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-25 17:28:30 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2022-03-25 17:28:30 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648194435453 paused.
2022-03-25 17:28:30 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2022-03-25 17:28:30 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2022-03-25 17:28:30 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648194435453 shutting down.
2022-03-25 17:28:30 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648194435453 paused.
2022-03-25 17:28:30 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1648194435453 shutdown complete.
2022-03-25 17:28:31 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2022-03-25 17:28:31 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2022-03-25 17:28:31 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2022-03-25 17:28:31 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2022-03-25 17:28:31 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2022-03-25 17:28:31 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
