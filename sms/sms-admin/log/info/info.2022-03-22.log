2022-03-22 00:28:51 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-03-22 00:28:51 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-03-22 00:29:14 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2022-03-22 00:29:14 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647875277918 paused.
2022-03-22 00:29:14 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2022-03-22 00:29:14 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2022-03-22 00:29:14 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647875277918 shutting down.
2022-03-22 00:29:14 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647875277918 paused.
2022-03-22 00:29:14 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647875277918 shutdown complete.
2022-03-22 00:29:14 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2022-03-22 00:29:14 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2022-03-22 00:29:14 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2022-03-22 00:29:14 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2022-03-22 00:29:14 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2022-03-22 00:29:14 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2022-03-22 15:20:52 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 193348 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2022-03-22 15:20:52 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2022-03-22 15:20:55 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-22 15:20:55 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-22 15:20:56 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 781ms. Found 0 repository interfaces.
2022-03-22 15:20:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:20:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e04257f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:20:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:20:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:20:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:20:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$9b04203d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:20:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$59ce032a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:20:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:20:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$6c5777ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:20:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:20:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$b47c53bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:20:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:20:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:20:58 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-03-22 15:20:58 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-03-22 15:20:58 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2022-03-22 15:20:58 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2022-03-22 15:20:58 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2022-03-22 15:20:58 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2022-03-22 15:20:58 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2022-03-22 15:20:58 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2022-03-22 15:20:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:20:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:20:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:01 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 15:21:03 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2022-03-22 15:21:04 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2022-03-22 15:21:04 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-03-22 15:21:04 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2022-03-22 15:21:04 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-03-22 15:21:04 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 11841 ms
2022-03-22 15:21:05 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2022-03-22 15:21:08 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2022-03-22 15:21:08 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-22 15:21:08 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2022-03-22 15:21:09 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2022-03-22 15:21:09 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2022-03-22 15:21:09 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1647933668878'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-22 15:21:09 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2022-03-22 15:21:09 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2022-03-22 15:21:09 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@121f9c52
2022-03-22 15:21:09 INFO  main p6spy 2022-03-22 15:21:09 | 耗时 4 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2022-03-22 15:21:11 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-22 15:21:11 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-03-22 15:21:11 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2022-03-22 15:21:11 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2022-03-22 15:21:11 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2022-03-22 15:21:12 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2022-03-22 15:21:12 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2022-03-22 15:21:12 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2022-03-22 15:21:12 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2022-03-22 15:21:12 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2022-03-22 15:21:12 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2022-03-22 15:21:12 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 21.237 seconds (JVM running for 23.749)
2022-03-22 15:21:12 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2022-03-22 15:21:12 INFO  main p6spy 2022-03-22 15:21:12 | 耗时 2 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-03-22 15:21:12 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2022-03-22 15:21:12 INFO  main p6spy 2022-03-22 15:21:12 | 耗时 2 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2022-03-22 15:21:12 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2022-03-22 15:21:13 INFO  main p6spy 2022-03-22 15:21:13 | 耗时 2 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2022-03-22 15:21:13 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2022-03-22 15:21:13 INFO  main p6spy 2022-03-22 15:21:13 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-03-22 15:21:13 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2022-03-22 15:21:13 INFO  main p6spy 2022-03-22 15:21:13 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2022-03-22 15:21:13 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2022-03-22 15:21:13 INFO  main p6spy 2022-03-22 15:21:13 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2022-03-22 15:21:13 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2022-03-22 15:21:13 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-22 15:21:13 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2022-03-22 15:21:13 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1647875277918"'s failed in-progress jobs.
2022-03-22 15:21:13 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647933668878 started.
2022-03-22 15:21:14 INFO  main p6spy 2022-03-22 15:21:14 | 耗时 990 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2022-03-22 15:21:19 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2022-03-22 15:21:19 INFO  main p6spy 2022-03-22 15:21:19 | 耗时 1 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2022-03-22 15:21:19 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2022-03-22 15:21:19 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-03-22 15:21:19 INFO  main p6spy 2022-03-22 15:21:19 | 耗时 0 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-03-22 15:21:19 INFO  main com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-03-22 15:21:19 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2022-03-22 15:21:19 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2022-03-22 15:21:19 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-03-22 15:21:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2022-03-22 15:21:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-22 15:21:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-22 15:21:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2022-03-22 15:21:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://192.168.189.1:8088/login
2022-03-22 15:21:43 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-22 15:21:43 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-03-22 15:21:43 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 122 ms
2022-03-22 15:21:43 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2022-03-22 15:21:58 INFO  http-nio-8088-exec-4 com.hero.sms.common.aspect.LimitAspect IP:192.168.189.1 第 1 次访问key为 [limit_login192.168.189.1]，描述为 [登录接口] 的接口
2022-03-22 15:21:58 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:21:58 | 耗时 11 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-22 15:21:58 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:21:58 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-22 15:21:58 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:21:58 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2022-03-21T23:29:24.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2022-03-22 15:21:58 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:21:58 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2022-03-22T15:21:58.520+0800', 'Chrome 98', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 'admin');
2022-03-22 15:21:58 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:21:58 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-22 15:21:58 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:21:58 | 耗时 5 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-22 15:21:58 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:21:58 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-22 15:22:00 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:22:00 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-22 15:22:00 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:22:00 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-22 15:22:00 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:22:00 | 耗时 4 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-03-22 15:22:00 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 15:22:00 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-22 15:22:00 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:22:00 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2022-03-22T15:22:00.595+0800' WHERE (USERNAME = 'admin');
2022-03-22 15:22:00 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:22:00 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2022-03-22 15:22:00 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:22:00 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-03-22 15:22:00 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:22:00 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-03-22 15:22:00 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:22:00 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2022-03-22 15:22:00 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:22:00 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2022-03-22 15:22:01 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:22:01 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2022-03-22 15:22:01 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:22:01 | 耗时 2 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2022-03-22 15:22:01 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 15:22:01 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2022-03-22 15:22:03 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:22:03 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id;
2022-03-22 15:22:03 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:22:03 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 15:22:54 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:22:54 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id;
2022-03-22 15:22:54 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:22:54 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 15:23:45 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:23:45 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id;
2022-03-22 15:23:45 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:23:45 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 15:24:19 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 15:24:19 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id;
2022-03-22 15:24:19 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 15:24:19 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 15:25:14 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:25:14 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_pay_channel;
2022-03-22 15:25:14 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:25:14 | 耗时 0 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel LIMIT 0,10;
2022-03-22 15:25:14 INFO  Febs-Async-Thread1 p6spy 2022-03-22 15:25:14 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.PayChannelController.payChannelList()', '2022-03-22T15:25:14.288+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 53, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" payChannel: PayChannel(id=null, channelName=null, merchNo=null, netwayCode=null, implFullClass=null, weight=null, cost=null, minAmount=null, maxAmount=null, requestUrl=null, callbackUrl=null, payCode=null, signKey=null, encryptKey=null, stateCode=null, key1=null, key2=null, key3=null, key4=null, key5=null, remark=null, createTime=null)', '支付通道列表', 'admin');
2022-03-22 15:26:16 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:26:16 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id;
2022-03-22 15:26:16 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:26:16 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 15:26:49 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:26:49 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id;
2022-03-22 15:26:49 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:26:49 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 15:26:58 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:26:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id;
2022-03-22 15:26:58 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:26:58 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 15:27:10 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 15:27:10 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id;
2022-03-22 15:27:10 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 15:27:10 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 15:27:55 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 15:27:55 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id;
2022-03-22 15:27:55 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 15:27:55 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 15:28:10 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:28:10 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id;
2022-03-22 15:28:10 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:28:10 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 15:29:02 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:29:02 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id;
2022-03-22 15:29:02 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:29:02 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 15:29:20 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:29:20 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id;
2022-03-22 15:29:20 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:29:20 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 15:29:58 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 15:29:58 | 耗时 9 ms | SQL 语句：
SELECT id, create_time, property_type, name, sms_channel_id, description, remark, value FROM t_sms_channel_property WHERE (sms_channel_id = 11);
2022-03-22 15:29:58 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 15:29:58 | 耗时 7 ms | SQL 语句：
SELECT id, name, description FROM t_number_pool_group;
2022-03-22 15:30:03 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:30:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_channel_id = 11);
2022-03-22 15:30:03 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:30:03 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value, Operator FROM t_sms_channel_cost WHERE (sms_channel_id = 11) LIMIT 0,10;
2022-03-22 15:30:13 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:30:13 | 耗时 7 ms | SQL 语句：
SELECT id, create_time, property_type, name, sms_channel_id, description, remark, value FROM t_sms_channel_property WHERE (sms_channel_id = 11);
2022-03-22 15:30:13 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:30:13 | 耗时 8 ms | SQL 语句：
SELECT id, name, description FROM t_number_pool_group;
2022-03-22 15:31:37 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:31:37 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2022-03-22 15:31:37 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:31:37 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2022-03-22 15:31:37 INFO  Febs-Async-Thread2 p6spy 2022-03-22 15:31:37 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2022-03-22T15:31:37.304+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 48, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2022-03-22 15:32:08 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:32:08 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2022-03-22 15:32:08 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:32:08 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2022-03-22 15:32:08 INFO  Febs-Async-Thread3 p6spy 2022-03-22 15:32:08 | 耗时 11 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2022-03-22T15:32:08.752+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 20, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2022-03-22 15:32:31 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:32:31 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2022-03-22 15:32:31 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:32:31 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2022-03-22 15:32:31 INFO  Febs-Async-Thread4 p6spy 2022-03-22 15:32:31 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2022-03-22T15:32:31.878+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 21, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2022-03-22 15:32:51 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:32:51 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2022-03-22 15:32:51 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:32:51 | 耗时 1 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2022-03-22 15:32:51 INFO  Febs-Async-Thread5 p6spy 2022-03-22 15:32:51 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2022-03-22T15:32:51.608+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 14, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2022-03-22 15:33:01 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 15:33:01 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2022-03-22 15:33:01 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 15:33:01 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2022-03-22 15:33:01 INFO  Febs-Async-Thread1 p6spy 2022-03-22 15:33:01 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2022-03-22T15:33:01.239+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 19, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2022-03-22 15:33:09 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:33:09 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization_user;
2022-03-22 15:33:09 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:33:09 | 耗时 1 ms | SQL 语句：
SELECT Id, User_Password, Google_Key, Account_Type, Description, Remark, User_Name, Login_Faild_Count, Last_Login_IP, Last_Login_Time, Organization_Code, Login_IP, User_Account, Create_User, Create_Date, Need_Bind_Google_Key, Status FROM t_organization_user ORDER BY Id DESC LIMIT 0,10;
2022-03-22 15:33:09 INFO  Febs-Async-Thread2 p6spy 2022-03-22 15:33:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationUserController.organizationUserList()', '2022-03-22T15:33:09.816+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 31, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organizationUser: "OrganizationUser(id=null, organizationCode=null, userName=null, userAccount=null, userPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, status=null, accountType=null, googleKey=null, needBindGoogleKey=null, loginIp=null, description=null, remark=null, createUser=null, createDate=null)"', '商户用户列表', 'admin');
2022-03-22 15:33:35 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:33:35 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2022-03-22 15:33:35 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:33:35 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2022-03-22 15:33:35 INFO  Febs-Async-Thread3 p6spy 2022-03-22 15:33:35 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2022-03-22T15:33:35.130+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 16, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2022-03-22 15:34:09 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 15:34:09 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2022-03-22 15:34:09 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 15:34:09 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2022-03-22 15:34:09 INFO  Febs-Async-Thread4 p6spy 2022-03-22 15:34:09 | 耗时 10 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2022-03-22T15:34:09.157+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 27, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2022-03-22 15:34:17 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 15:34:17 | 耗时 9 ms | SQL 语句：
SELECT MENU_ID, MODIFY_TIME, AUTH, CREATE_TIME, ICON, ORDER_NUM, PERMS, MENU_NAME, TYPE, URL, PARENT_ID FROM t_organization_user_menu ORDER BY ORDER_NUM ASC;
2022-03-22 15:34:18 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 15:34:18 | 耗时 13 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization_log WHERE (CREATE_TIME >= '2022-03-22 00:00:00' AND CREATE_TIME <= '2022-03-22 23:59:59');
2022-03-22 15:34:18 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 15:34:18 | 耗时 0 ms | SQL 语句：
SELECT ID, METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME FROM t_organization_log WHERE (CREATE_TIME >= '2022-03-22 00:00:00' AND CREATE_TIME <= '2022-03-22 23:59:59') ORDER BY ID DESC LIMIT 0,10;
2022-03-22 15:34:18 INFO  Febs-Async-Thread5 p6spy 2022-03-22 15:34:18 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationLogController.organizationLogList()', '2022-03-22T15:34:18.263+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 49, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organizationLog: OrganizationLog(id=null, username=null, operation=null, time=null, method=null, params=null, ip=null, createTime=null, location=null) organizationLogStartTime: null organizationLogEndTime: null', '商户操作日志列表', 'admin');
2022-03-22 15:34:20 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:34:20 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization_user_login_log;
2022-03-22 15:34:20 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:34:20 | 耗时 0 ms | SQL 语句：
SELECT Id, TimeConsuming, Login_State, Create_Time, Organization_Code, User_Account, Local_Ip, Message FROM t_organization_user_login_log ORDER BY Create_Time DESC LIMIT 0,10;
2022-03-22 15:34:23 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 15:34:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2022-03-22 15:34:23 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 15:34:23 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2022-03-22 15:34:24 INFO  Febs-Async-Thread1 p6spy 2022-03-22 15:34:24 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2022-03-22T15:34:24.062+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 78, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=null, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=null, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2022-03-22 15:34:25 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 15:34:25 | 耗时 11 ms | SQL 语句：
SELECT MENU_ID, AUTH, ICON, ORDER_NUM, MENU_NAME, TYPE, URL, PARENT_ID, Level_Code, MODIFY_TIME, CREATE_TIME, PERMS FROM t_agent_menu ORDER BY ORDER_NUM ASC;
2022-03-22 15:34:26 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:34:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent_system_config;
2022-03-22 15:34:26 INFO  Febs-Async-Thread2 p6spy 2022-03-22 15:34:26 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentSystemConfigController.agentSystemConfigList()', '2022-03-22T15:34:26.629+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 27, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agentSystemConfig: AgentSystemConfig(id=null, agentId=null, systemName=null, systemLogoUrl=null, systemUrl=null, approveStateCode=null, remark=null, createTime=null, logoFile=null)', '代理系统配置列表', 'admin');
2022-03-22 15:34:27 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:34:27 | 耗时 12 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent_log WHERE (CREATE_TIME >= '2022-03-22 00:00:00' AND CREATE_TIME <= '2022-03-22 23:59:59');
2022-03-22 15:34:27 INFO  Febs-Async-Thread3 p6spy 2022-03-22 15:34:27 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentLogController.agentLogList()', '2022-03-22T15:34:27.268+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 32, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agentLog: AgentLog(id=null, username=null, operation=null, time=null, method=null, params=null, ip=null, createTime=null, location=null) agentLogStartTime: null agentLogEndTime: null', '代理操作日志列表', 'admin');
2022-03-22 15:34:28 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:34:28 | 耗时 10 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent_login_log;
2022-03-22 15:34:28 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:34:28 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Account, TimeConsuming, Login_State, Create_Time, Local_Ip, Message FROM t_agent_login_log ORDER BY Create_Time DESC LIMIT 0,10;
2022-03-22 15:34:33 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 15:34:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 15:34:33 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 15:34:33 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 15:34:35 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:34:35 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:34:35 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 15:34:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:36:34 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:36:34 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:36:34 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:36:34 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:37:34 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 15:37:34 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:37:34 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:37:34 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:38:35 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:38:35 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:38:35 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 15:38:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:39:05 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 15:39:05 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:39:05 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:39:05 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:39:26 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:39:26 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:39:26 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:39:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:39:37 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:39:37 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:39:37 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:39:37 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:40:58 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 15:40:58 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:40:58 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 15:40:58 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:41:35 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 15:41:35 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:41:35 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:41:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:41:55 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:41:55 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:41:55 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:41:55 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:44:58 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 15:44:58 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:44:58 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:44:58 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:45:36 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 15:45:36 | 耗时 8 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-22 15:45:47 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:45:47 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:45:47 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:45:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:46:09 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 15:46:09 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:46:09 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:46:09 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2022-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:46:27 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 15:46:27 | 耗时 9 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-22 15:46:27 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 15:46:27 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-22 15:46:27 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 15:46:27 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-22 15:46:28 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:46:28 | 耗时 4 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-03-22 15:46:28 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 15:46:28 | 耗时 0 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-22 15:46:28 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:46:28 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:46:28 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 15:46:28 | 耗时 14 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2022-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:46:31 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:46:31 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:46:31 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:46:31 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:47:31 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:47:31 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:47:31 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:47:31 | 耗时 14 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2022-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:49:44 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:49:44 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2022-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:49:44 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 15:49:44 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:50:28 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 15:50:28 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:50:28 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 15:50:28 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2022-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:51:14 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 15:51:14 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:51:14 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:51:14 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2022-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:51:21 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:51:21 | 耗时 13 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2017-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:51:21 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:51:21 | 耗时 35 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, channel_cost_amount, res_msgid, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, up_agent_income_amount FROM t_send_record_history WHERE (create_time >= '2017-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 15:51:25 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:51:25 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2017-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:51:25 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:51:25 | 耗时 20 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, channel_cost_amount, res_msgid, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, up_agent_income_amount FROM t_send_record_history WHERE (create_time >= '2017-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 15:55:33 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:55:33 | 耗时 3 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-22 15:55:33 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:55:33 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-22 15:55:33 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:55:33 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-22 15:55:34 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:55:34 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-22 15:55:34 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:55:34 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-22 15:55:34 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:55:34 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-22 15:55:34 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 15:55:34 | 耗时 12 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-03-22 15:55:34 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 15:55:34 | 耗时 9 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:55:34 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:55:34 | 耗时 31 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2022-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:55:39 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:55:39 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2018-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:55:39 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:55:39 | 耗时 21 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, channel_cost_amount, res_msgid, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, up_agent_income_amount FROM t_send_record_history WHERE (create_time >= '2018-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 15:55:40 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:55:40 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2018-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800' AND res_msgid = '1');
2022-03-22 15:55:44 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:55:44 | 耗时 73 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record_history WHERE (create_time >= '2018-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:55:44 INFO  Febs-Async-Thread4 p6spy 2022-03-22 15:55:44 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordHistoryController.statistic()', '2022-03-22T15:55:44.893+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 102, ' sendRecordHistory: SendRecordHistoryQuery(createStartTime=Sun Mar 11 00:00:00 CST 2018, createEndTime=Fri Mar 11 23:59:59 CST 2022, submitStartTime=null, submitEndTime=null)', '统计数据', 'admin');
2022-03-22 15:55:47 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:55:47 | 耗时 38 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record_history WHERE (create_time >= '2018-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:55:47 INFO  Febs-Async-Thread5 p6spy 2022-03-22 15:55:47 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordHistoryController.statistic()', '2022-03-22T15:55:47.079+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 48, ' sendRecordHistory: SendRecordHistoryQuery(createStartTime=Sun Mar 11 00:00:00 CST 2018, createEndTime=Fri Mar 11 23:59:59 CST 2022, submitStartTime=null, submitEndTime=null)', '统计数据', 'admin');
2022-03-22 15:55:48 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 15:55:48 | 耗时 50 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record_history WHERE (create_time >= '2018-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:55:48 INFO  Febs-Async-Thread1 p6spy 2022-03-22 15:55:48 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordHistoryController.statistic()', '2022-03-22T15:55:48.030+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 60, ' sendRecordHistory: SendRecordHistoryQuery(createStartTime=Sun Mar 11 00:00:00 CST 2018, createEndTime=Fri Mar 11 23:59:59 CST 2022, submitStartTime=null, submitEndTime=null)', '统计数据', 'admin');
2022-03-22 15:56:49 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:56:49 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:56:49 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:56:49 | 耗时 23 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2022-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:56:50 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:56:50 | 耗时 10 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-22 15:56:50 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:56:50 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-22 15:56:50 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:56:50 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-22 15:56:51 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:56:51 | 耗时 4 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-03-22 15:56:51 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:56:51 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-22 15:56:51 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 15:56:51 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:56:51 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 15:56:51 | 耗时 13 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2022-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:56:56 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:56:56 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2019-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:56:56 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:56:56 | 耗时 30 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, channel_cost_amount, res_msgid, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, up_agent_income_amount FROM t_send_record_history WHERE (create_time >= '2019-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 15:56:58 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 15:56:58 | 耗时 60 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record_history WHERE (create_time >= '2019-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:56:58 INFO  Febs-Async-Thread2 p6spy 2022-03-22 15:56:58 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordHistoryController.statistic()', '2022-03-22T15:56:58.963+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 76, ' sendRecordHistory: SendRecordHistoryQuery(createStartTime=Mon Mar 11 00:00:00 CST 2019, createEndTime=Fri Mar 11 23:59:59 CST 2022, submitStartTime=null, submitEndTime=null)', '统计数据', 'admin');
2022-03-22 15:57:02 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 15:57:02 | 耗时 26 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2019-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800' AND res_msgid = '1');
2022-03-22 15:57:03 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:57:03 | 耗时 19 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record_history WHERE (create_time >= '2019-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800' AND res_msgid = '1');
2022-03-22 15:57:03 INFO  Febs-Async-Thread3 p6spy 2022-03-22 15:57:03 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordHistoryController.statistic()', '2022-03-22T15:57:03.161+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 36, ' sendRecordHistory: SendRecordHistoryQuery(createStartTime=Mon Mar 11 00:00:00 CST 2019, createEndTime=Fri Mar 11 23:59:59 CST 2022, submitStartTime=null, submitEndTime=null)', '统计数据', 'admin');
2022-03-22 15:57:06 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:57:06 | 耗时 16 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2019-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:57:06 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:57:06 | 耗时 14 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, channel_cost_amount, res_msgid, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, up_agent_income_amount FROM t_send_record_history WHERE (create_time >= '2019-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 15:57:16 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:57:16 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:57:16 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:57:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:57:20 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 15:57:20 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2018-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:57:20 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 15:57:20 | 耗时 3 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2018-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 15:57:54 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 15:57:54 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:57:54 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 15:57:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:57:59 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:57:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2019-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:57:59 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:57:59 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2019-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 15:58:13 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:58:13 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:58:13 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 15:58:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:58:16 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:58:16 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2020-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:58:16 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:58:16 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2020-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 15:58:49 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 15:58:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:58:49 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 15:58:49 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:58:54 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 15:58:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2019-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 15:58:54 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 15:58:54 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2019-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 15:59:03 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:59:03 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:59:03 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 15:59:03 | 耗时 14 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2022-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:59:06 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:59:06 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2020-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:59:06 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 15:59:06 | 耗时 26 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, channel_cost_amount, res_msgid, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, up_agent_income_amount FROM t_send_record_history WHERE (create_time >= '2020-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 15:59:28 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 15:59:28 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:59:28 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 15:59:28 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2022-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:59:32 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 15:59:32 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2020-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:59:32 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 15:59:32 | 耗时 15 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, channel_cost_amount, res_msgid, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, up_agent_income_amount FROM t_send_record_history WHERE (create_time >= '2020-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 15:59:46 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 15:59:46 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 15:59:46 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 15:59:46 | 耗时 26 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2022-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:59:50 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:59:50 | 耗时 20 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2020-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 15:59:50 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 15:59:50 | 耗时 29 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, channel_cost_amount, res_msgid, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, up_agent_income_amount FROM t_send_record_history WHERE (create_time >= '2020-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:00:13 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 16:00:13 | 耗时 2 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 16:00:13 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 16:00:13 | 耗时 14 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2022-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 16:00:17 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 16:00:17 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record_history WHERE (create_time >= '2019-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 16:00:17 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 16:00:17 | 耗时 16 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, channel_cost_amount, res_msgid, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, up_agent_income_amount FROM t_send_record_history WHERE (create_time >= '2019-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:00:55 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 16:00:55 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2019-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 16:00:55 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 16:00:55 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2019-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:01:24 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 16:01:24 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 16:01:24 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 16:01:24 | 耗时 2 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 16:01:28 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 16:01:28 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2019-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 16:01:28 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 16:01:28 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2019-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:01:43 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 16:01:43 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2019-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 16:01:43 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 16:01:43 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2019-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:02:06 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 16:02:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 16:02:06 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 16:02:06 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 16:02:10 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 16:02:10 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2020-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 16:02:10 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 16:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2020-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:02:14 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 16:02:14 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2020-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 16:02:14 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 16:02:14 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2020-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 10,10;
2022-03-22 16:02:15 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 16:02:15 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2020-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 16:02:15 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 16:02:15 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2020-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 20,10;
2022-03-22 16:02:15 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 16:02:15 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2020-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 16:02:15 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 16:02:15 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2020-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 130,10;
2022-03-22 16:02:22 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 16:02:22 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2020-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 16:02:22 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 16:02:22 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2020-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:02:43 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 16:02:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:02:43 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 16:02:43 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:02:46 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 16:02:46 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:02:46 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 16:02:46 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:02:48 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 16:02:48 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:02:48 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 16:02:48 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:02:59 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 16:02:59 | 耗时 12 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box_history WHERE (create_time >= '2022-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 16:03:03 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 16:03:03 | 耗时 3 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-22 16:03:03 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 16:03:03 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-22 16:03:03 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 16:03:03 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-22 16:03:04 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 16:03:04 | 耗时 0 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-22 16:03:04 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 16:03:04 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-03-22 16:03:04 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 16:03:04 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box_history WHERE (create_time >= '2022-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 16:03:09 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 16:03:09 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:03:09 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 16:03:09 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:03:51 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 16:03:51 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:03:51 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 16:03:51 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:04:13 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 16:04:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:04:13 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 16:04:13 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:04:42 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 16:04:42 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:04:42 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 16:04:42 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:04:55 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 16:04:55 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:04:55 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 16:04:55 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:05:09 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 16:05:09 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:05:09 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 16:05:09 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:05:43 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 16:05:43 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:05:43 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 16:05:43 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:06:06 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 16:06:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:06:06 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 16:06:06 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:06:27 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 16:06:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:06:28 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 16:06:28 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:06:42 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 16:06:42 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2018-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:06:42 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 16:06:42 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2018-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:06:54 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 16:06:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:06:54 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 16:06:54 | 耗时 2 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:06:59 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 16:06:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2017-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:06:59 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 16:06:59 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2017-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:07:28 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 16:07:28 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:07:28 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 16:07:28 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:07:33 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 16:07:33 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2018-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:07:33 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 16:07:33 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2018-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:07:37 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 16:07:37 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2018-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:07:37 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 16:07:37 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2018-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 10,10;
2022-03-22 16:07:39 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 16:07:39 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2018-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:07:39 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 16:07:39 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2018-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 20,10;
2022-03-22 16:07:40 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 16:07:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2018-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:07:40 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 16:07:40 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2018-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 100,10;
2022-03-22 16:10:05 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 16:10:05 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box_history WHERE (create_time >= '2022-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 16:10:10 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 16:10:10 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box_history WHERE (create_time >= '2018-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 16:10:10 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 16:10:10 | 耗时 28 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, agent_income_amount, timing_time, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, income_amount, number_count, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box_history WHERE (create_time >= '2018-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:10:22 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 16:10:22 | 耗时 14 ms | SQL 语句：
SELECT COUNT(DISTINCT org_code) AS orgTotal, COUNT(1) AS total, COALESCE(SUM(number_count), 0) AS numberCount, COALESCE(SUM(sms_count), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_box_history WHERE (create_time >= '2018-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 16:10:22 INFO  Febs-Async-Thread4 p6spy 2022-03-22 16:10:22 | 耗时 11 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxHistoryController.statistic()', '2022-03-22T16:10:22.506+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 23, ' sendBoxHistory: SendBoxHistoryQuery(isTiming=null, isTimingFlag=null, leTimingTime=null, sortingStartTime=null, sortingEndTime=null, createStartTime=Sun Mar 11 00:00:00 CST 2018, createEndTime=Fri Mar 11 23:59:59 CST 2022, isLongSms=null)', '统计数据', 'admin');
2022-03-22 16:10:26 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 16:10:26 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box_history WHERE (create_time >= '2018-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800');
2022-03-22 16:10:26 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 16:10:26 | 耗时 9 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, agent_income_amount, timing_time, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, income_amount, number_count, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box_history WHERE (create_time >= '2018-03-11T00:00:00.000+0800' AND create_time <= '2022-03-11T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:14:27 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 16:14:27 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 16:14:27 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 16:21:43 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-03-22 16:21:43 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-03-22 16:39:16 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 16:39:16 | 耗时 10 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-22 16:39:16 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 16:39:16 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-22 16:39:16 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 16:39:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 16:39:16 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 16:39:16 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 16:46:36 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 16:46:36 | 耗时 9 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-22 16:52:56 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 16:52:56 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id;
2022-03-22 16:52:56 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 16:52:56 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 16:52:59 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 16:52:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_channel_id = 13);
2022-03-22 16:52:59 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 16:52:59 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value, Operator FROM t_sms_channel_cost WHERE (sms_channel_id = 13) LIMIT 0,10;
2022-03-22 17:04:04 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 17:04:04 | 耗时 0 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-22 17:21:43 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-03-22 17:21:43 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-03-22 17:31:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2022-03-22 17:31:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647933668878 paused.
2022-03-22 17:31:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2022-03-22 17:31:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2022-03-22 17:31:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647933668878 shutting down.
2022-03-22 17:31:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647933668878 paused.
2022-03-22 17:31:52 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647933668878 shutdown complete.
2022-03-22 17:31:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2022-03-22 17:31:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2022-03-22 17:31:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2022-03-22 17:31:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2022-03-22 17:31:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2022-03-22 17:31:52 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2022-03-22 19:40:40 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 196724 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2022-03-22 19:40:40 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2022-03-22 19:40:44 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-22 19:40:44 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-22 19:40:45 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 823ms. Found 0 repository interfaces.
2022-03-22 19:40:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ab280f5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$65e9d7a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$24b3ba92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$373d2f16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$7f620b23] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:47 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-03-22 19:40:47 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-03-22 19:40:47 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2022-03-22 19:40:47 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2022-03-22 19:40:47 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2022-03-22 19:40:47 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2022-03-22 19:40:47 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2022-03-22 19:40:47 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2022-03-22 19:40:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:40:53 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2022-03-22 19:40:53 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2022-03-22 19:40:53 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-03-22 19:40:53 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2022-03-22 19:40:54 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-03-22 19:40:54 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 14054 ms
2022-03-22 19:40:55 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2022-03-22 19:40:59 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2022-03-22 19:40:59 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-22 19:40:59 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2022-03-22 19:40:59 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2022-03-22 19:40:59 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2022-03-22 19:40:59 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1647949259406'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-22 19:40:59 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2022-03-22 19:40:59 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2022-03-22 19:40:59 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5184da2b
2022-03-22 19:40:59 INFO  main p6spy 2022-03-22 19:40:59 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2022-03-22 19:41:01 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-22 19:41:02 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-03-22 19:41:02 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2022-03-22 19:41:02 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2022-03-22 19:41:02 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2022-03-22 19:41:03 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2022-03-22 19:41:03 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2022-03-22 19:41:03 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2022-03-22 19:41:03 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2022-03-22 19:41:03 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2022-03-22 19:41:03 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2022-03-22 19:41:03 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 25.08 seconds (JVM running for 28.832)
2022-03-22 19:41:03 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2022-03-22 19:41:03 INFO  main p6spy 2022-03-22 19:41:03 | 耗时 2 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-03-22 19:41:04 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2022-03-22 19:41:04 INFO  main p6spy 2022-03-22 19:41:04 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2022-03-22 19:41:04 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2022-03-22 19:41:04 INFO  main p6spy 2022-03-22 19:41:04 | 耗时 2 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2022-03-22 19:41:04 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2022-03-22 19:41:04 INFO  main p6spy 2022-03-22 19:41:04 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-03-22 19:41:04 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2022-03-22 19:41:04 INFO  main p6spy 2022-03-22 19:41:04 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2022-03-22 19:41:04 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2022-03-22 19:41:04 INFO  main p6spy 2022-03-22 19:41:04 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2022-03-22 19:41:04 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2022-03-22 19:41:04 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-22 19:41:04 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2022-03-22 19:41:04 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1647933668878"'s failed in-progress jobs.
2022-03-22 19:41:04 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647949259406 started.
2022-03-22 19:41:05 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-22 19:41:05 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-03-22 19:41:05 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 42 ms
2022-03-22 19:41:05 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2022-03-22 19:41:06 INFO  main p6spy 2022-03-22 19:41:06 | 耗时 2281 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2022-03-22 19:41:12 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2022-03-22 19:41:12 INFO  main p6spy 2022-03-22 19:41:12 | 耗时 1 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2022-03-22 19:41:12 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2022-03-22 19:41:12 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-03-22 19:41:12 INFO  main p6spy 2022-03-22 19:41:12 | 耗时 1 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-03-22 19:41:12 INFO  main com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-03-22 19:41:12 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2022-03-22 19:41:12 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2022-03-22 19:41:12 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-03-22 19:41:25 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2022-03-22 19:41:25 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-22 19:41:25 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-22 19:41:25 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2022-03-22 19:41:25 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://192.168.189.1:8088/login
2022-03-22 19:41:27 INFO  http-nio-8088-exec-2 com.hero.sms.common.aspect.LimitAspect IP:192.168.189.1 第 1 次访问key为 [limit_login192.168.189.1]，描述为 [登录接口] 的接口
2022-03-22 19:41:27 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 19:41:27 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-22 19:41:27 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 19:41:27 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-22 19:41:27 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 19:41:27 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET GOOGLE_KEY = 'EJ5QP4YTYV47JOQG', DESCRIPTION = '', PASSWORD = '8d8391e727c59f18b08fcfe6a045150d', MODIFY_TIME = '2020-08-25T21:48:51.000+0800', THEME = 'white', EMAIL = 'admin@qq.com', SSEX = '2', MOBILE = '18888888888', DEPT_ID = 1, AVATAR = 'gaOngJwsRYRaVAuXXcmB.png', LOGIN_FAILD_COUNT = 0, LAST_LOGIN_TIME = '2022-03-22T15:22:01.000+0800', CREATE_TIME = '2020-03-04T17:26:18.000+0800', IS_TAB = '1', STATUS = '1', USERNAME = 'admin' WHERE USER_ID = 8;
2022-03-22 19:41:27 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 19:41:27 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log (`SYSTEM`, LOGIN_TIME, BROWSER, IP, LOCATION, USERNAME) VALUES ('Windows 10', '2022-03-22T19:41:27.764+0800', 'Chrome 98', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 'admin');
2022-03-22 19:41:27 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 19:41:27 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-22 19:41:28 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 19:41:28 | 耗时 6 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-22 19:41:28 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 19:41:28 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-22 19:41:29 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 19:41:29 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-22 19:41:29 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 19:41:29 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-22 19:41:29 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 19:41:29 | 耗时 8 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-03-22 19:41:29 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 19:41:29 | 耗时 3 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-22 19:41:29 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 19:41:29 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2022-03-22T19:41:29.978+0800' WHERE (USERNAME = 'admin');
2022-03-22 19:41:30 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 19:41:30 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2022-03-22 19:41:30 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 19:41:30 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-03-22 19:41:30 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 19:41:30 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2022-03-22 19:41:30 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 19:41:30 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2022-03-22 19:41:30 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 19:41:30 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2022-03-22 19:41:30 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 19:41:30 | 耗时 2 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_operator AS operator FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_operator ORDER BY `value` DESC;
2022-03-22 19:41:30 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 19:41:30 | 耗时 3 ms | SQL 语句：
SELECT count(1) AS `value`, t.org_code AS orgCode FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.org_code ORDER BY `value` DESC LIMIT 10;
2022-03-22 19:41:30 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 19:41:30 | 耗时 1 ms | SQL 语句：
SELECT count(1) AS `value`, t.sms_number_province AS province FROM t_send_record t WHERE t.create_time > DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') GROUP BY t.sms_number_province ORDER BY `value` DESC;
2022-03-22 19:41:49 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 19:41:49 | 耗时 22 ms | SQL 语句：
SELECT * FROM t_sms_channel WHERE state = 1 AND is_del = 0;
2022-03-22 19:42:12 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 19:42:12 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id;
2022-03-22 19:42:12 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 19:42:12 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 19:42:26 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 19:42:26 | 耗时 28 ms | SQL 语句：
SELECT * FROM t_sms_channel WHERE state = 1 AND id IN (SELECT scc.sms_channel_id FROM t_sms_channel_cost scc WHERE scc.name = '') AND is_del = 0;
2022-03-22 19:42:43 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 19:42:43 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id WHERE cnl.state = 5;
2022-03-22 19:42:43 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 19:42:43 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id WHERE cnl.state = 5 ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 19:43:32 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2022-03-22 19:43:32 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647949259406 paused.
2022-03-22 19:43:32 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2022-03-22 19:43:32 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2022-03-22 19:43:32 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647949259406 shutting down.
2022-03-22 19:43:32 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647949259406 paused.
2022-03-22 19:43:32 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647949259406 shutdown complete.
2022-03-22 19:43:33 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2022-03-22 19:43:33 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2022-03-22 19:43:33 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2022-03-22 19:43:33 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2022-03-22 19:43:33 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2022-03-22 19:43:33 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2022-03-22 19:43:44 INFO  main com.hero.sms.SmsApplication Starting SmsApplication on LAPTOP-L07PL5KH with PID 198088 (C:\work\workspaceSmsBf\sms\sms-admin\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-admin)
2022-03-22 19:43:44 INFO  main com.hero.sms.SmsApplication The following profiles are active: test
2022-03-22 19:43:49 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-22 19:43:49 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-22 19:43:50 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 1225ms. Found 0 repository interfaces.
2022-03-22 19:43:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$b4c0223a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$6f81ea85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$2e4bcd72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$40d541f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$88fa1e03] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:52 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2022-03-22 19:43:52 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2022-03-22 19:43:52 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2022-03-22 19:43:52 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2022-03-22 19:43:52 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2022-03-22 19:43:52 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2022-03-22 19:43:52 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2022-03-22 19:43:52 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2022-03-22 19:43:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:52 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.hero.sms.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.hero.sms.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.hero.sms.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.hero.sms.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.hero.sms.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:59 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-22 19:43:59 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8088 (http)
2022-03-22 19:43:59 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8088"]
2022-03-22 19:43:59 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-03-22 19:43:59 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2022-03-22 19:44:00 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-03-22 19:44:00 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 15630 ms
2022-03-22 19:44:01 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2022-03-22 19:44:04 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2022-03-22 19:44:04 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-22 19:44:04 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2022-03-22 19:44:04 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2022-03-22 19:44:04 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2022-03-22 19:44:04 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'LAPTOP-L07PL5KH1647949444406'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-22 19:44:04 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2022-03-22 19:44:04 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2022-03-22 19:44:04 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@145ef9e8
2022-03-22 19:44:04 INFO  main p6spy 2022-03-22 19:44:04 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2022-03-22 19:44:06 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-22 19:44:06 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-03-22 19:44:06 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2022-03-22 19:44:06 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2022-03-22 19:44:06 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2022-03-22 19:44:07 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2022-03-22 19:44:07 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2022-03-22 19:44:07 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2022-03-22 19:44:07 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2022-03-22 19:44:07 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8088"]
2022-03-22 19:44:07 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8088 (http) with context path ''
2022-03-22 19:44:07 INFO  main com.hero.sms.SmsApplication Started SmsApplication in 24.785 seconds (JVM running for 28.063)
2022-03-22 19:44:07 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2022-03-22 19:44:08 INFO  main p6spy 2022-03-22 19:44:08 | 耗时 1 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2022-03-22 19:44:08 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2022-03-22 19:44:08 INFO  main p6spy 2022-03-22 19:44:08 | 耗时 2 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2022-03-22 19:44:08 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2022-03-22 19:44:08 INFO  main p6spy 2022-03-22 19:44:08 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2022-03-22 19:44:08 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2022-03-22 19:44:08 INFO  main p6spy 2022-03-22 19:44:08 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2022-03-22 19:44:08 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2022-03-22 19:44:08 INFO  main p6spy 2022-03-22 19:44:08 | 耗时 1 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2022-03-22 19:44:08 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2022-03-22 19:44:08 INFO  main p6spy 2022-03-22 19:44:08 | 耗时 1 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2022-03-22 19:44:08 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2022-03-22 19:44:08 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-22 19:44:08 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2022-03-22 19:44:08 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "LAPTOP-L07PL5KH1647949259406"'s failed in-progress jobs.
2022-03-22 19:44:08 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647949444406 started.
2022-03-22 19:44:09 INFO  main p6spy 2022-03-22 19:44:09 | 耗时 1042 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2022-03-22 19:44:15 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2022-03-22 19:44:15 INFO  main p6spy 2022-03-22 19:44:15 | 耗时 1 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2022-03-22 19:44:15 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2022-03-22 19:44:15 INFO  main com.hero.sms.common.DatabaseCache Begin-缓存地区列表
2022-03-22 19:44:15 INFO  main p6spy 2022-03-22 19:44:15 | 耗时 1 ms | SQL 语句：
SELECT id, extend, create_time, area_name, area_coding, out_area, in_area, order_num FROM t_area_code ORDER BY order_num ASC;
2022-03-22 19:44:15 INFO  main com.hero.sms.common.DatabaseCache End-地区列表缓存完成
2022-03-22 19:44:15 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2022-03-22 19:44:16 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2022-03-22 19:44:16 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-03-22 19:44:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2022-03-22 19:44:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-22 19:44:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-22 19:44:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2022-03-22 19:44:30 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://192.168.189.1:8088/login
2022-03-22 19:44:34 INFO  http-nio-8088-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-22 19:44:34 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-03-22 19:44:34 INFO  http-nio-8088-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 14 ms
2022-03-22 19:44:34 INFO  http-nio-8088-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2022-03-22 19:44:44 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 19:44:44 | 耗时 28 ms | SQL 语句：
SELECT * FROM t_sms_channel WHERE state = 1 AND is_del = 0;
2022-03-22 19:44:53 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 19:44:53 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id WHERE cnl.state = 5;
2022-03-22 19:44:53 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 19:44:53 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id WHERE cnl.state = 5 ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 19:45:06 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 19:45:06 | 耗时 20 ms | SQL 语句：
SELECT * FROM t_sms_channel WHERE state = 1 AND id IN (SELECT scc.sms_channel_id FROM t_sms_channel_cost scc WHERE scc.name = '+853') AND is_del = 0;
2022-03-22 19:45:21 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 19:45:21 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id WHERE cnl.state = 5 AND FIND_IN_SET('+853', channelCost.areaCodes);
2022-03-22 19:45:21 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 19:45:21 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id WHERE cnl.state = 5 AND FIND_IN_SET('+853', channelCost.areaCodes) ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 19:45:34 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 19:45:34 | 耗时 0 ms | SQL 语句：
SELECT * FROM t_sms_channel WHERE state = 1 AND is_del = 0;
2022-03-22 19:45:34 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 19:45:34 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id;
2022-03-22 19:45:34 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 19:45:34 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 19:45:52 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 19:45:52 | 耗时 5 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-22 19:45:52 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 19:45:52 | 耗时 6 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-22 19:45:52 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 19:45:52 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.google_key, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, u.LOGIN_FAILD_COUNT, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.google_key, u.avatar, u.theme, u.is_tab;
2022-03-22 19:45:54 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 19:45:54 | 耗时 15 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2022-03-22 19:45:54 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 19:45:54 | 耗时 3 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-22 19:46:03 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 19:46:03 | 耗时 25 ms | SQL 语句：
SELECT * FROM t_sms_channel WHERE is_del = 0;
2022-03-22 19:46:11 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 19:46:11 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id;
2022-03-22 19:46:11 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 19:46:11 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 19:46:26 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 19:46:26 | 耗时 43 ms | SQL 语句：
SELECT * FROM t_sms_channel WHERE state = 5 AND is_del = 0;
2022-03-22 19:46:34 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 19:46:34 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id WHERE cnl.state = 5;
2022-03-22 19:46:34 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 19:46:34 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id WHERE cnl.state = 5 ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 19:46:42 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 19:46:42 | 耗时 25 ms | SQL 语句：
SELECT * FROM t_sms_channel WHERE state = 5 AND id IN (SELECT scc.sms_channel_id FROM t_sms_channel_cost scc WHERE scc.name = '+1CA') AND is_del = 0;
2022-03-22 19:46:51 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 19:46:51 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id WHERE cnl.state = 5 AND FIND_IN_SET('+1CA', channelCost.areaCodes);
2022-03-22 19:46:51 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 19:46:51 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id WHERE cnl.state = 5 AND FIND_IN_SET('+1CA', channelCost.areaCodes) ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 19:46:58 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 19:46:58 | 耗时 15 ms | SQL 语句：
SELECT * FROM t_sms_channel WHERE state = 5 AND id IN (SELECT scc.sms_channel_id FROM t_sms_channel_cost scc WHERE scc.name = '+853') AND is_del = 0;
2022-03-22 19:47:05 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 19:47:05 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id WHERE cnl.state = 5 AND FIND_IN_SET('+853', channelCost.areaCodes);
2022-03-22 19:47:05 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 19:47:05 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id WHERE cnl.state = 5 AND FIND_IN_SET('+853', channelCost.areaCodes) ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 19:47:12 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 19:47:12 | 耗时 25 ms | SQL 语句：
SELECT * FROM t_sms_channel WHERE id IN (SELECT scc.sms_channel_id FROM t_sms_channel_cost scc WHERE scc.name = '+853') AND is_del = 0;
2022-03-22 19:47:18 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 19:47:18 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id WHERE FIND_IN_SET('+853', channelCost.areaCodes);
2022-03-22 19:47:18 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 19:47:18 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id WHERE FIND_IN_SET('+853', channelCost.areaCodes) ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 19:47:35 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 19:47:35 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id;
2022-03-22 19:47:35 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 19:47:35 | 耗时 3 ms | SQL 语句：
SELECT * FROM t_sms_channel cnl LEFT JOIN (SELECT temp.channelId, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.sms_channel_id channelId, c.`NAME` AS `name` FROM t_sms_channel_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.channelId) channelGroup ON channelGroup.channelId = cnl.id LEFT JOIN (SELECT scc.channelId, GROUP_CONCAT(ac.in_area SEPARATOR ',') AS areaCodes, GROUP_CONCAT(ac.area_name SEPARATOR ',') AS areaNames FROM (SELECT sms_channel_id AS channelId, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name`) scc, t_area_code ac WHERE scc.areaCode = ac.in_area GROUP BY scc.channelId) channelCost ON channelCost.channelId = cnl.id ORDER BY cnl.id DESC LIMIT 0,10;
2022-03-22 19:49:36 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 19:49:36 | 耗时 0 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-22 20:26:12 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 20:26:12 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-22 20:26:12 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 20:26:12 | 耗时 5 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-22 20:26:13 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 20:26:13 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 20:26:13 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 20:26:13 | 耗时 2 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:26:18 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 20:26:18 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-21T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 20:26:18 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 20:26:18 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-21T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:28:17 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 20:28:17 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-21T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 20:28:17 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 20:28:17 | 耗时 2 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-21T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:28:27 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 20:28:27 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-21T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 20:28:27 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 20:28:27 | 耗时 2 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-21T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:28:54 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 20:28:54 | 耗时 1 ms | SQL 语句：
SELECT id, create_time, property_type, name, sms_channel_id, description, remark, value FROM t_sms_channel_property WHERE (sms_channel_id = 11);
2022-03-22 20:28:54 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 20:28:54 | 耗时 1 ms | SQL 语句：
SELECT id, name, description FROM t_number_pool_group;
2022-03-22 20:33:29 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 20:33:29 | 耗时 3 ms | SQL 语句：
DELETE FROM t_sms_channel_property WHERE (sms_channel_id = 11);
2022-03-22 20:33:29 INFO  Febs-Async-Thread1 p6spy 2022-03-22 20:33:29 | 耗时 19 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelPropertyController.updateSmsChannelProperties()', '2022-03-22T20:33:29.725+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 131, ' smsChannelProperties: "[SmsChannelProperty(id=742, smsChannelId=11, propertyType=null, name=host, value=103.156.178.53, description=, remark=admin添加, createTime=Tue Mar 22 20:33:29 CST 2022), SmsChannelProperty(id=743, smsChannelId=11, propertyType=null, name=port, value=63456, description=, remark=admin添加, createTime=Tue Mar 22 20:33:29 CST 2022), SmsChannelProperty(id=744, smsChannelId=11, propertyType=null, name=systemId, value=BNF220224234451ZNIR, description=, remark=admin添加, createTime=Tue Mar 22 20:33:29 CST 2022), SmsChannelProperty(id=745, smsChannelId=11, propertyType=null, name=password, value=wPqXAAe0, description=, remark=admin添加, createTime=Tue Mar 22 20:33:29 CST 2022), SmsChannelProperty(id=746, smsChannelId=11, propertyType=null, name=systemType, value=SMS, description=, remark=admin添加, createTime=Tue Mar 22 20:33:29 CST 2022), SmsChannelProperty(id=747, smsChannelId=11, propertyType=null, name=version, value=52, description=, remark=admin添加, createTime=Tue Mar 22 20:33:29 CST 2022), SmsChannelProperty(id=748, smsChannelId=11, propertyType=null, name=addrTon, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:33:29 CST 2022), SmsChannelProperty(id=749, smsChannelId=11, propertyType=null, name=addrNpi, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:33:29 CST 2022), SmsChannelProperty(id=750, smsChannelId=11, propertyType=null, name=maxChannels, value=3, description=, remark=admin添加, createTime=Tue Mar 22 20:33:29 CST 2022), SmsChannelProperty(id=751, smsChannelId=11, propertyType=null, name=speed, value=100, description=, remark=admin添加, createTime=Tue Mar 22 20:33:29 CST 2022), SmsChannelProperty(id=752, smsChannelId=11, propertyType=null, name=writeLimit, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:33:29 CST 2022), SmsChannelProperty(id=753, smsChannelId=11, propertyType=null, name=readLimit, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:33:29 CST 2022), SmsChannelProperty(id=754, smsChannelId=11, propertyType=null, name=openNumberPool, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:33:29 CST 2022), SmsChannelProperty(id=755, smsChannelId=11, propertyType=null, name=numberPoolGroup, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:33:29 CST 2022)]"', '修改SmsChannelProperty', 'admin');
2022-03-22 20:33:35 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 20:33:35 | 耗时 0 ms | SQL 语句：
SELECT id, create_time, property_type, name, sms_channel_id, description, remark, value FROM t_sms_channel_property WHERE (sms_channel_id = 11);
2022-03-22 20:33:35 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 20:33:35 | 耗时 1 ms | SQL 语句：
SELECT id, name, description FROM t_number_pool_group;
2022-03-22 20:34:10 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 20:34:10 | 耗时 4 ms | SQL 语句：
DELETE FROM t_sms_channel_property WHERE (sms_channel_id = 11);
2022-03-22 20:34:10 INFO  Febs-Async-Thread2 p6spy 2022-03-22 20:34:10 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelPropertyController.updateSmsChannelProperties()', '2022-03-22T20:34:10.887+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 51, ' smsChannelProperties: "[SmsChannelProperty(id=756, smsChannelId=11, propertyType=null, name=host, value=103.156.178.53, description=, remark=admin添加, createTime=Tue Mar 22 20:34:10 CST 2022), SmsChannelProperty(id=757, smsChannelId=11, propertyType=null, name=port, value=63456, description=, remark=admin添加, createTime=Tue Mar 22 20:34:10 CST 2022), SmsChannelProperty(id=758, smsChannelId=11, propertyType=null, name=systemId, value=BNF210915230719BLNH, description=, remark=admin添加, createTime=Tue Mar 22 20:34:10 CST 2022), SmsChannelProperty(id=759, smsChannelId=11, propertyType=null, name=password, value=wPqXAAe0, description=, remark=admin添加, createTime=Tue Mar 22 20:34:10 CST 2022), SmsChannelProperty(id=760, smsChannelId=11, propertyType=null, name=systemType, value=SMS, description=, remark=admin添加, createTime=Tue Mar 22 20:34:10 CST 2022), SmsChannelProperty(id=761, smsChannelId=11, propertyType=null, name=version, value=52, description=, remark=admin添加, createTime=Tue Mar 22 20:34:10 CST 2022), SmsChannelProperty(id=762, smsChannelId=11, propertyType=null, name=addrTon, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:34:10 CST 2022), SmsChannelProperty(id=763, smsChannelId=11, propertyType=null, name=addrNpi, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:34:10 CST 2022), SmsChannelProperty(id=764, smsChannelId=11, propertyType=null, name=maxChannels, value=3, description=, remark=admin添加, createTime=Tue Mar 22 20:34:10 CST 2022), SmsChannelProperty(id=765, smsChannelId=11, propertyType=null, name=speed, value=100, description=, remark=admin添加, createTime=Tue Mar 22 20:34:10 CST 2022), SmsChannelProperty(id=766, smsChannelId=11, propertyType=null, name=writeLimit, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:34:10 CST 2022), SmsChannelProperty(id=767, smsChannelId=11, propertyType=null, name=readLimit, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:34:10 CST 2022), SmsChannelProperty(id=768, smsChannelId=11, propertyType=null, name=openNumberPool, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:34:10 CST 2022), SmsChannelProperty(id=769, smsChannelId=11, propertyType=null, name=numberPoolGroup, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:34:10 CST 2022)]"', '修改SmsChannelProperty', 'admin');
2022-03-22 20:34:20 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 20:34:20 | 耗时 0 ms | SQL 语句：
SELECT id, create_time, property_type, name, sms_channel_id, description, remark, value FROM t_sms_channel_property WHERE (sms_channel_id = 11);
2022-03-22 20:34:20 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 20:34:20 | 耗时 1 ms | SQL 语句：
SELECT id, name, description FROM t_number_pool_group;
2022-03-22 20:34:23 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 20:34:23 | 耗时 2 ms | SQL 语句：
DELETE FROM t_sms_channel_property WHERE (sms_channel_id = 11);
2022-03-22 20:34:23 INFO  Febs-Async-Thread3 p6spy 2022-03-22 20:34:23 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelPropertyController.updateSmsChannelProperties()', '2022-03-22T20:34:23.181+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 42, ' smsChannelProperties: "[SmsChannelProperty(id=770, smsChannelId=11, propertyType=null, name=host, value=103.156.178.53, description=, remark=admin添加, createTime=Tue Mar 22 20:34:23 CST 2022), SmsChannelProperty(id=771, smsChannelId=11, propertyType=null, name=port, value=63456, description=, remark=admin添加, createTime=Tue Mar 22 20:34:23 CST 2022), SmsChannelProperty(id=772, smsChannelId=11, propertyType=null, name=systemId, value=BNF210915230719BLNH, description=, remark=admin添加, createTime=Tue Mar 22 20:34:23 CST 2022), SmsChannelProperty(id=773, smsChannelId=11, propertyType=null, name=password, value=sMnAzNrM, description=, remark=admin添加, createTime=Tue Mar 22 20:34:23 CST 2022), SmsChannelProperty(id=774, smsChannelId=11, propertyType=null, name=systemType, value=SMS, description=, remark=admin添加, createTime=Tue Mar 22 20:34:23 CST 2022), SmsChannelProperty(id=775, smsChannelId=11, propertyType=null, name=version, value=52, description=, remark=admin添加, createTime=Tue Mar 22 20:34:23 CST 2022), SmsChannelProperty(id=776, smsChannelId=11, propertyType=null, name=addrTon, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:34:23 CST 2022), SmsChannelProperty(id=777, smsChannelId=11, propertyType=null, name=addrNpi, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:34:23 CST 2022), SmsChannelProperty(id=778, smsChannelId=11, propertyType=null, name=maxChannels, value=3, description=, remark=admin添加, createTime=Tue Mar 22 20:34:23 CST 2022), SmsChannelProperty(id=779, smsChannelId=11, propertyType=null, name=speed, value=100, description=, remark=admin添加, createTime=Tue Mar 22 20:34:23 CST 2022), SmsChannelProperty(id=780, smsChannelId=11, propertyType=null, name=writeLimit, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:34:23 CST 2022), SmsChannelProperty(id=781, smsChannelId=11, propertyType=null, name=readLimit, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:34:23 CST 2022), SmsChannelProperty(id=782, smsChannelId=11, propertyType=null, name=openNumberPool, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:34:23 CST 2022), SmsChannelProperty(id=783, smsChannelId=11, propertyType=null, name=numberPoolGroup, value=, description=, remark=admin添加, createTime=Tue Mar 22 20:34:23 CST 2022)]"', '修改SmsChannelProperty', 'admin');
2022-03-22 20:37:50 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 20:37:50 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_channel_id = 11);
2022-03-22 20:37:50 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 20:37:50 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value, Operator FROM t_sms_channel_cost WHERE (sms_channel_id = 11) LIMIT 0,10;
2022-03-22 20:37:54 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 20:37:54 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value, Operator FROM t_sms_channel_cost WHERE Id = 20;
2022-03-22 20:38:00 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 20:38:00 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_type = 1 AND sms_channel_id = 11 AND name = '+853' AND Id <> 20);
2022-03-22 20:38:00 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 20:38:00 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value, Operator FROM t_sms_channel_cost WHERE Id = 20;
2022-03-22 20:38:00 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 20:38:00 | 耗时 9 ms | SQL 语句：
UPDATE t_sms_channel_cost SET name = '+853', sms_channel_id = 11, description = '', sms_type = 1, value = '55' WHERE Id = 20;
2022-03-22 20:38:00 INFO  Febs-Async-Thread4 p6spy 2022-03-22 20:38:00 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelCostController.updateSmsChannelCost()', '2022-03-22T20:38:00.459+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 48, ' smsChannelCost: SmsChannelCost(id=20, smsChannelId=11, smsType=1, name=+853, operator=null, value=55, description=, remark=null, createTime=null)', '修改SmsChannelCost', 'admin');
2022-03-22 20:38:00 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 20:38:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_channel_id = 11);
2022-03-22 20:38:00 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 20:38:00 | 耗时 1 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value, Operator FROM t_sms_channel_cost WHERE (sms_channel_id = 11) LIMIT 0,10;
2022-03-22 20:38:05 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 20:38:05 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2022-03-22 20:38:05 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 20:38:05 | 耗时 2 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 0,10;
2022-03-22 20:38:05 INFO  Febs-Async-Thread5 p6spy 2022-03-22 20:38:05 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2022-03-22T20:38:05.272+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 38, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2022-03-22 20:38:08 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 20:38:08 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code;
2022-03-22 20:38:08 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 20:38:08 | 耗时 4 ms | SQL 语句：
SELECT * FROM t_organization org LEFT JOIN (SELECT temp.orgCode, GROUP_CONCAT(temp.`name` SEPARATOR ',') AS groupNames, GROUP_CONCAT(temp.groupId SEPARATOR ',') AS groupIds FROM (SELECT gro.group_id groupId, gro.org_code orgCode, c.`NAME` AS `name` FROM t_organization_group gro LEFT JOIN `code` c ON c.SORT_CODE = 'OrgGroup' AND c.`CODE` = gro.group_id) temp GROUP BY temp.orgCode) orgGroup ON orgGroup.orgCode = org.Organization_Code ORDER BY org.id DESC LIMIT 10,10;
2022-03-22 20:38:08 INFO  Febs-Async-Thread1 p6spy 2022-03-22 20:38:08 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2022-03-22T20:38:08.728+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 23, ' request: "QueryRequest(pageSize=10, pageNum=2, field=null, order=null)" organization: "OrganizationQuery(groupId=null)"', '商户列表', 'admin');
2022-03-22 20:38:11 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 20:38:11 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2022-03-22 20:38:11 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 20:38:11 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2022-03-22 20:38:20 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 20:38:20 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent;
2022-03-22 20:38:20 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 20:38:20 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent ORDER BY Id DESC LIMIT 0,10;
2022-03-22 20:38:20 INFO  Febs-Async-Thread2 p6spy 2022-03-22 20:38:20 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2022-03-22T20:38:20.875+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 134, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=null, agentName=null, agentAccount=null, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=null, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'admin');
2022-03-22 20:38:24 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 20:38:24 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2022-03-22 20:38:42 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 20:38:42 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 36;
2022-03-22 20:38:42 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 20:38:42 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2022-03-22 20:38:42 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 20:38:42 | 耗时 1 ms | SQL 语句：
DELETE FROM t_agent_cost WHERE (Agent_Id = 36);
2022-03-22 20:38:42 INFO  Febs-Async-Thread3 p6spy 2022-03-22 20:38:42 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateAgentCosts()', '2022-03-22T20:38:42.603+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 39, ' agentCosts: "[AgentCost(id=263, agentId=36, smsType=1, name=+86, value=50, channelId=, operator=, description=, remark=admin添加, createDate=Tue Mar 22 20:38:42 CST 2022), AgentCost(id=264, agentId=36, smsType=1, name=+86, value=60, channelId=, operator=CMCC, description=, remark=admin添加, createDate=Tue Mar 22 20:38:42 CST 2022), AgentCost(id=265, agentId=36, smsType=1, name=+852, value=70, channelId=, operator=null, description=, remark=admin添加, createDate=Tue Mar 22 20:38:42 CST 2022), AgentCost(id=266, agentId=36, smsType=1, name=+853, value=60, channelId=, operator=null, description=, remark=admin添加, createDate=Tue Mar 22 20:38:42 CST 2022), AgentCost(id=267, agentId=36, smsType=1, name=+1US, value=50, channelId=, operator=null, description=, remark=admin添加, createDate=Tue Mar 22 20:38:42 CST 2022)]"', '代理资费修改', 'admin');
2022-03-22 20:38:48 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 20:38:48 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '97';
2022-03-22 20:38:48 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 20:38:48 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200826164014MWDR');
2022-03-22 20:39:05 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 20:39:05 | 耗时 2 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200826164014MWDR');
2022-03-22 20:39:05 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 20:39:05 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200826164014MWDR');
2022-03-22 20:39:05 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 20:39:05 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2022-03-22 20:39:05 INFO  Febs-Async-Thread4 p6spy 2022-03-22 20:39:05 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2022-03-22T20:39:05.063+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 38, ' organizationCosts: "[OrganizationCost(id=237, organizationCode=20200826164014MWDR, smsType=1, costName=+86, costValue=50, state=1, channelId=, operator=, description=, remark=admin添加, createDate=Tue Mar 22 20:39:05 CST 2022), OrganizationCost(id=238, organizationCode=20200826164014MWDR, smsType=1, costName=+86, costValue=60, state=1, channelId=, operator=CMCC, description=, remark=admin添加, createDate=Tue Mar 22 20:39:05 CST 2022), OrganizationCost(id=239, organizationCode=20200826164014MWDR, smsType=1, costName=+852, costValue=55, state=1, channelId=, operator=null, description=, remark=admin添加, createDate=Tue Mar 22 20:39:05 CST 2022), OrganizationCost(id=240, organizationCode=20200826164014MWDR, smsType=1, costName=+853, costValue=65, state=1, channelId=, operator=null, description=, remark=admin添加, createDate=Tue Mar 22 20:39:05 CST 2022)]"', '商户用户资费更新', 'admin');
2022-03-22 20:39:08 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 20:39:08 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2022-03-22 20:39:08 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 20:39:08 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2022-03-22 20:39:22 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 20:39:22 | 耗时 8 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2022-03-22 20:39:22 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 20:39:22 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2022-03-22 20:39:22 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 20:39:22 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2022-03-22 20:39:22 INFO  Febs-Async-Thread5 p6spy 2022-03-22 20:39:22 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2022-03-22T20:39:22.602+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 51, ' organizationCosts: "[OrganizationCost(id=241, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=50, state=1, channelId=, operator=, description=, remark=admin添加, createDate=Tue Mar 22 20:39:22 CST 2022), OrganizationCost(id=242, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=60, state=1, channelId=, operator=CMCC, description=, remark=admin添加, createDate=Tue Mar 22 20:39:22 CST 2022), OrganizationCost(id=243, organizationCode=20200331160443FKDW, smsType=1, costName=+852, costValue=75, state=1, channelId=, operator=null, description=, remark=admin添加, createDate=Tue Mar 22 20:39:22 CST 2022), OrganizationCost(id=244, organizationCode=20200331160443FKDW, smsType=1, costName=+1US, costValue=55, state=1, channelId=, operator=null, description=, remark=admin添加, createDate=Tue Mar 22 20:39:22 CST 2022), OrganizationCost(id=245, organizationCode=20200331160443FKDW, smsType=1, costName=+853, costValue=6500, state=1, channelId=, operator=null, description=, remark=admin添加, createDate=Tue Mar 22 20:39:22 CST 2022)]"', '商户用户资费更新', 'admin');
2022-03-22 20:39:24 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 20:39:24 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2022-03-22 20:39:24 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 20:39:24 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2022-03-22 20:40:04 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 20:40:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 20:40:04 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 20:40:04 | 耗时 3 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:40:08 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 20:40:08 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 20:40:08 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 20:40:08 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 20:40:08 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 20:40:08 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:40:11 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 20:40:11 | 耗时 0 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel WHERE (is_del = 0);
2022-03-22 20:40:11 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 20:40:11 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 20:40:11 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 20:40:11 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:40:59 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 20:40:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 20:40:59 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 20:40:59 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:41:28 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 20:41:28 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2022-03-22 20:41:35 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 20:41:35 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2022-03-22 20:41:45 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 20:41:45 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE Id = '62';
2022-03-22 20:41:45 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 20:41:45 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2022-03-22 20:41:55 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 20:41:55 | 耗时 3 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = '20200331160443FKDW');
2022-03-22 20:41:55 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 20:41:55 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = '20200331160443FKDW');
2022-03-22 20:41:55 INFO  http-nio-8088-exec-5 p6spy 2022-03-22 20:41:55 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2022-03-22 20:41:55 INFO  Febs-Async-Thread1 p6spy 2022-03-22 20:41:55 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2022-03-22T20:41:55.026+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 28, ' organizationCosts: "[OrganizationCost(id=246, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=50, state=1, channelId=, operator=, description=, remark=admin添加, createDate=Tue Mar 22 20:41:55 CST 2022), OrganizationCost(id=247, organizationCode=20200331160443FKDW, smsType=1, costName=+86, costValue=60, state=1, channelId=, operator=CMCC, description=, remark=admin添加, createDate=Tue Mar 22 20:41:55 CST 2022), OrganizationCost(id=248, organizationCode=20200331160443FKDW, smsType=1, costName=+852, costValue=75, state=1, channelId=, operator=null, description=, remark=admin添加, createDate=Tue Mar 22 20:41:55 CST 2022), OrganizationCost(id=249, organizationCode=20200331160443FKDW, smsType=1, costName=+1US, costValue=55, state=1, channelId=, operator=null, description=, remark=admin添加, createDate=Tue Mar 22 20:41:55 CST 2022), OrganizationCost(id=250, organizationCode=20200331160443FKDW, smsType=1, costName=+853, costValue=65, state=1, channelId=, operator=null, description=, remark=admin添加, createDate=Tue Mar 22 20:41:55 CST 2022)]"', '商户用户资费更新', 'admin');
2022-03-22 20:42:18 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 20:42:18 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2022-03-22 20:42:25 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 20:42:25 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2022-03-22 20:42:52 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 20:42:52 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 20:42:52 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 20:42:52 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:43:15 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 20:43:15 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2022-03-22 20:43:24 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 20:43:24 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 35;
2022-03-22 20:43:24 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 20:43:24 | 耗时 8 ms | SQL 语句：
DELETE FROM t_agent_cost WHERE (Agent_Id = 35);
2022-03-22 20:43:24 INFO  Febs-Async-Thread2 p6spy 2022-03-22 20:43:24 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateAgentCosts()', '2022-03-22T20:43:24.343+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 29, ' agentCosts: "[AgentCost(id=268, agentId=35, smsType=1, name=+86, value=50, channelId=, operator=, description=, remark=admin添加, createDate=Tue Mar 22 20:43:24 CST 2022), AgentCost(id=269, agentId=35, smsType=1, name=+86, value=60, channelId=, operator=CMCC, description=, remark=admin添加, createDate=Tue Mar 22 20:43:24 CST 2022), AgentCost(id=270, agentId=35, smsType=1, name=+852, value=50, channelId=, operator=null, description=, remark=admin添加, createDate=Tue Mar 22 20:43:24 CST 2022), AgentCost(id=271, agentId=35, smsType=1, name=+853, value=55, channelId=, operator=null, description=, remark=admin添加, createDate=Tue Mar 22 20:43:24 CST 2022), AgentCost(id=272, agentId=35, smsType=1, name=+1US, value=50, channelId=, operator=null, description=, remark=admin添加, createDate=Tue Mar 22 20:43:24 CST 2022)]"', '代理资费修改', 'admin');
2022-03-22 20:43:39 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 20:43:39 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 20:43:39 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 20:43:39 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:44:10 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 20:44:10 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 20:44:10 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 20:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:44:34 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2022-03-22 20:44:34 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2022-03-22 20:44:59 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 20:44:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 20:44:59 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 20:44:59 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:46:20 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 20:46:20 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 20:46:20 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 20:46:20 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:46:25 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 20:46:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 20:46:25 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 20:46:25 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:46:48 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 20:46:48 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_type = 1 AND sms_channel_id = 11 AND name = '+1US');
2022-03-22 20:46:48 INFO  http-nio-8088-exec-7 p6spy 2022-03-22 20:46:48 | 耗时 1 ms | SQL 语句：
INSERT INTO t_sms_channel_cost (create_time, name, sms_channel_id, description, remark, sms_type, value) VALUES ('2022-03-22T20:46:48.854+0800', '+1US', 11, '', 'admin添加', 1, '45');
2022-03-22 20:46:48 INFO  Febs-Async-Thread3 p6spy 2022-03-22 20:46:48 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (METHOD, CREATE_TIME, IP, LOCATION, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.channel.SmsChannelCostController.addSmsChannelCost()', '2022-03-22T20:46:48.895+0800', '192.168.189.1', '内网IP|0|0|内网IP|内网IP', 78, ' smsChannelCost: SmsChannelCost(id=27, smsChannelId=11, smsType=1, name=+1US, operator=null, value=45, description=, remark=admin添加, createTime=Tue Mar 22 20:46:48 CST 2022)', '新增SmsChannelCost', 'admin');
2022-03-22 20:46:48 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 20:46:48 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_sms_channel_cost WHERE (sms_channel_id = 11);
2022-03-22 20:46:48 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 20:46:48 | 耗时 0 ms | SQL 语句：
SELECT Id, create_time, name, sms_channel_id, description, remark, sms_type, value, Operator FROM t_sms_channel_cost WHERE (sms_channel_id = 11) LIMIT 0,10;
2022-03-22 20:46:55 INFO  http-nio-8088-exec-3 p6spy 2022-03-22 20:46:55 | 耗时 1 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-22 20:47:02 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 20:47:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 20:47:02 INFO  http-nio-8088-exec-2 p6spy 2022-03-22 20:47:02 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:47:04 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 20:47:04 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 20:47:04 INFO  http-nio-8088-exec-4 p6spy 2022-03-22 20:47:04 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:47:09 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 20:47:09 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 20:47:09 INFO  http-nio-8088-exec-1 p6spy 2022-03-22 20:47:09 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:50:36 INFO  http-nio-8088-exec-6 p6spy 2022-03-22 20:50:36 | 耗时 0 ms | SQL 语句：
SELECT id, message_type, message_contact, org_code, picture_url, create_User, remark, merch_read_status, admin_read_status, create_Date FROM t_message WHERE (admin_read_status = '2');
2022-03-22 20:50:59 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 20:50:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 20:50:59 INFO  http-nio-8088-exec-8 p6spy 2022-03-22 20:50:59 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:51:01 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 20:51:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800');
2022-03-22 20:51:01 INFO  http-nio-8088-exec-9 p6spy 2022-03-22 20:51:01 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:57:20 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 20:57:20 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2022-03-22 20:57:20 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 20:57:20 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2022-03-22 20:57:20 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 20:57:20 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1);
2022-03-22 20:57:20 INFO  http-nio-8088-exec-10 p6spy 2022-03-22 20:57:20 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (create_time >= '2022-03-22T00:00:00.000+0800' AND create_time <= '2022-03-22T23:59:59.000+0800' AND audit_state <> 1) ORDER BY create_time DESC LIMIT 0,10;
2022-03-22 20:57:27 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2022-03-22 20:57:27 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647949444406 paused.
2022-03-22 20:57:27 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2022-03-22 20:57:27 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2022-03-22 20:57:27 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647949444406 shutting down.
2022-03-22 20:57:27 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647949444406 paused.
2022-03-22 20:57:27 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_LAPTOP-L07PL5KH1647949444406 shutdown complete.
2022-03-22 20:57:27 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2022-03-22 20:57:27 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2022-03-22 20:57:27 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2022-03-22 20:57:27 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2022-03-22 20:57:27 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2022-03-22 20:57:27 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
