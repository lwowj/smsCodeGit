<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hero.sms.mapper.channel.SmsChannelMapper">
	<resultMap type="com.hero.sms.entity.channel.SmsChannelExt" id="findListContainPropertyResult">
		<id column="id" property="id" javaType="int"/>
		<result column="name" property="name" javaType="String"/>
		<result column="state" property="state" javaType="int"/>
		<result column="support_area" property="supportArea" javaType="String"/>
		<result column="protocol_type" property="protocolType" javaType="String"/>
		<result column="impl_full_class" property="implFullClass" javaType="String"/>
		<result column="area_regex" property="areaRegex" javaType="String"/>
		<result column="description" property="description" javaType="String"/>
		<result column="weight" property="weight" javaType="int"/>
		<result column="remark" property="remark" javaType="String"/>
		<collection property="propertys" column="id" select="findPropertyByChannelId"></collection>
		<collection property="costs" column="id" select="findCostByChannelId"></collection>
	</resultMap>
	
	<resultMap type="com.hero.sms.entity.channel.SmsChannelProperty" id="findPropertyByChannelIdResult">
		<id column="id" property="id" javaType="int"/>
		<result column="sms_channel_id" property="smsChannelId" javaType="int"/>
		<result column="property_type" property="propertyType" javaType="int"/>
		<result column="name" property="name" javaType="String"/>
		<result column="value" property="value" javaType="String"/>
		<result column="description" property="description" javaType="String"/>
		<result column="remark" property="remark" javaType="String"/>
	</resultMap>

	<resultMap id="smsChannelExtGroup" type="com.hero.sms.entity.channel.SmsChannelExtGroup">
		<id column="id" property="id" javaType="int"/>
		<result column="name" property="name" javaType="String"/>
		<result column="state" property="state" javaType="int"/>
		<result column="support_area" property="supportArea" javaType="String"/>
		<result column="protocol_type" property="protocolType" javaType="String"/>
		<result column="impl_full_class" property="implFullClass" javaType="String"/>
		<result column="area_regex" property="areaRegex" javaType="String"/>
		<result column="description" property="description" javaType="String"/>
		<result column="weight" property="weight" javaType="int"/>
		<result column="remark" property="remark" javaType="String"/>
		<result column="groupIds" property="groupIds" javaType="String"/>
		<result column="groupNames" property="groupNames" javaType="String"/>
		<result column="areaCodes" property="areaCodes" javaType="String"/>
		<result column="areaNames" property="areaNames" javaType="String"/>
		<result column="property_name" property="propertyName" javaType="String"/>
		<result column="property_value" property="propertyValue" javaType="String"/>
	</resultMap>

	<select id="findListContainProperty" resultMap="findListContainPropertyResult">
		select *
		from t_sms_channel
		<where>
			<if test="state != null">
			and state = #{state}
			</if>
			<if test="stateWith != null">
			and state<![CDATA[&]]>${stateWith}=state
			</if>
			<if test="supportArea != null">
			and support_area = #{supportArea}
			</if>
			<if test="protocolType != null">
			and protocol_type = #{protocolType}
			</if>
			and is_del = 0
		</where>
	</select>

	<select id="findContainPropertyById" resultMap="findListContainPropertyResult">
		select * from t_sms_channel where id = #{id}
	</select>

	<select id="findContainPropertyByCode" resultMap="findListContainPropertyResult">
		select * from t_sms_channel where code = #{code}
	</select>
	
	<select id="findPropertyByChannelId" resultMap="findPropertyByChannelIdResult">
		select * from t_sms_channel_property where sms_channel_id = #{id}
	</select>

	<select id="findCostByChannelId" resultType="com.hero.sms.entity.channel.SmsChannelCost">
		select * from t_sms_channel_cost where sms_channel_id = #{id}
	</select>
	
	<select id="findListContainGroups" resultMap="smsChannelExtGroup">
		SELECT *
            FROM t_sms_channel cnl
            LEFT JOIN
            (
                SELECT
                    temp.channelId,
                    GROUP_CONCAT(temp.`name` SEPARATOR ',') as groupNames ,
                    GROUP_CONCAT(temp.groupId SEPARATOR ',') as groupIds
                FROM
                    (   SELECT gro.group_id groupId,gro.sms_channel_id channelId,c.`NAME` as `name`
                            FROM t_sms_channel_group gro
                            LEFT JOIN `code` c on c.SORT_CODE = 'OrgGroup' and c.`CODE` = gro.group_id
                    ) temp GROUP BY temp.channelId
            ) channelGroup on channelGroup.channelId = cnl.id
           	LEFT JOIN (
				SELECT
					scc.sms_channel_id,
					GROUP_CONCAT( ac.in_area SEPARATOR ',' ) AS areaCodes,
					GROUP_CONCAT( ac.area_name SEPARATOR ',' ) AS areaNames 
				FROM
					( SELECT sms_channel_id, `name` AS areaCode FROM t_sms_channel_cost GROUP BY sms_channel_id, `name` ) scc,
					t_area_code ac 
				WHERE
					scc.areaCode = ac.in_area 
				GROUP BY
					scc.sms_channel_id 
					) channelCost ON channelCost.sms_channel_id = cnl.id 
			LEFT JOIN ( 
				SELECT sms_channel_id AS property_channel_id, 
				`name` as property_name,
				`value` as property_value
				FROM t_sms_channel_property
				WHERE `name` = 'reqUrl' OR `name` = 'host' 
				) 
				channelProperty ON channelProperty.property_channel_id = cnl.id
        <where>
        	<if test="scq.name != null and scq.name != ''">
				and cnl.name like CONCAT('%',#{scq.name},'%')
			</if>
			<if test="scq.protocolType != null and scq.protocolType != ''">
				and cnl.protocol_type = #{scq.protocolType}
			</if>
			<if test="scq.state != null">
				and cnl.state = #{scq.state}
			</if>
			<if test="scq.submitWay != null">
				and cnl.submit_way = #{scq.submitWay}
			</if>
<!--			<if test="scq.stateWith != null">
				and cnl.state<![CDATA[&]]>${scq.stateWith}=cnl.state
			</if>-->
			<if test="scq.groupId != null and scq.groupId != ''">
				AND FIND_IN_SET(#{scq.groupId},channelGroup.groupIds)
			</if>
			<if test="scq.supportArea != null and scq.supportArea != ''">
				AND FIND_IN_SET(#{scq.supportArea},channelCost.areaCodes)
			</if>
			<if test="scq.channelIp != null and scq.channelIp != ''">
				and channelProperty.property_value like CONCAT('%',#{scq.channelIp},'%')
			</if>
		</where>
		ORDER BY cnl.id DESC
	</select>
	
	<select id="findSmsChannelsForArea" resultType="com.hero.sms.entity.channel.SmsChannel">
		SELECT *
            FROM t_sms_channel
        <where>
			<if test="state != null">
			and state = #{state}
			</if>
			<if test="stateWith != null">
			and state<![CDATA[&]]>${stateWith}=state
			</if>
			<if test="supportArea != null and supportArea != ''">
			and id in (SELECT scc.sms_channel_id from t_sms_channel_cost scc where scc.name = #{supportArea})
			</if>
			<if test="protocolType != null">
			and protocol_type = #{protocolType}
			</if>
			and is_del = 0
		</where>
	</select>
</mapper>
