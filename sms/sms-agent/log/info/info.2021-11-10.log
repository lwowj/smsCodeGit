2021-11-10 19:35:39 INFO  main com.hero.sms.AgentApplication Starting AgentApplication on LAPTOP-L07PL5KH with PID 36364 (C:\work\workspaceSmsBf\sms\sms-agent\target\classes started by payBoo in C:\work\workspaceSmsBf\sms\sms-agent)
2021-11-10 19:35:39 INFO  main com.hero.sms.AgentApplication The following profiles are active: test
2021-11-10 19:35:42 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2021-11-10 19:35:42 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2021-11-10 19:35:43 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 628ms. Found 0 repository interfaces.
2021-11-10 19:35:43 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$eb1c8b48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.hero.sms.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$a5de5393] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.hero.sms.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$64a83680] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.hero.sms.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$7731ab04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$bf568711] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:44 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2021-11-10 19:35:44 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2021-11-10 19:35:44 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2021-11-10 19:35:44 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2021-11-10 19:35:44 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2021-11-10 19:35:44 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2021-11-10 19:35:44 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2021-11-10 19:35:44 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2021-11-10 19:35:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentMenuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentMenuLimitMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentMenuLimitMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentMenuLimitServiceImpl' of type [com.hero.sms.service.impl.agent.AgentMenuLimitServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentMenuServiceImpl' of type [com.hero.sms.service.impl.agent.AgentMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'codeMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'codeMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'codeServiceImpl' of type [com.hero.sms.service.impl.common.CodeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserServiceImpl' of type [com.hero.sms.service.impl.organization.OrganizationUserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserLimitMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserLimitMapper' of type [com.sun.proxy.$Proxy127] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserLimitServiceImpl' of type [com.hero.sms.service.impl.organization.OrganizationUserLimitServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserMenuMapper' of type [com.sun.proxy.$Proxy129] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationUserMenuServiceImpl' of type [com.hero.sms.service.impl.organization.OrganizationUserMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentRechargeOrderMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentRechargeOrderMapper' of type [com.sun.proxy.$Proxy131] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentRechargeOrderServiceImpl' of type [com.hero.sms.service.impl.rechargeOrder.AgentRechargeOrderServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sendRecordMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sendRecordMapper' of type [com.sun.proxy.$Proxy134] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'smsChannelMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'smsChannelMapper' of type [com.sun.proxy.$Proxy135] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sensitiveWordMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sensitiveWordMapper' of type [com.sun.proxy.$Proxy136] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sensitiveWordServiceImpl' of type [com.hero.sms.service.impl.message.SensitiveWordServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'smsGateService' of type [com.hero.sms.service.mq.SmsGateService] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'businessManageImpl' of type [com.hero.sms.service.impl.common.BusinessManageImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'commenReidsConfigure' of type [com.hero.sms.common.configure.CommenReidsConfigure$$EnhancerBySpringCGLIB$$38cbaf21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'commenRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'commenCacheRedisService' of type [com.hero.sms.service.impl.common.CommenCacheRedisService] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'smsChannelServiceImpl' of type [com.hero.sms.service.impl.channel.SmsChannelServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'exportRecordMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'exportRecordMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'exportRecordServiceImpl' of type [com.hero.sms.service.impl.common.ExportRecordServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sendRecordCheckinfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sendRecordCheckinfoMapper' of type [com.sun.proxy.$Proxy147] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sendRecordCheckinfoServiceImpl' of type [com.hero.sms.service.impl.message.SendRecordCheckinfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sendRecordServiceImpl' of type [com.hero.sms.service.impl.message.SendRecordServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'returnRecordMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'returnRecordMapper' of type [com.sun.proxy.$Proxy151] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'returnRecordServiceImpl' of type [com.hero.sms.service.impl.message.ReturnRecordServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'MQService' of type [com.hero.sms.service.mq.MQService] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentSystemConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentSystemConfigMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentSystemConfigServiceImpl' of type [com.hero.sms.service.impl.agent.AgentSystemConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationPropertyMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationPropertyMapper' of type [com.sun.proxy.$Proxy156] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationPropertyServiceImpl' of type [com.hero.sms.service.impl.organization.OrganizationPropertyServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationGroupMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationGroupMapper' of type [com.sun.proxy.$Proxy158] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationGroupServiceImpl' of type [com.hero.sms.service.impl.organization.OrganizationGroupServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'organizationServiceImpl' of type [com.hero.sms.service.impl.organization.OrganizationServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'payChannelMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'payChannelMapper' of type [com.sun.proxy.$Proxy160] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'payChannelServiceImpl' of type [com.hero.sms.service.impl.channel.PayChannelServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'blackIpConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'blackIpConfigMapper' of type [com.sun.proxy.$Proxy162] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'blackIpConfigServiceImpl' of type [com.hero.sms.service.impl.common.BlackIpConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mobileBlackMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mobileBlackMapper' of type [com.sun.proxy.$Proxy164] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mobileBlackServiceImpl' of type [com.hero.sms.service.impl.message.MobileBlackServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mobileAreaMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mobileAreaMapper' of type [com.sun.proxy.$Proxy166] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mobileAreaServiceImpl' of type [com.hero.sms.service.impl.message.MobileAreaServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'databaseCache' of type [com.hero.sms.common.DatabaseCache] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'reportMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'reportMapper' of type [com.sun.proxy.$Proxy168] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'reportServiceImpl' of type [com.hero.sms.service.impl.message.ReportServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'agentServiceImpl' of type [com.hero.sms.service.impl.agent.AgentServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.hero.sms.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-10 19:35:51 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8008 (http)
2021-11-10 19:35:51 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8008"]
2021-11-10 19:35:51 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2021-11-10 19:35:51 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.27]
2021-11-10 19:35:51 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2021-11-10 19:35:51 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 12133 ms
2021-11-10 19:35:52 INFO  main com.hero.sms.common.xss.XssFilter ------------ xss filter init ------------
2021-11-10 19:35:54 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2021-11-10 19:35:55 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-11-10 19:35:55 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2021-11-10 19:35:55 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2021-11-10 19:35:55 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2021-11-10 19:35:55 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2021-11-10 19:35:55 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-11-10 19:35:55 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2021-11-10 19:35:55 INFO  main org.quartz.simpl.RAMJobStore RAMJobStore initialized.
2021-11-10 19:35:55 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-11-10 19:35:55 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-11-10 19:35:55 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2021-11-10 19:35:55 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@7e484bd
2021-11-10 19:35:56 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2021-11-10 19:35:56 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2021-11-10 19:35:56 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Skipping initializing disabled plugin bean swagger v2.0
2021-11-10 19:35:56 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now
2021-11-10 19:35:56 INFO  main org.quartz.core.QuartzScheduler Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-11-10 19:35:56 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8008"]
2021-11-10 19:35:56 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8008 (http) with context path ''
2021-11-10 19:35:56 INFO  main com.hero.sms.AgentApplication Started AgentApplication in 17.418 seconds (JVM running for 20.719)
2021-11-10 19:35:56 INFO  main com.hero.sms.common.DatabaseCache 开始缓存字典
2021-11-10 19:35:56 INFO  main p6spy 2021-11-10 19:35:56 | 耗时 9 ms | SQL 语句：
SELECT ID, CODE, CREATE_TIME, ORDER_LEVEL, PARENT_CODE, IS_DELETE, NAME, DESCRIPTION, REMARK, SORT_CODE FROM code WHERE (IS_DELETE = '0');
2021-11-10 19:35:56 INFO  main com.hero.sms.common.DatabaseCache 缓存代理信息
2021-11-10 19:35:56 INFO  main p6spy 2021-11-10 19:35:56 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent;
2021-11-10 19:35:56 INFO  main com.hero.sms.common.DatabaseCache 缓存商户信息
2021-11-10 19:35:56 INFO  main p6spy 2021-11-10 19:35:56 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization;
2021-11-10 19:35:56 INFO  main com.hero.sms.common.DatabaseCache 缓存短信通道信息
2021-11-10 19:35:56 INFO  main p6spy 2021-11-10 19:35:56 | 耗时 1 ms | SQL 语句：
SELECT id, support_area, code, weight, description, create_user_name, remark, protocol_type, impl_full_class, day_limit, create_time, area_regex, name, state, is_del, area_operator_regex, operator_regex FROM t_sms_channel;
2021-11-10 19:35:56 INFO  main com.hero.sms.common.DatabaseCache 缓存支付通道信息
2021-11-10 19:35:56 INFO  main p6spy 2021-11-10 19:35:56 | 耗时 5 ms | SQL 语句：
SELECT id, key1, key2, min_amount, cost, key5, key3, key4, weight, remark, encrypt_key, impl_full_class, netway_code, create_time, merch_no, request_url, state_code, sign_key, callBack_url, channel_name, pay_code, max_amount FROM t_pay_channel;
2021-11-10 19:35:56 INFO  main com.hero.sms.common.DatabaseCache 缓存IP黑名单信息
2021-11-10 19:35:56 INFO  main p6spy 2021-11-10 19:35:56 | 耗时 11 ms | SQL 语句：
SELECT Id, Black_Ip, IsAvailability, LImit_Project, Description, Create_User, Remark, Create_Date FROM t_black_ip_config WHERE (IsAvailability = '1');
2021-11-10 19:35:56 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号段区域信息
2021-11-10 19:35:57 INFO  main p6spy 2021-11-10 19:35:57 | 耗时 770 ms | SQL 语句：
SELECT Id, MobileNumber, MobileArea, Province_Code, PostCode, AreaCode, Create_Date, MobileType FROM mobile_area;
2021-11-10 19:36:02 INFO  main com.hero.sms.common.DatabaseCache 缓存手机号码黑名单信息
2021-11-10 19:36:02 INFO  main p6spy 2021-11-10 19:36:02 | 耗时 14 ms | SQL 语句：
SELECT area, number FROM t_mobile_black;
2021-11-10 19:36:02 INFO  main com.hero.sms.common.DatabaseCache 缓存网关类型信息
2021-11-10 19:36:02 INFO  main com.hero.sms.common.DatabaseCache 字典缓存完成
2021-11-10 19:36:03 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2021-11-10 19:36:03 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2021-11-10 19:36:10 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2021-11-10 19:36:10 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-11-10 19:36:10 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-11-10 19:36:10 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner                                                       
2021-11-10 19:36:10 INFO  main com.hero.sms.common.runner.FebsStartedUpRunner 短信平台启动完毕，地址：http://169.254.130.216:8008/login
2021-11-10 19:36:55 INFO  http-nio-8008-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-10 19:36:55 INFO  http-nio-8008-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2021-11-10 19:36:55 INFO  http-nio-8008-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 47 ms
2021-11-10 19:36:55 INFO  http-nio-8008-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2021-11-10 19:36:56 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:36:56 | 耗时 11 ms | SQL 语句：
SELECT id, agent_id, approve_state_code, system_name, create_time, remark, system_url, system_logo_url FROM t_agent_system_config WHERE (system_url = '169.254.130.216' AND approve_state_code = '2');
2021-11-10 19:37:11 INFO  http-nio-8008-exec-10 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_loginBehavior169.254.130.216]，描述为 [登录行为验证] 的接口
2021-11-10 19:37:11 INFO  http-nio-8008-exec-1 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_login169.254.130.216]，描述为 [登录接口] 的接口
2021-11-10 19:37:11 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:37:11 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:37:11 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:37:11 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, approve_state_code, system_name, create_time, remark, system_url, system_logo_url FROM t_agent_system_config WHERE (agent_id = 35 AND approve_state_code = '2');
2021-11-10 19:37:11 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:37:11 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:37:11 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:37:11 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:37:11 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:37:11 | 耗时 3 ms | SQL 语句：
UPDATE t_agent SET Google_Key = '', Cash_Amount = 1200, Description = '', Remark = '169.254.130.216', Agent_Password = '036de319cfeff912ab2d6e2d6b4a7ba4', Last_Login_IP = '内网IP|0|0|内网IP|内网IP', Level_Code = '1', Available_Amount = 4842043, Login_IP = '169.254.130.216', EMail = '', Need_Bind_Google_Key = 0, Create_Date = '2020-03-31T15:41:25.000+0800', QQ = '', Agent_Account = 'vagent', Amount = 1100, Quota_Amount = 0, Agent_Name = '正式商户棋牌代理', Login_Faild_Count = 0, Data_MD5 = '586C02551C322EFFBD19F0DBF1D797E5', Last_Login_Time = '2021-09-15 12:13:38', Phone_Number = '', Day_Limit = 0, Send_Sms_Total = 484127, Create_User = 'admin', State_Code = '1', Pay_Password = '4297F44B13955235245B2497399D7A93' WHERE Id = 35;
2021-11-10 19:37:11 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:37:11 | 耗时 1 ms | SQL 语句：
UPDATE t_agent SET Last_Login_IP = '内网IP|0|0|内网IP|内网IP', Login_IP = '169.254.130.216', Last_Login_Time = '2021-11-10 19:37:11' WHERE (Agent_Account = 'vagent');
2021-11-10 19:37:11 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:37:11 | 耗时 10 ms | SQL 语句：
INSERT INTO t_agent_login_log (Agent_Account, TimeConsuming, Login_State, Local_Ip, Message) VALUES ('vagent', 227, 1, '169.254.130.216', '登录成功');
2021-11-10 19:37:12 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:37:12 | 耗时 14 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.LoginController.login()', '2021-11-10T19:37:12.058+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 394, ' username: "vagent" password: "保密" verifyCode: "G3SFC" goologoVerifyCode: "" sessionToken: "ad454418b069a2a562ff2319dc87e47e" behaviorCheckToken: "545ffedb7c1ae73173f4ae5370e9cebc" verifyInfoToken: "7A773EFDEDE5D7BA040AEE8063AD3B58" rememberMe: "false" request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@59317f79', '登录', 'vagent');
2021-11-10 19:37:12 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 19:37:12 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:37:12 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 19:37:12 | 耗时 37 ms | SQL 语句：
SELECT m.perms FROM t_agent_menu_limit l LEFT JOIN t_agent u ON (u.Id = l.AGENT_ID) LEFT JOIN t_agent_menu m ON (l.MENU_ID = m.MENU_ID) WHERE u.Agent_Account = 'vagent' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-10 19:37:12 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 19:37:12 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:37:13 INFO  http-nio-8008-exec-8 p6spy 2021-11-10 19:37:13 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:37:13 INFO  http-nio-8008-exec-8 p6spy 2021-11-10 19:37:13 | 耗时 4 ms | SQL 语句：
SELECT m.* FROM t_agent_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT l.menu_id FROM t_agent_menu_limit l LEFT JOIN t_agent a ON (a.id = l.agent_id) WHERE a.Agent_Account = 'vagent') ORDER BY m.order_num;
2021-11-10 19:37:13 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 19:37:13 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:37:13 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 19:37:13 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:37:13 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 19:37:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization WHERE (Agent_Id = 35);
2021-11-10 19:37:13 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 19:37:13 | 耗时 1 ms | SQL 语句：
SELECT `org_code`, COUNT(1) AS total, COUNT(IF(`state` & 52 = `state`, 1, NULL)) AS successTotal, COUNT(IF(`state` = 8, 1, NULL)) AS failTotal, SUM(`agent_income_amount`) AS successAmount, SUM(`up_agent_income_amount`) AS upAgentSuccessAmount, SUM(`consume_amount`) AS consumeAmount FROM t_send_record WHERE (Agent_Id = 35 AND create_time >= '2021-11-10 00:00:00' AND `state` & 62 = `state`) GROUP BY org_code;
2021-11-10 19:37:13 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 19:37:13 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 35;
2021-11-10 19:37:13 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 19:37:13 | 耗时 1 ms | SQL 语句：
SELECT `org_code`, COUNT(1) AS total, COUNT(IF(`state` & 52 = `state`, 1, NULL)) AS successTotal, COUNT(IF(`state` = 8, 1, NULL)) AS failTotal, SUM(`agent_income_amount`) AS successAmount, SUM(`up_agent_income_amount`) AS upAgentSuccessAmount, SUM(`consume_amount`) AS consumeAmount FROM t_send_record WHERE (`up_agent_id` = 35 AND create_time >= '2021-11-10 00:00:00' AND `state` & 62 = `state`) GROUP BY org_code;
2021-11-10 19:37:17 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 19:37:17 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_agent_menu_limit l LEFT JOIN t_agent u ON (u.Id = l.AGENT_ID) LEFT JOIN t_agent_menu m ON (l.MENU_ID = m.MENU_ID) WHERE u.Agent_Account = 'vagent' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-10 19:37:18 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:37:18 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:37:18 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:37:18 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent WHERE (Up_Agent_Id = 35);
2021-11-10 19:37:18 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:37:18 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Up_Agent_Id = 35) ORDER BY Id DESC LIMIT 0,10;
2021-11-10 19:37:18 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:37:18 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-10T19:37:18.221+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 70, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=35, agentName=null, agentAccount=null, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=null, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'vagent');
2021-11-10 19:37:20 INFO  http-nio-8008-exec-8 p6spy 2021-11-10 19:37:20 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Up_Agent_Id = 35 AND Id = 36);
2021-11-10 19:37:20 INFO  http-nio-8008-exec-8 p6spy 2021-11-10 19:37:20 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-10 19:39:34 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:39:34 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Up_Agent_Id = 35 AND Id = 36);
2021-11-10 19:39:34 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:39:34 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-10 19:44:36 INFO  http-nio-8008-exec-8 p6spy 2021-11-10 19:44:36 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Up_Agent_Id = 35 AND Id = 36);
2021-11-10 19:44:36 INFO  http-nio-8008-exec-8 p6spy 2021-11-10 19:44:36 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-10 19:44:55 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:44:55 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Up_Agent_Id = 35 AND Id = 36);
2021-11-10 19:44:55 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:44:55 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-10 19:45:41 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 19:45:41 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Up_Agent_Id = 35 AND Id = 36);
2021-11-10 19:45:41 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 19:45:41 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-10 19:45:46 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 19:45:46 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:45:46 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 19:45:46 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 36;
2021-11-10 19:45:46 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 19:45:46 | 耗时 10 ms | SQL 语句：
DELETE FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-10 19:45:46 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 19:45:46 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-10 19:45:46 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 19:45:46 | 耗时 10 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateAgentCosts()', '2021-11-10T19:45:46.188+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 48, ' agentCosts: "[AgentCost(id=196, agentId=36, smsType=1, name=+86, value=40, channelId=null, operator=, description=, remark=vagent添加, createDate=Wed Nov 10 19:45:46 CST 2021), AgentCost(id=197, agentId=36, smsType=1, name=+86, value=51, channelId=null, operator=CUCC, description=, remark=vagent添加, createDate=Wed Nov 10 19:45:46 CST 2021)]"', '更新代理资费', 'vagent');
2021-11-10 19:45:47 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 19:45:47 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Up_Agent_Id = 35 AND Id = 36);
2021-11-10 19:45:47 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 19:45:47 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-10 19:45:53 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 19:45:53 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:45:53 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 19:45:53 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 36;
2021-11-10 19:45:53 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 19:45:53 | 耗时 2 ms | SQL 语句：
DELETE FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-10 19:45:53 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 19:45:53 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-10 19:45:53 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 19:45:53 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateAgentCosts()', '2021-11-10T19:45:53.743+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 16, ' agentCosts: "[AgentCost(id=null, agentId=36, smsType=1, name=+86, value=40, channelId=null, operator=, description=, remark=vagent添加, createDate=Wed Nov 10 19:45:53 CST 2021), AgentCost(id=null, agentId=36, smsType=1, name=+86, value=50, channelId=null, operator=CTCC, description=null, remark=null, createDate=null), AgentCost(id=null, agentId=36, smsType=null, name=, value=NaN, channelId=null, operator=, description=null, remark=null, createDate=null)]"', '更新代理资费', 'vagent');
2021-11-10 19:46:00 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:46:00 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:46:00 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:46:00 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 36;
2021-11-10 19:46:00 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:46:00 | 耗时 1 ms | SQL 语句：
DELETE FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-10 19:46:00 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:46:00 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-10 19:46:00 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:46:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateAgentCosts()', '2021-11-10T19:46:00.677+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 18, ' agentCosts: "[AgentCost(id=null, agentId=36, smsType=1, name=+86, value=40, channelId=null, operator=, description=, remark=vagent添加, createDate=Wed Nov 10 19:46:00 CST 2021), AgentCost(id=null, agentId=36, smsType=1, name=+86, value=50, channelId=null, operator=, description=, remark=vagent添加, createDate=Wed Nov 10 19:46:00 CST 2021)]"', '更新代理资费', 'vagent');
2021-11-10 19:46:07 INFO  http-nio-8008-exec-7 p6spy 2021-11-10 19:46:07 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Up_Agent_Id = 35 AND Id = 36);
2021-11-10 19:46:07 INFO  http-nio-8008-exec-7 p6spy 2021-11-10 19:46:07 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-10 19:46:25 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:46:25 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:46:25 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:46:25 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE Id = 36;
2021-11-10 19:46:25 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:46:25 | 耗时 3 ms | SQL 语句：
DELETE FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-10 19:46:25 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:46:25 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-10 19:46:25 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:46:25 | 耗时 3 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentCostController.updateAgentCosts()', '2021-11-10T19:46:25.180+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 18, ' agentCosts: "[AgentCost(id=null, agentId=36, smsType=1, name=+86, value=40, channelId=null, operator=, description=, remark=vagent添加, createDate=Wed Nov 10 19:46:25 CST 2021), AgentCost(id=null, agentId=36, smsType=1, name=+86, value=51, channelId=null, operator=CUCC, description=, remark=vagent添加, createDate=Wed Nov 10 19:46:25 CST 2021), AgentCost(id=null, agentId=36, smsType=1, name=+86, value=50, channelId=null, operator=CMCC, description=null, remark=null, createDate=null)]"', '更新代理资费', 'vagent');
2021-11-10 19:46:33 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:46:33 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:46:33 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:46:33 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization WHERE (Agent_Id = 35);
2021-11-10 19:46:33 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:46:33 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Agent_Id = 35) ORDER BY Id DESC LIMIT 0,10;
2021-11-10 19:46:33 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:46:33 | 耗时 3 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-10T19:46:33.647+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 19, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "Organization(id=null, agentId=35, businessUserId=null, organizationName=null, organizationCode=null, contact=null, contactMobile=null, email=null, address=null, webUrl=null, amount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, status=null, approveStateCode=null, smsSign=null, chargesType=null, settlementType=null, smsApproveType=null, interfaceType=null, md5Key=null, bindIp=null, notifyUrl=null, dataMd5=null, description=null, remark=null, createUser=null, createDate=null)"', '商户列表', 'vagent');
2021-11-10 19:46:35 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 19:46:35 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '117' AND Agent_Id = 35);
2021-11-10 19:46:35 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 19:46:35 | 耗时 3 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS210306175250BLLX');
2021-11-10 19:49:28 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 19:49:28 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Up_Agent_Id = 35 AND Id = 36);
2021-11-10 19:49:28 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 19:49:28 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-10 19:51:13 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:51:13 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 19:51:13 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:51:13 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 19:51:42 INFO  http-nio-8008-exec-7 p6spy 2021-11-10 19:51:42 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 19:51:42 INFO  http-nio-8008-exec-7 p6spy 2021-11-10 19:51:42 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 19:52:41 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:52:41 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:52:41 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:52:41 | 耗时 12 ms | SQL 语句：
SELECT m.perms FROM t_agent_menu_limit l LEFT JOIN t_agent u ON (u.Id = l.AGENT_ID) LEFT JOIN t_agent_menu m ON (l.MENU_ID = m.MENU_ID) WHERE u.Agent_Account = 'vagent' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-10 19:52:41 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:52:41 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:52:41 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:52:41 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:52:41 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:52:41 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_agent_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT l.menu_id FROM t_agent_menu_limit l LEFT JOIN t_agent a ON (a.id = l.agent_id) WHERE a.Agent_Account = 'vagent') ORDER BY m.order_num;
2021-11-10 19:52:41 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:52:41 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:52:41 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:52:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization WHERE (Agent_Id = 35);
2021-11-10 19:52:41 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:52:41 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Agent_Id = 35) ORDER BY Id DESC LIMIT 0,10;
2021-11-10 19:52:41 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:52:41 | 耗时 3 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-10T19:52:41.956+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 11, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "Organization(id=null, agentId=35, businessUserId=null, organizationName=null, organizationCode=null, contact=null, contactMobile=null, email=null, address=null, webUrl=null, amount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, status=null, approveStateCode=null, smsSign=null, chargesType=null, settlementType=null, smsApproveType=null, interfaceType=null, md5Key=null, bindIp=null, notifyUrl=null, dataMd5=null, description=null, remark=null, createUser=null, createDate=null)"', '商户列表', 'vagent');
2021-11-10 19:52:43 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 19:52:43 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 19:52:43 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 19:52:43 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 19:54:30 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:54:30 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:54:30 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:54:30 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_agent_menu_limit l LEFT JOIN t_agent u ON (u.Id = l.AGENT_ID) LEFT JOIN t_agent_menu m ON (l.MENU_ID = m.MENU_ID) WHERE u.Agent_Account = 'vagent' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-10 19:54:30 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:54:30 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:54:30 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 19:54:30 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:54:30 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 19:54:30 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_agent_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT l.menu_id FROM t_agent_menu_limit l LEFT JOIN t_agent a ON (a.id = l.agent_id) WHERE a.Agent_Account = 'vagent') ORDER BY m.order_num;
2021-11-10 19:54:30 INFO  http-nio-8008-exec-8 p6spy 2021-11-10 19:54:30 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:54:30 INFO  http-nio-8008-exec-8 p6spy 2021-11-10 19:54:30 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization WHERE (Agent_Id = 35);
2021-11-10 19:54:30 INFO  http-nio-8008-exec-8 p6spy 2021-11-10 19:54:30 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Agent_Id = 35) ORDER BY Id DESC LIMIT 0,10;
2021-11-10 19:54:30 INFO  http-nio-8008-exec-8 p6spy 2021-11-10 19:54:30 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-10T19:54:30.736+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 10, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "Organization(id=null, agentId=35, businessUserId=null, organizationName=null, organizationCode=null, contact=null, contactMobile=null, email=null, address=null, webUrl=null, amount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, status=null, approveStateCode=null, smsSign=null, chargesType=null, settlementType=null, smsApproveType=null, interfaceType=null, md5Key=null, bindIp=null, notifyUrl=null, dataMd5=null, description=null, remark=null, createUser=null, createDate=null)"', '商户列表', 'vagent');
2021-11-10 19:54:31 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:54:31 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 19:54:31 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:54:31 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 19:54:54 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 19:54:54 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:54:54 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 19:54:54 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_agent_menu_limit l LEFT JOIN t_agent u ON (u.Id = l.AGENT_ID) LEFT JOIN t_agent_menu m ON (l.MENU_ID = m.MENU_ID) WHERE u.Agent_Account = 'vagent' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-10 19:54:54 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 19:54:54 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:54:55 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 19:54:55 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:54:55 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 19:54:55 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_agent_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT l.menu_id FROM t_agent_menu_limit l LEFT JOIN t_agent a ON (a.id = l.agent_id) WHERE a.Agent_Account = 'vagent') ORDER BY m.order_num;
2021-11-10 19:54:55 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:54:55 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:54:55 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:54:55 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization WHERE (Agent_Id = 35);
2021-11-10 19:54:55 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:54:55 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Agent_Id = 35) ORDER BY Id DESC LIMIT 0,10;
2021-11-10 19:54:55 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:54:55 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-10T19:54:55.342+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 6, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "Organization(id=null, agentId=35, businessUserId=null, organizationName=null, organizationCode=null, contact=null, contactMobile=null, email=null, address=null, webUrl=null, amount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, status=null, approveStateCode=null, smsSign=null, chargesType=null, settlementType=null, smsApproveType=null, interfaceType=null, md5Key=null, bindIp=null, notifyUrl=null, dataMd5=null, description=null, remark=null, createUser=null, createDate=null)"', '商户列表', 'vagent');
2021-11-10 19:54:56 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:54:56 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 19:54:56 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:54:56 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 19:56:30 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 19:56:30 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 19:56:30 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 19:56:30 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 19:56:42 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 19:56:42 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:56:42 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 19:56:42 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_agent_menu_limit l LEFT JOIN t_agent u ON (u.Id = l.AGENT_ID) LEFT JOIN t_agent_menu m ON (l.MENU_ID = m.MENU_ID) WHERE u.Agent_Account = 'vagent' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-10 19:56:42 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 19:56:42 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:56:43 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:56:43 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:56:43 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:56:43 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_agent_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT l.menu_id FROM t_agent_menu_limit l LEFT JOIN t_agent a ON (a.id = l.agent_id) WHERE a.Agent_Account = 'vagent') ORDER BY m.order_num;
2021-11-10 19:56:43 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:56:43 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:56:43 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:56:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization WHERE (Agent_Id = 35);
2021-11-10 19:56:43 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:56:43 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Agent_Id = 35) ORDER BY Id DESC LIMIT 0,10;
2021-11-10 19:56:43 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 19:56:43 | 耗时 3 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-10T19:56:43.463+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 13, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "Organization(id=null, agentId=35, businessUserId=null, organizationName=null, organizationCode=null, contact=null, contactMobile=null, email=null, address=null, webUrl=null, amount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, status=null, approveStateCode=null, smsSign=null, chargesType=null, settlementType=null, smsApproveType=null, interfaceType=null, md5Key=null, bindIp=null, notifyUrl=null, dataMd5=null, description=null, remark=null, createUser=null, createDate=null)"', '商户列表', 'vagent');
2021-11-10 19:56:45 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:56:45 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 19:56:45 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:56:45 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 19:57:07 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 19:57:07 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:57:07 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 19:57:07 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_agent_menu_limit l LEFT JOIN t_agent u ON (u.Id = l.AGENT_ID) LEFT JOIN t_agent_menu m ON (l.MENU_ID = m.MENU_ID) WHERE u.Agent_Account = 'vagent' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-10 19:57:07 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 19:57:07 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:57:08 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 19:57:08 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:57:08 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 19:57:08 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_agent_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT l.menu_id FROM t_agent_menu_limit l LEFT JOIN t_agent a ON (a.id = l.agent_id) WHERE a.Agent_Account = 'vagent') ORDER BY m.order_num;
2021-11-10 19:57:08 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 19:57:08 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 19:57:08 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 19:57:08 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization WHERE (Agent_Id = 35);
2021-11-10 19:57:08 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 19:57:08 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Agent_Id = 35) ORDER BY Id DESC LIMIT 0,10;
2021-11-10 19:57:08 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 19:57:08 | 耗时 5 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-10T19:57:08.522+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 8, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "Organization(id=null, agentId=35, businessUserId=null, organizationName=null, organizationCode=null, contact=null, contactMobile=null, email=null, address=null, webUrl=null, amount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, status=null, approveStateCode=null, smsSign=null, chargesType=null, settlementType=null, smsApproveType=null, interfaceType=null, md5Key=null, bindIp=null, notifyUrl=null, dataMd5=null, description=null, remark=null, createUser=null, createDate=null)"', '商户列表', 'vagent');
2021-11-10 19:57:09 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 19:57:09 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 19:57:09 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 19:57:09 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 19:57:48 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:57:48 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 19:57:48 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 19:57:48 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 19:57:58 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 19:57:58 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 19:57:58 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 19:57:58 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 19:58:05 INFO  http-nio-8008-exec-8 p6spy 2021-11-10 19:58:05 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 19:58:05 INFO  http-nio-8008-exec-8 p6spy 2021-11-10 19:58:05 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 19:58:26 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:58:26 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 19:58:26 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 19:58:26 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 19:58:40 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 19:58:40 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 19:58:40 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 19:58:40 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 19:58:59 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 19:58:59 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 19:58:59 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 19:58:59 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 19:59:15 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 19:59:15 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 19:59:15 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 19:59:15 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 19:59:52 INFO  http-nio-8008-exec-7 p6spy 2021-11-10 19:59:52 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 19:59:52 INFO  http-nio-8008-exec-7 p6spy 2021-11-10 19:59:52 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 20:00:13 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 20:00:13 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:00:13 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 20:00:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization WHERE (Agent_Id = 35);
2021-11-10 20:00:13 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 20:00:13 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Agent_Id = 35) ORDER BY Id DESC LIMIT 0,10;
2021-11-10 20:00:13 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 20:00:13 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-10T20:00:13.487+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 10, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "Organization(id=null, agentId=35, businessUserId=null, organizationName=null, organizationCode=null, contact=null, contactMobile=null, email=null, address=null, webUrl=null, amount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, status=null, approveStateCode=null, smsSign=null, chargesType=null, settlementType=null, smsApproveType=null, interfaceType=null, md5Key=null, bindIp=null, notifyUrl=null, dataMd5=null, description=null, remark=null, createUser=null, createDate=null)"', '商户列表', 'vagent');
2021-11-10 20:00:14 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 20:00:14 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 20:00:14 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 20:00:14 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 20:00:23 INFO  http-nio-8008-exec-8 p6spy 2021-11-10 20:00:23 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:00:23 INFO  http-nio-8008-exec-8 p6spy 2021-11-10 20:00:23 | 耗时 0 ms | SQL 语句：
SELECT m.perms FROM t_agent_menu_limit l LEFT JOIN t_agent u ON (u.Id = l.AGENT_ID) LEFT JOIN t_agent_menu m ON (l.MENU_ID = m.MENU_ID) WHERE u.Agent_Account = 'vagent' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-10 20:00:23 INFO  http-nio-8008-exec-8 p6spy 2021-11-10 20:00:23 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:00:23 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 20:00:23 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:00:23 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 20:00:23 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_agent_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT l.menu_id FROM t_agent_menu_limit l LEFT JOIN t_agent a ON (a.id = l.agent_id) WHERE a.Agent_Account = 'vagent') ORDER BY m.order_num;
2021-11-10 20:00:24 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:00:24 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:00:24 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:00:24 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization WHERE (Agent_Id = 35);
2021-11-10 20:00:24 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:00:24 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Agent_Id = 35) ORDER BY Id DESC LIMIT 0,10;
2021-11-10 20:00:24 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:00:24 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-10T20:00:24.081+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 8, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "Organization(id=null, agentId=35, businessUserId=null, organizationName=null, organizationCode=null, contact=null, contactMobile=null, email=null, address=null, webUrl=null, amount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, status=null, approveStateCode=null, smsSign=null, chargesType=null, settlementType=null, smsApproveType=null, interfaceType=null, md5Key=null, bindIp=null, notifyUrl=null, dataMd5=null, description=null, remark=null, createUser=null, createDate=null)"', '商户列表', 'vagent');
2021-11-10 20:00:25 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 20:00:25 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 20:00:25 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 20:00:25 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 20:00:45 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 20:00:45 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:00:45 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 20:00:45 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent WHERE (Up_Agent_Id = 35);
2021-11-10 20:00:45 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 20:00:45 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Up_Agent_Id = 35) ORDER BY Id DESC LIMIT 0,10;
2021-11-10 20:00:45 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 20:00:45 | 耗时 3 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentController.agentList()', '2021-11-10T20:00:45.812+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 14, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agent: "Agent(id=null, upAgentId=35, agentName=null, agentAccount=null, agentPassword=null, payPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, amount=null, quotaAmount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, dayLimit=null, stateCode=null, phoneNumber=null, email=null, qq=null, levelCode=null, dataMd5=null, googleKey=null, description=null, remark=null, createUser=null, createDate=null, needBindGoogleKey=null, loginIp=null)"', '代理列表', 'vagent');
2021-11-10 20:00:46 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 20:00:46 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Up_Agent_Id = 35 AND Id = 36);
2021-11-10 20:00:46 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 20:00:46 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-10 20:00:52 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 20:00:52 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:00:52 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 20:00:52 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization WHERE (Agent_Id = 35);
2021-11-10 20:00:52 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 20:00:52 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Agent_Id = 35) ORDER BY Id DESC LIMIT 0,10;
2021-11-10 20:00:52 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 20:00:52 | 耗时 3 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-10T20:00:52.315+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 10, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organization: "Organization(id=null, agentId=35, businessUserId=null, organizationName=null, organizationCode=null, contact=null, contactMobile=null, email=null, address=null, webUrl=null, amount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, status=null, approveStateCode=null, smsSign=null, chargesType=null, settlementType=null, smsApproveType=null, interfaceType=null, md5Key=null, bindIp=null, notifyUrl=null, dataMd5=null, description=null, remark=null, createUser=null, createDate=null)"', '商户列表', 'vagent');
2021-11-10 20:00:53 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 20:00:53 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 20:00:53 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 20:00:53 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 20:01:11 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:01:11 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:01:11 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:01:11 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-10 20:01:11 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:01:11 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 20:01:11 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:01:11 | 耗时 1 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 20:01:11 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:01:11 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 20:01:11 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:01:11 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-10 20:01:11 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:01:11 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-10T20:01:11.209+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 40, ' organizationCosts: "[OrganizationCost(id=null, organizationCode=SMS200831203105CVLC, smsType=1, costName=+86, costValue=46, state=1, channelId=null, operator=, description=, remark=vagent添加, createDate=Wed Nov 10 20:01:11 CST 2021), OrganizationCost(id=null, organizationCode=SMS200831203105CVLC, smsType=1, costName=+86, costValue=55, state=1, channelId=null, operator=CTCC, description=null, remark=null, createDate=null)]"', '商户用户资费更新', 'vagent');
2021-11-10 20:01:16 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 20:01:16 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:01:16 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 20:01:16 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-10 20:01:16 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 20:01:16 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 20:01:16 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 20:01:16 | 耗时 0 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 20:01:16 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 20:01:16 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 20:01:16 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 20:01:16 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-10 20:01:16 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 20:01:16 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-10T20:01:16.239+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 25, ' organizationCosts: "[OrganizationCost(id=121, organizationCode=SMS200831203105CVLC, smsType=1, costName=+86, costValue=46, state=1, channelId=null, operator=, description=, remark=vagent添加, createDate=Wed Nov 10 20:01:16 CST 2021), OrganizationCost(id=122, organizationCode=SMS200831203105CVLC, smsType=1, costName=+86, costValue=55, state=1, channelId=null, operator=CUCC, description=, remark=vagent添加, createDate=Wed Nov 10 20:01:16 CST 2021)]"', '商户用户资费更新', 'vagent');
2021-11-10 20:01:18 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 20:01:18 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 20:01:18 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 20:01:18 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 20:01:25 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 20:01:25 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:01:25 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 20:01:25 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-10 20:01:25 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 20:01:25 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 20:01:25 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 20:01:25 | 耗时 1 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 20:01:25 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 20:01:25 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 20:01:25 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 20:01:25 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-10 20:01:25 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 20:01:25 | 耗时 3 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-10T20:01:25.592+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 34, ' organizationCosts: "[OrganizationCost(id=null, organizationCode=SMS200831203105CVLC, smsType=1, costName=+86, costValue=46, state=1, channelId=null, operator=, description=, remark=vagent添加, createDate=Wed Nov 10 20:01:25 CST 2021), OrganizationCost(id=null, organizationCode=SMS200831203105CVLC, smsType=1, costName=+86, costValue=55, state=1, channelId=null, operator=, description=, remark=vagent添加, createDate=Wed Nov 10 20:01:25 CST 2021)]"', '商户用户资费更新', 'vagent');
2021-11-10 20:01:33 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 20:01:33 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Up_Agent_Id = 35 AND Id = 36);
2021-11-10 20:01:33 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 20:01:33 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 36);
2021-11-10 20:01:38 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 20:01:38 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '101' AND Agent_Id = 35);
2021-11-10 20:01:38 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 20:01:38 | 耗时 1 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS200831203105CVLC');
2021-11-10 20:04:45 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 20:04:45 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:04:45 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:04:45 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:04:46 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:04:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization_user u LEFT JOIN t_organization o ON (o.Organization_Code = u.Organization_Code) WHERE (o.Agent_Id = 35);
2021-11-10 20:04:46 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:04:46 | 耗时 1 ms | SQL 语句：
SELECT u.* FROM t_organization_user u LEFT JOIN t_organization o ON (o.Organization_Code = u.Organization_Code) WHERE (o.Agent_Id = 35) ORDER BY u.id DESC LIMIT 0,10;
2021-11-10 20:04:46 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:04:46 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationUserController.organizationUserList()', '2021-11-10T20:04:46.037+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 25, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organizationUser: "OrganizationUser(id=null, organizationCode=null, userName=null, userAccount=null, userPassword=null, lastLoginIp=null, lastLoginTime=null, loginFaildCount=null, status=null, accountType=null, googleKey=null, needBindGoogleKey=null, loginIp=null, description=null, remark=null, createUser=null, createDate=null)"', '商户用户列表', 'vagent');
2021-11-10 20:04:49 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 20:04:49 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Id = '105' AND Agent_Id = 35);
2021-11-10 20:04:49 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 20:04:49 | 耗时 0 ms | SQL 语句：
SELECT Id, Cost_Name, Cost_Value, Organization_Code, Description, Remark, sms_type, State, Operator, Channel_Id, Create_Date FROM t_organization_cost WHERE (Organization_Code = 'SMS201117111508PIKE');
2021-11-10 20:05:25 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 20:05:25 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:05:25 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 20:05:25 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-10 20:05:25 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 20:05:25 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = 'SMS201117111508PIKE');
2021-11-10 20:05:25 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 20:05:25 | 耗时 1 ms | SQL 语句：
DELETE FROM t_organization_cost WHERE (Organization_Code = 'SMS201117111508PIKE');
2021-11-10 20:05:25 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 20:05:25 | 耗时 1 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Organization_Code = 'SMS201117111508PIKE');
2021-11-10 20:05:25 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 20:05:25 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Name, Description, Remark, sms_type, Value, Operator, Channel_Id, Create_Date FROM t_agent_cost WHERE (Agent_Id = 35);
2021-11-10 20:05:25 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 20:05:25 | 耗时 3 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationCostController.updateOrganizationCosts()', '2021-11-10T20:05:25.966+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 33, ' organizationCosts: "[OrganizationCost(id=null, organizationCode=SMS201117111508PIKE, smsType=1, costName=+86, costValue=46, state=1, channelId=null, operator=, description=, remark=vagent添加, createDate=Wed Nov 10 20:05:25 CST 2021), OrganizationCost(id=null, organizationCode=SMS201117111508PIKE, smsType=1, costName=+86, costValue=10, state=1, channelId=null, operator=CUCC, description=null, remark=null, createDate=null)]"', '商户用户资费更新', 'vagent');
2021-11-10 20:15:03 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 20:15:03 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:15:03 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 20:15:03 | 耗时 21 ms | SQL 语句：
SELECT m.perms FROM t_agent_menu_limit l LEFT JOIN t_agent u ON (u.Id = l.AGENT_ID) LEFT JOIN t_agent_menu m ON (l.MENU_ID = m.MENU_ID) WHERE u.Agent_Account = 'vagent' AND m.perms IS NOT NULL AND m.perms <> '';
2021-11-10 20:15:03 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 20:15:03 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization WHERE (Agent_Id = 35);
2021-11-10 20:15:03 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 20:15:03 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Agent_Id = 35) ORDER BY Id DESC LIMIT 0,10;
2021-11-10 20:15:03 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 20:15:03 | 耗时 6 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-10T20:15:03.650+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 6, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "Organization(id=null, agentId=35, businessUserId=null, organizationName=, organizationCode=, contact=null, contactMobile=null, email=null, address=null, webUrl=null, amount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, status=, approveStateCode=null, smsSign=null, chargesType=null, settlementType=null, smsApproveType=null, interfaceType=null, md5Key=null, bindIp=null, notifyUrl=null, dataMd5=null, description=null, remark=null, createUser=null, createDate=null)"', '商户列表', 'vagent');
2021-11-10 20:15:04 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 20:15:04 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:15:04 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 20:15:04 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization WHERE (Agent_Id = 35);
2021-11-10 20:15:04 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 20:15:04 | 耗时 0 ms | SQL 语句：
SELECT Id, Agent_Id, Sms_Approve_type, Cash_Amount, Description, Remark, interface_type, Available_Amount, Contact, Md5_Key, Sms_Sign, EMail, Create_Date, Settlement_type, Contact_Mobile, Amount, Address, Organization_Name, charges_type, Business_User_Id, Data_MD5, Bind_IP, Approve_State_Code, Organization_Code, Web_Url, Send_Sms_Total, notify_url, Create_User, Status FROM t_organization WHERE (Agent_Id = 35) ORDER BY Id DESC LIMIT 0,10;
2021-11-10 20:15:04 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 20:15:04 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationController.organizationList()', '2021-11-10T20:15:04.539+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 5, ' request: "QueryRequest(pageSize=10, pageNum=1, field=createTime, order=)" organization: "Organization(id=null, agentId=35, businessUserId=null, organizationName=, organizationCode=, contact=null, contactMobile=null, email=null, address=null, webUrl=null, amount=null, availableAmount=null, cashAmount=null, sendSmsTotal=null, status=, approveStateCode=null, smsSign=null, chargesType=null, settlementType=null, smsApproveType=null, interfaceType=null, md5Key=null, bindIp=null, notifyUrl=null, dataMd5=null, description=null, remark=null, createUser=null, createDate=null)"', '商户列表', 'vagent');
2021-11-10 20:15:44 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 20:15:44 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:15:44 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 20:15:44 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:15:44 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 20:15:44 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM t_agent_recharge_order o LEFT JOIN t_agent a ON (o.`agent_id` = a.`Id`) WHERE (o.`agent_id` = '35' AND o.`req_time` >= '2021-11-10 00:00:00' AND o.`req_time` <= '2021-11-10 23:59:59' OR a.`Up_Agent_Id` = 35 AND o.`req_time` >= '2021-11-10 00:00:00' AND o.`req_time` <= '2021-11-10 23:59:59');
2021-11-10 20:15:44 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 20:15:44 | 耗时 4 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.agent.AgentRechargeOrderController.agentRechargeOrderList()', '2021-11-10T20:15:44.273+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 28, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" agentRechargeOrder: AgentRechargeOrder(id=null, agentId=35, orderNo=null, payChannelId=null, payMerchNo=null, rechargeType=null, netwayCode=null, rechargePictureUrl=null, rechargeAmount=null, availableAmount=null, reqStateCode=null, reqTime=null, reqStateDescription=null, rechargeStateCode=null, rechargeTime=null, rechargeCompleteTime=null, remark=null, ceateUser=null, createTime=null, recordedType=null) agentReqStartTime: null agentReqEndTime: null', '代理充值订单列表', 'vagent');
2021-11-10 20:15:44 INFO  http-nio-8008-exec-2 p6spy 2021-11-10 20:15:44 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:15:44 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 20:15:44 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:15:44 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 20:15:44 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM t_organization_recharge_order o LEFT JOIN t_organization g ON (o.`organization_code` = g.`Organization_Code`) WHERE (g.`Agent_Id` = 35 AND o.`req_time` >= '2021-11-10 00:00:00' AND o.`req_time` <= '2021-11-10 23:59:59');
2021-11-10 20:15:44 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 20:15:44 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.organization.OrganizationRechargeOrderController.organizationRechargeOrderList()', '2021-11-10T20:15:44.923+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 34, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" organizationRechargeOrder: OrganizationRechargeOrder(id=null, organizationCode=null, orderNo=null, payChannelId=null, payMerchNo=null, rechargeType=null, netwayCode=null, rechargePictureUrl=null, rechargeAmount=null, availableAmount=null, reqStateCode=null, reqTime=null, reqStateDescription=null, rechargeStateCode=null, rechargeTime=null, rechargeCompleteTime=null, remark=null, ceateUser=null, createTime=null, recordedType=null) orgReqStartTime: null orgReqEndTime: null', '商户充值订单列表', 'vagent');
2021-11-10 20:15:45 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 20:15:45 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:15:45 INFO  http-nio-8008-exec-3 p6spy 2021-11-10 20:15:45 | 耗时 10 ms | SQL 语句：
SELECT COUNT(1) FROM t_return_sms_order WHERE (create_time >= '2021-11-10 00:00:00' AND create_time <= '2021-11-10 23:59:59' AND ((agent_id = 35 OR up_agent_id = 35)));
2021-11-10 20:15:47 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 20:15:47 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:15:47 INFO  http-nio-8008-exec-8 p6spy 2021-11-10 20:15:47 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:15:47 INFO  http-nio-8008-exec-9 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_agentSendBoxList169.254.130.216]，描述为 [发件箱列表查询] 的接口
2021-11-10 20:15:47 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 20:15:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (agent_id = 35 AND create_time >= '2021-11-10T00:00:00.000+0800' AND create_time <= '2021-11-10T23:59:59.000+0800');
2021-11-10 20:15:47 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 20:15:47 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxController.sendBoxList()', '2021-11-10T20:15:47.580+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 52, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" sendBox: "SendBoxQuery(isTiming=null, isTimingFlag=null, isSortingFlag=null, leTimingTime=null, isNeedSmsNumber=false, sortingStartTime=null, sortingEndTime=null, createStartTime=Wed Nov 10 00:00:00 CST 2021, createEndTime=Wed Nov 10 23:59:59 CST 2021, moblieFile=null, excludeAuditState=null, ids=null, auditState=null, sessionToken=null, isLongSms=null)"', '发件箱列表查询', 'vagent');
2021-11-10 20:15:48 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 20:15:48 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:15:48 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:15:48 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:15:48 INFO  http-nio-8008-exec-1 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_agentSendBoxHistoryList169.254.130.216]，描述为 [代理历史发件箱列表查询] 的接口
2021-11-10 20:15:48 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 20:15:48 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box_history WHERE (agent_id = 35 AND create_time >= '2021-10-30T00:00:00.000+0800' AND create_time <= '2021-10-30T23:59:59.000+0800');
2021-11-10 20:15:48 INFO  http-nio-8008-exec-1 p6spy 2021-11-10 20:15:48 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxController.sendBoxHistoryList()', '2021-11-10T20:15:48.804+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 24, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" sendBoxHistory: SendBoxHistoryQuery(isTiming=null, isTimingFlag=null, leTimingTime=null, sortingStartTime=null, sortingEndTime=null, createStartTime=Sat Oct 30 00:00:00 CST 2021, createEndTime=Sat Oct 30 23:59:59 CST 2021, isLongSms=null)', '代理历史发件箱列表查询', 'vagent');
2021-11-10 20:15:49 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 20:15:49 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:15:49 INFO  http-nio-8008-exec-7 p6spy 2021-11-10 20:15:49 | 耗时 1 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:15:49 INFO  http-nio-8008-exec-6 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_agentSendRecordList169.254.130.216]，描述为 [查询发送记录] 的接口
2021-11-10 20:15:49 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 20:15:49 | 耗时 10 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2021-11-10T00:00:00.000+0800' AND create_time <= '2021-11-10T23:59:59.000+0800' AND agent_id = 35);
2021-11-10 20:15:49 INFO  http-nio-8008-exec-6 p6spy 2021-11-10 20:15:49 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.sendRecordList()', '2021-11-10T20:15:49.576+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 39, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" sendRecord: "SendRecordQuery(createStartTime=Wed Nov 10 00:00:00 CST 2021, createEndTime=Wed Nov 10 23:59:59 CST 2021, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '查询发送记录', 'vagent');
2021-11-10 20:15:52 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 20:15:52 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:15:52 INFO  http-nio-8008-exec-10 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_agentSendBoxSubordinateList169.254.130.216]，描述为 [子代理发件箱列表查询] 的接口
2021-11-10 20:15:52 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 20:15:52 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_box WHERE (up_agent_id = 35 AND create_time >= '2021-11-10T00:00:00.000+0800' AND create_time <= '2021-11-10T23:59:59.000+0800');
2021-11-10 20:15:52 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 20:15:52 | 耗时 0 ms | SQL 语句：
SELECT id, agent_id, send_code, sms_number_area, type, audit_state, create_username, refuse_cause, org_code, channel_cost_amount, timing_time, agent_income_amount, sms_content, sms_type, is_timing_time, up_agent_id, consume_amount, sms_count, number_count, income_amount, create_time, client_ip, sms_words, sub_type, sorting_time, up_agent_income_amount FROM t_send_box WHERE (up_agent_id = 35 AND create_time >= '2021-11-10T00:00:00.000+0800' AND create_time <= '2021-11-10T23:59:59.000+0800') ORDER BY create_time DESC LIMIT 0,10;
2021-11-10 20:15:52 INFO  http-nio-8008-exec-10 p6spy 2021-11-10 20:15:52 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendBoxController.sendBoxSubordinateList()', '2021-11-10T20:15:52.815+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 19, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" sendBox: "SendBoxQuery(isTiming=null, isTimingFlag=null, isSortingFlag=null, leTimingTime=null, isNeedSmsNumber=false, sortingStartTime=null, sortingEndTime=null, createStartTime=Wed Nov 10 00:00:00 CST 2021, createEndTime=Wed Nov 10 23:59:59 CST 2021, moblieFile=null, excludeAuditState=null, ids=null, auditState=null, sessionToken=null, isLongSms=null)"', '子代理发件箱列表查询', 'vagent');
2021-11-10 20:16:07 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 20:16:07 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:16:07 INFO  http-nio-8008-exec-9 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_agentSendRecordSubordinateList169.254.130.216]，描述为 [查询发送记录] 的接口
2021-11-10 20:16:07 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 20:16:07 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2021-11-10T00:00:00.000+0800' AND create_time <= '2021-11-10T23:59:59.000+0800' AND up_agent_id = 35);
2021-11-10 20:16:07 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 20:16:07 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2021-11-10T00:00:00.000+0800' AND create_time <= '2021-11-10T23:59:59.000+0800' AND up_agent_id = 35) ORDER BY create_time DESC LIMIT 0,10;
2021-11-10 20:16:07 INFO  http-nio-8008-exec-9 p6spy 2021-11-10 20:16:07 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.subordinateList()', '2021-11-10T20:16:07.405+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 16, ' request: "QueryRequest(pageSize=10, pageNum=1, field=null, order=null)" sendRecord: "SendRecordQuery(createStartTime=Wed Nov 10 00:00:00 CST 2021, createEndTime=Wed Nov 10 23:59:59 CST 2021, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '查询发送记录', 'vagent');
2021-11-10 20:16:11 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 20:16:11 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:16:11 INFO  http-nio-8008-exec-5 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_agentSendRecordSubordinateList169.254.130.216]，描述为 [查询发送记录] 的接口
2021-11-10 20:16:11 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 20:16:11 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_send_record WHERE (create_time >= '2021-11-10T00:00:00.000+0800' AND create_time <= '2021-11-10T23:59:59.000+0800' AND up_agent_id = 35);
2021-11-10 20:16:11 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 20:16:11 | 耗时 1 ms | SQL 语句：
SELECT id, agent_id, sms_number_province, send_code, sms_number, sms_number_area, sms_number_operator, receipt_time, org_code, res_msgid, channel_cost_amount, agent_income_amount, sms_content, sms_type, state, channel_id, up_agent_id, consume_amount, state_desc, sms_count, income_amount, source_number, submit_time, create_time, sms_words, sub_type, up_agent_income_amount FROM t_send_record WHERE (create_time >= '2021-11-10T00:00:00.000+0800' AND create_time <= '2021-11-10T23:59:59.000+0800' AND up_agent_id = 35) ORDER BY create_time DESC LIMIT 10,10;
2021-11-10 20:16:11 INFO  http-nio-8008-exec-5 p6spy 2021-11-10 20:16:11 | 耗时 3 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.subordinateList()', '2021-11-10T20:16:11.866+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 14, ' request: "QueryRequest(pageSize=10, pageNum=2, field=null, order=null)" sendRecord: "SendRecordQuery(createStartTime=Wed Nov 10 00:00:00 CST 2021, createEndTime=Wed Nov 10 23:59:59 CST 2021, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '查询发送记录', 'vagent');
2021-11-10 20:16:23 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:16:23 | 耗时 0 ms | SQL 语句：
SELECT Id, Google_Key, Cash_Amount, Description, Remark, Agent_Password, Last_Login_IP, Level_Code, Available_Amount, Login_IP, EMail, Need_Bind_Google_Key, Create_Date, QQ, Up_Agent_Id, Agent_Account, Amount, Quota_Amount, Agent_Name, Login_Faild_Count, Data_MD5, Last_Login_Time, Phone_Number, Day_Limit, Send_Sms_Total, Create_User, State_Code, Pay_Password FROM t_agent WHERE (Agent_Account = 'vagent');
2021-11-10 20:16:23 INFO  http-nio-8008-exec-4 com.hero.sms.common.aspect.LimitAspect IP:169.254.130.216 第 1 次访问key为 [limit_agentSendRecordSubordinateStatistic169.254.130.216]，描述为 [统计下级代理发送记录数据] 的接口
2021-11-10 20:16:23 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:16:23 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) AS total, COUNT(IF(state = 1, 1, NULL)) AS sortingFail, COUNT(IF(state = 2, 1, NULL)) AS waitReq, COUNT(IF(state = 4, 1, NULL)) AS reqSuccess, COUNT(IF(state = 8, 1, NULL)) AS reqFail, COUNT(IF(state = 16, 1, NULL)) AS receiptSuccess, COUNT(IF(state = 32, 1, NULL)) AS receiptFail, COALESCE((SUM(IF(state = 4, sms_count, 0)) + SUM(IF(state = 8, sms_count, 0)) + SUM(IF(state = 16, sms_count, 0)) + SUM(IF(state = 32, sms_count, 0))), 0) AS smsCount, COALESCE(SUM(consume_amount), 0) AS consumeAmount, COALESCE(SUM(channel_cost_amount), 0) AS channelCost, COALESCE(SUM(agent_income_amount + up_agent_income_amount), 0) AS agentIncomeAmount, COALESCE(SUM(agent_income_amount), 0) AS selfAgentIncomeAmount, COALESCE(SUM(up_agent_income_amount), 0) AS upAgentIncomeAmount, COALESCE(SUM(income_amount), 0) AS incomeAmount FROM t_send_record WHERE (create_time >= '2021-11-10T00:00:00.000+0800' AND create_time <= '2021-11-10T23:59:59.000+0800' AND up_agent_id = 35);
2021-11-10 20:16:23 INFO  http-nio-8008-exec-4 p6spy 2021-11-10 20:16:23 | 耗时 2 ms | SQL 语句：
INSERT INTO t_agent_log (METHOD, CREATE_TIME, IP, location, TIME, PARAMS, OPERATION, USERNAME) VALUES ('com.hero.sms.controller.message.SendRecordController.subordinateStatistic()', '2021-11-10T20:16:23.379+0800', '169.254.130.216', '内网IP|0|0|内网IP|内网IP', 21, ' sendRecord: "SendRecordQuery(createStartTime=Wed Nov 10 00:00:00 CST 2021, createEndTime=Wed Nov 10 23:59:59 CST 2021, beforeApplyString=null, subTypeWith=null, searchCount=null, submitSuccessCount=null, groupId=null, isChannelIdFlag=null, isConsumeAmountFlag=null, notIsConsumeAmount=null, orderByCreateTimeWay=null, stateArray=null, submitStartTime=null, submitEndTime=null, resMsgidIsNullFlag=null)"', '统计下级代理发送记录数据', 'vagent');
2021-11-10 20:16:38 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin Application shutdown requested.
2021-11-10 20:16:38 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2021-11-10 20:16:38 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2021-11-10 20:16:38 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2021-11-10 20:16:38 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2021-11-10 20:16:38 INFO  RMI TCP Connection(2)-127.0.0.1 org.quartz.core.QuartzScheduler Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-11-10 20:16:38 INFO  RMI TCP Connection(2)-127.0.0.1 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2021-11-10 20:16:38 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2021-11-10 20:16:38 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2021-11-10 20:16:38 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2021-11-10 20:16:38 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2021-11-10 20:16:38 INFO  RMI TCP Connection(2)-127.0.0.1 com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2021-11-10 20:16:38 INFO  RMI TCP Connection(2)-127.0.0.1 com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
